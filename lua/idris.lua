 --------- SUPPORT DEFS ---------
idris = {}
idris.null = {}
local null = idris.null
idris.luaVersion = 51
idris.noRequire  = false
require("idris2-lua")
local idris = idris
local W = idris.W
---------- PREAMBLE DEFS ----------
idris["support"] = require('support')
idris["Foreign.deleteCmdInHistory"] = idris.support.deleteCmdInHistory
idris["Foreign.genHistoryIndex"] = idris.support.genHistoryIndex
idris["Foreign.getCmdFromHistory"] = idris.support.getCmdFromHistory
idris["Foreign.getGlobalClient"] = function(_) return global_client end
idris["Foreign.prim__bufexists"] = function(name) return function(_) return vim.fn.bufexists(name) end end
idris["Foreign.prim__connect"] = idris.support.connect
idris["Foreign.prim__cursorColumn"] = function(_) return vim.fn.col('.') end
idris["Foreign.prim__cursorLine"] = function(_) return vim.fn.line('.') end
idris["Foreign.prim__cursorWord"] = function(_) return vim.fn.expand('<cword>') end
idris["Foreign.prim__cursorWord'"] = function(_) return vim.fn.expand('<cWORD>') end
idris["Foreign.prim__filePath"] = function(_) return vim.fn.expand('%:p') end
idris["Foreign.prim__getGlobalBoolVar"] = idris.support.getGlobalBoolVar
idris["Foreign.prim__getGlobalIntVar"] = idris.support.getGlobalIntVar
idris["Foreign.prim__getGlobalStringVar"] = idris.support.getGlobalStringVar
idris["Foreign.prim__getSelection"] = idris.support.getSelection
idris["Foreign.prim__isBufferModified"] = idris.support.isBufferModified
idris["Foreign.prim__newPipe"] = function(_) return vim.loop.new_pipe(false) end
idris["Foreign.prim__newTCP"] = function(_) return vim.loop.new_tcp() end
idris["Foreign.prim__nnoremap"] = function(key) return function(cmd) return function(_) return vim.api.nvim_set_keymap('n', key, cmd, { noremap = true, silent = true }) end end end
idris["Foreign.prim__nvimCommand"] = function(cmd) return function(_) return vim.api.nvim_command(cmd) end end
idris["Foreign.prim__nvimEval"] = function(_) return function(expr) return function(_) return vim.api.nvim_eval(expr) end end end
idris["Foreign.prim__readStart"] = idris.support.readStart
idris["Foreign.prim__readStop"] = function(stream) return function(_) return stream:read_stop() end end
idris["Foreign.prim__saveBuffer"] = function(_) return vim.api.nvim_command('w') end
idris["Foreign.prim__sigtermHandle"] = function(handle) return function(_) return handle:kill(15) end end
idris["Foreign.prim__spawn"] = idris.support.spawn
idris["Foreign.prim__vnoremap"] = function(key) return function(cmd) return function(_) return vim.api.nvim_set_keymap('v', key, cmd, { noremap = true, silent = true }) end end end
idris["Foreign.prim__write"] = function(client) return function(data) return function(_) return client:write(data) end end end
idris["Foreign.putCmdInHistory"] = idris.support.putCmdInHistory
idris["Foreign.putLastSearch"] = idris.support.putLastSearch
idris["Foreign.setGlobalClient"] = function(client) return function(_) global_client = client end end
idris["Plugin.appendLines"] = idris.support.appendToBuffer
idris["Plugin.bufwinnr"] = function(s) return function(_) return vim.fn.bufwinnr(s) end end
idris["Plugin.currenttime"] = function(_) return vim.fn.strftime('%T') end
idris["Plugin.deleteLine"] = function(l) return function(_) return vim.fn.deletebufline('%', l) end end
idris["Plugin.fzfWindowBottom"] = idris.support.fzfWindowBottom
idris["Plugin.line"] = function(s) return function(_) return vim.fn.line(s) end end
idris["Plugin.matchlist"] = idris.support.matchlist
idris["Plugin.prim__spawnOpts"] = function(s) return function(h) return {args={'-p', 'contrib', '--ide-mode-socket', s}, stdio={nil, h, nil}} end end
idris["System.FFI.Lua.Dict.prim__getField"] = function(_) return function(_) return function(d) return function(n) return d[n] end end end end
---------- CTX DEFS ----------
idris["Prelude.Show.case[5936]protectEsc"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg3
                  __frame1[2] = {
                    nil,
                    nil
                  }
                  __frame1[2][0] = function()
                    return "\\&"
                  end
                  __frame1[2][1] = function()
                    return ""
                  end
                  __frame1[3] = __frame1[2][__frame1[1]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[4]
                end)()
            end
        end
    end
end
idris["Commands.case[4945]extractName"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil,
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil
          }
          __frame1[2]["1"] = function()
            local __frame2 = {
              nil,
              nil,
              nil,
              nil,
              nil,
              nil,
              nil,
              nil
            }
            local __e0 = __frame1[1]["arg1"]
            local __e1 = __frame1[1]["arg2"]
            __frame2[1] = __e0
            __frame2[2] = {
              nil
            }
            __frame2[2]["?"] = function()
              return __e1
            end
            __frame2[7] = __frame2[2][__frame2[1]]
            if __frame2[7] then
              __frame2[8] = __frame2[7]()
            else
              __frame2[3] = __arg0
              __frame2[4] = {
                nil,
                nil,
                nil,
                nil,
                nil,
                nil
              }
              __frame2[4]["="] = function()
                return "Equal"
              end
              __frame2[4]["()"] = function()
                return "MkUnit"
              end
              __frame2[4]["(,)"] = function()
                return "MkPair"
              end
              __frame2[4]["(**)"] = function()
                return "MkDPair"
              end
              __frame2[4]["**"] = function()
                return "MkDPair"
              end
              __frame2[4]["[]"] = function()
                return "Nil"
              end
              __frame2[5] = __frame2[4][__frame2[3]]
              if __frame2[5] then
                __frame2[6] = __frame2[5]()
              else
                __frame2[6] = __arg0
              end
              __frame2[8] = __frame2[6]
            end
            return __frame2[8]
          end
          __frame1[7] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[7] then
            __frame1[8] = __frame1[7]()
          else
            __frame1[3] = __arg0
            __frame1[4] = {
              nil,
              nil,
              nil,
              nil,
              nil,
              nil
            }
            __frame1[4]["="] = function()
              return "Equal"
            end
            __frame1[4]["()"] = function()
              return "MkUnit"
            end
            __frame1[4]["(,)"] = function()
              return "MkPair"
            end
            __frame1[4]["(**)"] = function()
              return "MkDPair"
            end
            __frame1[4]["**"] = function()
              return "MkDPair"
            end
            __frame1[4]["[]"] = function()
              return "Nil"
            end
            __frame1[5] = __frame1[4][__frame1[3]]
            if __frame1[5] then
              __frame1[6] = __frame1[5]()
            else
              __frame1[6] = __arg0
            end
            __frame1[8] = __frame1[6]
          end
          return __frame1[8]
        end)()
    end
end
idris["Prelude.Types.case[4755]takeUntil"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return (function()
                      local __frame1 = {
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame1[1] = __arg4
                      __frame1[2] = {
                        nil,
                        nil
                      }
                      __frame1[2][0] = function()
                        local __frame2 = {
                          nil,
                          nil
                        }
                        __frame2[1] = {}
                        __frame2[1]["tag"] = "0"
                        __frame2[2] = {}
                        __frame2[2]["tag"] = "1"
                        __frame2[2]["arg1"] = __arg1
                        __frame2[2]["arg2"] = __frame2[1]
                        return __frame2[2]
                      end
                      __frame1[2][1] = function()
                        local __frame2 = {
                          nil
                        }
                        __frame2[1] = {}
                        __frame2[1]["tag"] = "1"
                        __frame2[1]["arg1"] = __arg1
                        __frame2[1]["arg2"] = idris["Prelude.Types.takeUntil"](nil)(__arg3)(__arg2())
                        return __frame2[1]
                      end
                      __frame1[3] = __frame1[2][__frame1[1]]
                      if __frame1[3] then
                        __frame1[4] = __frame1[3]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame1[4]
                    end)()
                end
            end
        end
    end
end
idris["Prelude.Types.case[4191]toLower"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil,
            nil
          }
          __frame1[2][0] = function()
            return utf8.char(utf8.byte(__arg0) + 32)
          end
          __frame1[2][1] = function()
            return __arg0
          end
          __frame1[3] = __frame1[2][__frame1[1]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Prelude.Types.case[3999]substr"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg3
                  __frame1[2] = {
                    nil,
                    nil
                  }
                  __frame1[2][0] = function()
                    return utf8.sub(__arg0, bigint.tonumber(__arg2) + 1, bigint.tonumber(__arg2) + 1 + (bigint.tonumber(__arg1)) - 1)
                  end
                  __frame1[2][1] = function()
                    return ""
                  end
                  __frame1[3] = __frame1[2][__frame1[1]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[4]
                end)()
            end
        end
    end
end
idris["Utils.Path.case[3828]case block in isAbsolute'"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil,
            nil
          }
          __frame1[2]["1"] = function()
            local __frame2 = {
              nil,
              nil,
              nil,
              nil
            }
            local __e1 = __frame1[1]["arg1"]
            __frame2[1] = __e1
            __frame2[2] = {
              nil,
              nil
            }
            __frame2[2]["0"] = function()
              return 0
            end
            __frame2[2]["1"] = function()
              local __frame3 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame3[1] = __arg0
              __frame3[2] = {
                nil
              }
              __frame3[2]["0"] = function()
                local __e4 = __frame3[1]["arg2"]
                return __e4
              end
              __frame3[3] = __frame3[2][__frame3[1]["tag"]]
              if __frame3[3] then
                __frame3[4] = __frame3[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame3[4]
            end
            __frame2[3] = __frame2[2][__frame2[1]["tag"]]
            if __frame2[3] then
              __frame2[4] = __frame2[3]()
            else
              idris["error"]("Impossible else branch")
            end
            return __frame2[4]
          end
          __frame1[2]["0"] = function()
            return 1
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Utils.Path.case[3821]isAbsolute'"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil,
            nil
          }
          __frame1[2][0] = function()
            local __frame2 = {
              nil,
              nil,
              nil,
              nil
            }
            __frame2[1] = __arg0
            __frame2[2] = {
              nil
            }
            __frame2[2]["0"] = function()
              local __e0 = __frame2[1]["arg1"]
              return __e0
            end
            __frame2[3] = __frame2[2][__frame2[1]["tag"]]
            if __frame2[3] then
              __frame2[4] = __frame2[3]()
            else
              idris["error"]("Impossible else branch")
            end
            return idris["Utils.Path.case[3828]case block in isAbsolute'"](__arg0)(__frame2[4])
          end
          __frame1[2][1] = function()
            local __frame2 = {
              nil,
              nil,
              nil,
              nil
            }
            __frame2[1] = __arg0
            __frame2[2] = {
              nil
            }
            __frame2[2]["0"] = function()
              local __e1 = __frame2[1]["arg2"]
              return __e1
            end
            __frame2[3] = __frame2[2][__frame2[1]["tag"]]
            if __frame2[3] then
              __frame2[4] = __frame2[3]()
            else
              idris["error"]("Impossible else branch")
            end
            return __frame2[4]
          end
          __frame1[3] = __frame1[2][__frame1[1]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Utils.Path.case[3577]disk"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil,
            nil
          }
          __frame1[2]["1"] = function()
            local __frame2 = {
              nil
            }
            local __e1 = __frame1[1]["arg1"]
            __frame2[1] = {}
            __frame2[1]["tag"] = "0"
            __frame2[1]["arg1"] = __e1
            return __frame2[1]
          end
          __frame1[2]["0"] = function()
            local __frame2 = {
              nil
            }
            __frame2[1] = {}
            __frame2[1]["tag"] = "4"
            __frame2[1]["arg1"] = 1
            __frame2[1]["arg2"] = "Expect Disk"
            return __frame2[1]
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Utils.Path.case[3292]lexPath"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil
          }
          __frame1[2]["0"] = function()
            local __frame2 = {
              nil,
              nil,
              nil,
              nil
            }
            local __e2 = __frame1[1]["arg1"]
            local __e3 = __frame1[1]["arg2"]
            __frame2[1] = __e3
            __frame2[2] = {
              nil
            }
            __frame2[2]["0"] = function()
              local __frame3 = {
                nil,
                nil,
                nil,
                nil
              }
              local __e7 = __frame2[1]["arg2"]
              __frame3[1] = __e7
              __frame3[2] = {
                nil
              }
              __frame3[2]["0"] = function()
                return __e2
              end
              __frame3[3] = __frame3[2][__frame3[1]["tag"]]
              if __frame3[3] then
                __frame3[4] = __frame3[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame3[4]
            end
            __frame2[3] = __frame2[2][__frame2[1]["tag"]]
            if __frame2[3] then
              __frame2[4] = __frame2[3]()
            else
              idris["error"]("Impossible else branch")
            end
            return __frame2[4]
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Parser.Rule.Source.case[2907]identPart"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil
          }
          __frame1[2]["5"] = function()
            local __frame2 = {
              nil
            }
            local __e0 = __frame1[1]["arg1"]
            __frame2[1] = {}
            __frame2[1]["tag"] = "1"
            __frame2[1]["arg1"] = __e0
            return __frame2[1]
          end
          __frame1[4] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[4] then
            __frame1[5] = __frame1[4]()
          else
            __frame1[3] = {}
            __frame1[3]["tag"] = "0"
            __frame1[5] = __frame1[3]
          end
          return __frame1[5]
        end)()
    end
end
idris["Text.Parser.Core.case[2838]parse"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return (function()
                          local __frame1 = {
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          __frame1[1] = __arg5
                          __frame1[2] = {
                            nil,
                            nil
                          }
                          __frame1[2]["0"] = function()
                            local __frame2 = {
                              nil,
                              nil
                            }
                            local __e4 = __frame1[1]["arg3"]
                            local __e5 = __frame1[1]["arg4"]
                            __frame2[1] = {}
                            __frame2[1]["tag"] = "0"
                            __frame2[1]["arg1"] = __e4
                            __frame2[1]["arg2"] = __e5
                            __frame2[2] = {}
                            __frame2[2]["tag"] = "0"
                            __frame2[2]["arg1"] = __frame2[1]
                            return __frame2[2]
                          end
                          __frame1[2]["1"] = function()
                            local __frame2 = {
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil
                            }
                            local __e9 = __frame1[1]["arg2"]
                            local __e10 = __frame1[1]["arg3"]
                            __frame2[1] = __e9
                            __frame2[2] = {
                              nil
                            }
                            __frame2[2]["0"] = function()
                              local __e1 = __frame2[1]["arg1"]
                              return __e1
                            end
                            __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                            if __frame2[3] then
                              __frame2[4] = __frame2[3]()
                            else
                              idris["error"]("Impossible else branch")
                            end
                            __frame2[5] = {}
                            __frame2[5]["tag"] = "0"
                            __frame2[5]["arg1"] = __frame2[4]
                            __frame2[5]["arg2"] = __e10
                            __frame2[6] = {}
                            __frame2[6]["tag"] = "1"
                            __frame2[6]["arg1"] = __frame2[5]
                            return __frame2[6]
                          end
                          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                          if __frame1[3] then
                            __frame1[4] = __frame1[3]()
                          else
                            idris["error"]("Impossible else branch")
                          end
                          return __frame1[4]
                        end)()
                    end
                end
            end
        end
    end
end
idris["Parser.Rule.Source.case[2785]case block in exactIdent"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg3
                  __frame1[2] = {
                    nil,
                    nil
                  }
                  __frame1[2][0] = function()
                    local __frame2 = {
                      nil,
                      nil
                    }
                    __frame2[1] = {}
                    __frame2[1]["tag"] = "0"
                    __frame2[2] = {}
                    __frame2[2]["tag"] = "1"
                    __frame2[2]["arg1"] = __frame2[1]
                    return __frame2[2]
                  end
                  __frame1[2][1] = function()
                    local __frame2 = {
                      nil
                    }
                    __frame2[1] = {}
                    __frame2[1]["tag"] = "0"
                    return __frame2[1]
                  end
                  __frame1[3] = __frame1[2][__frame1[1]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[4]
                end)()
            end
        end
    end
end
idris["Parser.Rule.Source.case[2684]case block in symbol"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg3
                  __frame1[2] = {
                    nil,
                    nil
                  }
                  __frame1[2][0] = function()
                    local __frame2 = {
                      nil,
                      nil
                    }
                    __frame2[1] = {}
                    __frame2[1]["tag"] = "0"
                    __frame2[2] = {}
                    __frame2[2]["tag"] = "1"
                    __frame2[2]["arg1"] = __frame2[1]
                    return __frame2[2]
                  end
                  __frame1[2][1] = function()
                    local __frame2 = {
                      nil
                    }
                    __frame2[1] = {}
                    __frame2[1]["tag"] = "0"
                    return __frame2[1]
                  end
                  __frame1[3] = __frame1[2][__frame1[1]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[4]
                end)()
            end
        end
    end
end
idris["Parser.Rule.Source.case[2618]strLit"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil
          }
          __frame1[2]["3"] = function()
            local __frame2 = {
              nil
            }
            local __e0 = __frame1[1]["arg1"]
            __frame2[1] = {}
            __frame2[1]["tag"] = "1"
            __frame2[1]["arg1"] = __e0
            return __frame2[1]
          end
          __frame1[4] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[4] then
            __frame1[5] = __frame1[4]()
          else
            __frame1[3] = {}
            __frame1[3]["tag"] = "0"
            __frame1[5] = __frame1[3]
          end
          return __frame1[5]
        end)()
    end
end
idris["Parser.Rule.Source.case[2565]intLit"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil
          }
          __frame1[2]["2"] = function()
            local __frame2 = {
              nil
            }
            local __e0 = __frame1[1]["arg1"]
            __frame2[1] = {}
            __frame2[1]["tag"] = "1"
            __frame2[1]["arg1"] = __e0
            return __frame2[1]
          end
          __frame1[4] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[4] then
            __frame1[5] = __frame1[4]()
          else
            __frame1[3] = {}
            __frame1[3]["tag"] = "0"
            __frame1[5] = __frame1[3]
          end
          return __frame1[5]
        end)()
    end
end
idris["Prelude.EqOrd.case[2402]compare"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return (function()
                                      local __frame1 = {
                                        nil,
                                        nil,
                                        nil,
                                        nil
                                      }
                                      __frame1[1] = __arg8
                                      __frame1[2] = {
                                        nil,
                                        nil
                                      }
                                      __frame1[2][0] = function()
                                        local __frame2 = {
                                          nil,
                                          nil,
                                          nil,
                                          nil
                                        }
                                        __frame2[1] = __arg2
                                        __frame2[2] = {
                                          nil
                                        }
                                        __frame2[2]["0"] = function()
                                          local __e2 = __frame2[1]["arg2"]
                                          return __e2(__arg4)(__arg6)
                                        end
                                        __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                                        if __frame2[3] then
                                          __frame2[4] = __frame2[3]()
                                        else
                                          idris["error"]("Impossible else branch")
                                        end
                                        return __frame2[4]
                                      end
                                      __frame1[2][1] = function()
                                        local __frame2 = {
                                          nil,
                                          nil,
                                          nil,
                                          nil
                                        }
                                        __frame2[1] = __arg3
                                        __frame2[2] = {
                                          nil
                                        }
                                        __frame2[2]["0"] = function()
                                          local __e2 = __frame2[1]["arg2"]
                                          return __e2(__arg5)(__arg7)
                                        end
                                        __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                                        if __frame2[3] then
                                          __frame2[4] = __frame2[3]()
                                        else
                                          idris["error"]("Impossible else branch")
                                        end
                                        return __frame2[4]
                                      end
                                      __frame1[3] = __frame1[2][__frame1[1]]
                                      if __frame1[3] then
                                        __frame1[4] = __frame1[3]()
                                      else
                                        idris["error"]("Impossible else branch")
                                      end
                                      return __frame1[4]
                                    end)()
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Prelude.EqOrd.case[2277]max"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return (function()
                              local __frame1 = {
                                nil,
                                nil,
                                nil,
                                nil
                              }
                              __frame1[1] = __arg6
                              __frame1[2] = {
                                nil,
                                nil
                              }
                              __frame1[2][0] = function()
                                return __arg5
                              end
                              __frame1[2][1] = function()
                                return __arg4
                              end
                              __frame1[3] = __frame1[2][__frame1[1]]
                              if __frame1[3] then
                                __frame1[4] = __frame1[3]()
                              else
                                idris["error"]("Impossible else branch")
                              end
                              return __frame1[4]
                            end)()
                        end
                    end
                end
            end
        end
    end
end
idris["Prelude.EqOrd.case[2235]min"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return (function()
                              local __frame1 = {
                                nil,
                                nil,
                                nil,
                                nil
                              }
                              __frame1[1] = __arg6
                              __frame1[2] = {
                                nil,
                                nil
                              }
                              __frame1[2][0] = function()
                                return __arg5
                              end
                              __frame1[2][1] = function()
                                return __arg4
                              end
                              __frame1[3] = __frame1[2][__frame1[1]]
                              if __frame1[3] then
                                __frame1[4] = __frame1[3]()
                              else
                                idris["error"]("Impossible else branch")
                              end
                              return __frame1[4]
                            end)()
                        end
                    end
                end
            end
        end
    end
end
idris["Data.List.case[2103]case block in span"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return (function()
                      local __frame1 = {
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame1[1] = __arg4
                      __frame1[2] = {
                        nil
                      }
                      __frame1[2]["0"] = function()
                        local __frame2 = {
                          nil,
                          nil
                        }
                        local __e2 = __frame1[1]["arg1"]
                        local __e3 = __frame1[1]["arg2"]
                        __frame2[1] = {}
                        __frame2[1]["tag"] = "1"
                        __frame2[1]["arg1"] = __arg3
                        __frame2[1]["arg2"] = __e2
                        __frame2[2] = {}
                        __frame2[2]["tag"] = "0"
                        __frame2[2]["arg1"] = __frame2[1]
                        __frame2[2]["arg2"] = __e3
                        return __frame2[2]
                      end
                      __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                      if __frame1[3] then
                        __frame1[4] = __frame1[3]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame1[4]
                    end)()
                end
            end
        end
    end
end
idris["Text.Parser.Core.case[2101]doParse"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return (function()
                              local __frame1 = {
                                nil,
                                nil,
                                nil,
                                nil
                              }
                              __frame1[1] = __arg6
                              __frame1[2] = {
                                nil
                              }
                              __frame1[2]["0"] = function()
                                local __frame2 = {
                                  nil
                                }
                                local __e2 = __frame1[1]["arg1"]
                                local __e4 = __frame1[1]["arg3"]
                                local __e5 = __frame1[1]["arg4"]
                                __frame2[1] = {}
                                __frame2[1]["tag"] = "0"
                                __frame2[1]["arg1"] = __e2
                                __frame2[1]["arg2"] = 0
                                __frame2[1]["arg3"] = __e4
                                __frame2[1]["arg4"] = __e5
                                return __frame2[1]
                              end
                              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                              if __frame1[3] then
                                __frame1[4] = __frame1[3]()
                              else
                                __frame1[4] = __arg6
                              end
                              return __frame1[4]
                            end)()
                        end
                    end
                end
            end
        end
    end
end
idris["Data.List.case[2083]span"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return (function()
                      local __frame1 = {
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame1[1] = __arg4
                      __frame1[2] = {
                        nil,
                        nil
                      }
                      __frame1[2][0] = function()
                        return idris["Data.List.case[2103]case block in span"](nil)(__arg2)(__arg3)(__arg1)(idris["Data.List.span"](nil)(__arg3)(__arg2))
                      end
                      __frame1[2][1] = function()
                        local __frame2 = {
                          nil,
                          nil,
                          nil
                        }
                        __frame2[1] = {}
                        __frame2[1]["tag"] = "0"
                        __frame2[2] = {}
                        __frame2[2]["tag"] = "1"
                        __frame2[2]["arg1"] = __arg1
                        __frame2[2]["arg2"] = __arg2
                        __frame2[3] = {}
                        __frame2[3]["tag"] = "0"
                        __frame2[3]["arg1"] = __frame2[1]
                        __frame2[3]["arg2"] = __frame2[2]
                        return __frame2[3]
                      end
                      __frame1[3] = __frame1[2][__frame1[1]]
                      if __frame1[3] then
                        __frame1[4] = __frame1[3]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame1[4]
                    end)()
                end
            end
        end
    end
end
idris["Text.Parser.Core.case[2040]doParse"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return (function()
                              local __frame1 = {
                                nil,
                                nil,
                                nil,
                                nil
                              }
                              __frame1[1] = __arg6
                              __frame1[2] = {
                                nil
                              }
                              __frame1[2]["0"] = function()
                                local __frame2 = {
                                  nil
                                }
                                local __e2 = __frame1[1]["arg1"]
                                local __e4 = __frame1[1]["arg3"]
                                local __e5 = __frame1[1]["arg4"]
                                __frame2[1] = {}
                                __frame2[1]["tag"] = "0"
                                __frame2[1]["arg1"] = __e2
                                __frame2[1]["arg2"] = 1
                                __frame2[1]["arg3"] = __e4
                                __frame2[1]["arg4"] = __e5
                                return __frame2[1]
                              end
                              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                              if __frame1[3] then
                                __frame1[4] = __frame1[3]()
                              else
                                __frame1[4] = __arg6
                              end
                              return __frame1[4]
                            end)()
                        end
                    end
                end
            end
        end
    end
end
idris["Data.List.case[1851]deleteBy"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return (function()
                          local __frame1 = {
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          __frame1[1] = __arg5
                          __frame1[2] = {
                            nil,
                            nil
                          }
                          __frame1[2][0] = function()
                            return __arg3
                          end
                          __frame1[2][1] = function()
                            local __frame2 = {
                              nil
                            }
                            __frame2[1] = {}
                            __frame2[1]["tag"] = "1"
                            __frame2[1]["arg1"] = __arg2
                            __frame2[1]["arg2"] = idris["Data.List.deleteBy"](nil)(__arg4)(__arg1)(__arg3)
                            return __frame2[1]
                          end
                          __frame1[3] = __frame1[2][__frame1[1]]
                          if __frame1[3] then
                            __frame1[4] = __frame1[3]()
                          else
                            idris["error"]("Impossible else branch")
                          end
                          return __frame1[4]
                        end)()
                    end
                end
            end
        end
    end
end
idris["Data.List.case[1578]find"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return (function()
                      local __frame1 = {
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame1[1] = __arg4
                      __frame1[2] = {
                        nil,
                        nil
                      }
                      __frame1[2][0] = function()
                        local __frame2 = {
                          nil
                        }
                        __frame2[1] = {}
                        __frame2[1]["tag"] = "1"
                        __frame2[1]["arg1"] = __arg1
                        return __frame2[1]
                      end
                      __frame1[2][1] = function()
                        return idris["Data.List.find"](nil)(__arg3)(__arg2)
                      end
                      __frame1[3] = __frame1[2][__frame1[1]]
                      if __frame1[3] then
                        __frame1[4] = __frame1[3]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame1[4]
                    end)()
                end
            end
        end
    end
end
idris["Data.List.case[1523]filter"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return (function()
                      local __frame1 = {
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame1[1] = __arg4
                      __frame1[2] = {
                        nil,
                        nil
                      }
                      __frame1[2][0] = function()
                        local __frame2 = {
                          nil
                        }
                        __frame2[1] = {}
                        __frame2[1]["tag"] = "1"
                        __frame2[1]["arg1"] = __arg1
                        __frame2[1]["arg2"] = idris["Data.List.filter"](nil)(__arg3)(__arg2)
                        return __frame2[1]
                      end
                      __frame1[2][1] = function()
                        return idris["Data.List.filter"](nil)(__arg3)(__arg2)
                      end
                      __frame1[3] = __frame1[2][__frame1[1]]
                      if __frame1[3] then
                        __frame1[4] = __frame1[3]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame1[4]
                    end)()
                end
            end
        end
    end
end
idris["Data.List.case[1469]dropWhile"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return (function()
                      local __frame1 = {
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame1[1] = __arg4
                      __frame1[2] = {
                        nil,
                        nil
                      }
                      __frame1[2][0] = function()
                        return idris["Data.List.dropWhile"](nil)(__arg3)(__arg2)
                      end
                      __frame1[2][1] = function()
                        local __frame2 = {
                          nil
                        }
                        __frame2[1] = {}
                        __frame2[1]["tag"] = "1"
                        __frame2[1]["arg1"] = __arg1
                        __frame2[1]["arg2"] = __arg2
                        return __frame2[1]
                      end
                      __frame1[3] = __frame1[2][__frame1[1]]
                      if __frame1[3] then
                        __frame1[4] = __frame1[3]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame1[4]
                    end)()
                end
            end
        end
    end
end
idris["Prelude.EqOrd.case[1301]case block in compare"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg2
              __frame1[2] = {
                nil,
                nil
              }
              __frame1[2][0] = function()
                return 1
              end
              __frame1[2][1] = function()
                return 2
              end
              __frame1[3] = __frame1[2][__frame1[1]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["Text.Lexer.Core.case[1270]scan"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return (function()
                      local __frame1 = {
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame1[1] = __arg4
                      __frame1[2] = {
                        nil,
                        nil
                      }
                      __frame1[2][0] = function()
                        local __frame2 = {
                          nil,
                          nil,
                          nil
                        }
                        __frame2[1] = {}
                        __frame2[1]["tag"] = "1"
                        __frame2[1]["arg1"] = __arg1
                        __frame2[1]["arg2"] = __arg3
                        __frame2[2] = {}
                        __frame2[2]["tag"] = "0"
                        __frame2[2]["arg1"] = __frame2[1]
                        __frame2[2]["arg2"] = __arg2
                        __frame2[3] = {}
                        __frame2[3]["tag"] = "1"
                        __frame2[3]["arg1"] = __frame2[2]
                        return __frame2[3]
                      end
                      __frame1[2][1] = function()
                        local __frame2 = {
                          nil
                        }
                        __frame2[1] = {}
                        __frame2[1]["tag"] = "0"
                        return __frame2[1]
                      end
                      __frame1[3] = __frame1[2][__frame1[1]]
                      if __frame1[3] then
                        __frame1[4] = __frame1[3]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame1[4]
                    end)()
                end
            end
        end
    end
end
idris["Prelude.EqOrd.case[1187]case block in compare"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg2
              __frame1[2] = {
                nil,
                nil
              }
              __frame1[2][0] = function()
                return 1
              end
              __frame1[2][1] = function()
                return 2
              end
              __frame1[3] = __frame1[2][__frame1[1]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["Prelude.EqOrd.case[1153]max"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg2
              __frame1[2] = {
                nil,
                nil
              }
              __frame1[2][0] = function()
                return __arg1
              end
              __frame1[2][1] = function()
                return __arg0
              end
              __frame1[3] = __frame1[2][__frame1[1]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["Prelude.EqOrd.case[1139]min"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg2
              __frame1[2] = {
                nil,
                nil
              }
              __frame1[2][0] = function()
                return __arg1
              end
              __frame1[2][1] = function()
                return __arg0
              end
              __frame1[3] = __frame1[2][__frame1[1]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["Text.Bounded.case[1020]case block in mergeBounds"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return (function()
                              local __frame1 = {
                                nil,
                                nil,
                                nil,
                                nil
                              }
                              __frame1[1] = __arg6
                              __frame1[2] = {
                                nil
                              }
                              __frame1[2]["0"] = function()
                                local __frame2 = {
                                  nil,
                                  nil,
                                  nil,
                                  nil,
                                  nil
                                }
                                local __e2 = __frame1[1]["arg1"]
                                local __e3 = __frame1[1]["arg2"]
                                __frame2[1] = __arg2
                                __frame2[2] = {
                                  nil
                                }
                                __frame2[2]["0"] = function()
                                  local __e1 = __frame2[1]["arg1"]
                                  return __e1
                                end
                                __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                                if __frame2[3] then
                                  __frame2[4] = __frame2[3]()
                                else
                                  idris["error"]("Impossible else branch")
                                end
                                __frame2[5] = {}
                                __frame2[5]["tag"] = "0"
                                __frame2[5]["arg1"] = __frame2[4]
                                __frame2[5]["arg2"] = 1
                                __frame2[5]["arg3"] = __arg4
                                __frame2[5]["arg4"] = __arg5
                                __frame2[5]["arg5"] = __e2
                                __frame2[5]["arg6"] = __e3
                                return __frame2[5]
                              end
                              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                              if __frame1[3] then
                                __frame1[4] = __frame1[3]()
                              else
                                idris["error"]("Impossible else branch")
                              end
                              return __frame1[4]
                            end)()
                        end
                    end
                end
            end
        end
    end
end
idris["System.File.case[450]modeStr"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil,
        nil
      }
      __frame1[2][0] = function()
        return "ab+"
      end
      __frame1[2][1] = function()
        return "a+"
      end
      __frame1[3] = __frame1[2][__frame1[1]]
      if __frame1[3] then
        __frame1[4] = __frame1[3]()
      else
        idris["error"]("Impossible else branch")
      end
      return __frame1[4]
    end)()
end
idris["System.File.case[440]modeStr"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil,
        nil
      }
      __frame1[2][0] = function()
        return "wb+"
      end
      __frame1[2][1] = function()
        return "w+"
      end
      __frame1[3] = __frame1[2][__frame1[1]]
      if __frame1[3] then
        __frame1[4] = __frame1[3]()
      else
        idris["error"]("Impossible else branch")
      end
      return __frame1[4]
    end)()
end
idris["System.File.case[430]modeStr"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil,
        nil
      }
      __frame1[2][0] = function()
        return "rb+"
      end
      __frame1[2][1] = function()
        return "r+"
      end
      __frame1[3] = __frame1[2][__frame1[1]]
      if __frame1[3] then
        __frame1[4] = __frame1[3]()
      else
        idris["error"]("Impossible else branch")
      end
      return __frame1[4]
    end)()
end
idris["System.File.case[420]modeStr"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil,
        nil
      }
      __frame1[2][0] = function()
        return "ab"
      end
      __frame1[2][1] = function()
        return "a"
      end
      __frame1[3] = __frame1[2][__frame1[1]]
      if __frame1[3] then
        __frame1[4] = __frame1[3]()
      else
        idris["error"]("Impossible else branch")
      end
      return __frame1[4]
    end)()
end
idris["System.File.case[410]modeStr"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil,
        nil
      }
      __frame1[2][0] = function()
        return "wb"
      end
      __frame1[2][1] = function()
        return "w"
      end
      __frame1[3] = __frame1[2][__frame1[1]]
      if __frame1[3] then
        __frame1[4] = __frame1[3]()
      else
        idris["error"]("Impossible else branch")
      end
      return __frame1[4]
    end)()
end
idris["System.File.case[400]modeStr"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil,
        nil
      }
      __frame1[2][0] = function()
        return "rb"
      end
      __frame1[2][1] = function()
        return "r"
      end
      __frame1[3] = __frame1[2][__frame1[1]]
      if __frame1[3] then
        __frame1[4] = __frame1[3]()
      else
        idris["error"]("Impossible else branch")
      end
      return __frame1[4]
    end)()
end
idris["Idris.IDEMode.Parser.case[386]idelex,notComment"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg2
              __frame1[2] = {
                nil
              }
              __frame1[2]["9"] = function()
                return 1
              end
              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                __frame1[4] = 0
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["Idris.IDEMode.Parser.3567:381:notComment"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil
          }
          __frame1[2]["0"] = function()
            local __e1 = __frame1[1]["arg1"]
            return __e1
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return idris["Idris.IDEMode.Parser.case[386]idelex,notComment"](__arg0)(__arg1)(__frame1[4])
        end)()
    end
end
idris["Parser.Rule.Source.4124:2355:isEOI"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil
      }
      __frame1[2]["12"] = function()
        return 0
      end
      __frame1[3] = __frame1[2][__frame1[1]["tag"]]
      if __frame1[3] then
        __frame1[4] = __frame1[3]()
      else
        __frame1[4] = 1
      end
      return __frame1[4]
    end)()
end
idris["Prelude.Types.4123:4203:hexChars"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      __frame1[2] = {}
      __frame1[2]["tag"] = "1"
      __frame1[2]["arg1"] = "F"
      __frame1[2]["arg2"] = __frame1[1]
      __frame1[3] = {}
      __frame1[3]["tag"] = "1"
      __frame1[3]["arg1"] = "E"
      __frame1[3]["arg2"] = __frame1[2]
      __frame1[4] = {}
      __frame1[4]["tag"] = "1"
      __frame1[4]["arg1"] = "D"
      __frame1[4]["arg2"] = __frame1[3]
      __frame1[5] = {}
      __frame1[5]["tag"] = "1"
      __frame1[5]["arg1"] = "C"
      __frame1[5]["arg2"] = __frame1[4]
      __frame1[6] = {}
      __frame1[6]["tag"] = "1"
      __frame1[6]["arg1"] = "B"
      __frame1[6]["arg2"] = __frame1[5]
      __frame1[7] = {}
      __frame1[7]["tag"] = "1"
      __frame1[7]["arg1"] = "A"
      __frame1[7]["arg2"] = __frame1[6]
      __frame1[8] = {}
      __frame1[8]["tag"] = "1"
      __frame1[8]["arg1"] = "9"
      __frame1[8]["arg2"] = __frame1[7]
      __frame1[9] = {}
      __frame1[9]["tag"] = "1"
      __frame1[9]["arg1"] = "8"
      __frame1[9]["arg2"] = __frame1[8]
      __frame1[10] = {}
      __frame1[10]["tag"] = "1"
      __frame1[10]["arg1"] = "7"
      __frame1[10]["arg2"] = __frame1[9]
      __frame1[11] = {}
      __frame1[11]["tag"] = "1"
      __frame1[11]["arg1"] = "6"
      __frame1[11]["arg2"] = __frame1[10]
      __frame1[12] = {}
      __frame1[12]["tag"] = "1"
      __frame1[12]["arg1"] = "5"
      __frame1[12]["arg2"] = __frame1[11]
      __frame1[13] = {}
      __frame1[13]["tag"] = "1"
      __frame1[13]["arg1"] = "4"
      __frame1[13]["arg2"] = __frame1[12]
      __frame1[14] = {}
      __frame1[14]["tag"] = "1"
      __frame1[14]["arg1"] = "3"
      __frame1[14]["arg2"] = __frame1[13]
      __frame1[15] = {}
      __frame1[15]["tag"] = "1"
      __frame1[15]["arg1"] = "2"
      __frame1[15]["arg2"] = __frame1[14]
      __frame1[16] = {}
      __frame1[16]["tag"] = "1"
      __frame1[16]["arg1"] = "1"
      __frame1[16]["arg2"] = __frame1[15]
      __frame1[17] = {}
      __frame1[17]["tag"] = "1"
      __frame1[17]["arg1"] = "0"
      __frame1[17]["arg2"] = __frame1[16]
      return __frame1[17]
    end)()
end
idris["Idris.IDEMode.Commands.3280:3034:getMode"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return (function()
                      local __frame1 = {
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame1[1] = __arg4
                      __frame1[2] = {
                        nil,
                        nil
                      }
                      __frame1[2][0] = function()
                        local __frame2 = {
                          nil
                        }
                        __frame2[1] = {}
                        __frame2[1]["tag"] = "4"
                        __frame2[1]["arg1"] = "all"
                        return __frame2[1]
                      end
                      __frame1[2][1] = function()
                        local __frame2 = {
                          nil
                        }
                        __frame2[1] = {}
                        __frame2[1]["tag"] = "4"
                        __frame2[1]["arg1"] = "other"
                        return __frame2[1]
                      end
                      __frame1[3] = __frame1[2][__frame1[1]]
                      if __frame1[3] then
                        __frame1[4] = __frame1[3]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame1[4]
                    end)()
                end
            end
        end
    end
end
idris["Prelude.Show.1638:6006:getAt"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg1
              __frame1[2] = {
                nil
              }
              __frame1[2]["0"] = function()
                local __frame2 = {
                  nil,
                  nil,
                  nil,
                  nil,
                  nil,
                  nil,
                  nil,
                  nil
                }
                __frame2[1] = __arg2
                __frame2[2] = {
                  nil
                }
                __frame2[2]["1"] = function()
                  local __frame3 = {
                    nil
                  }
                  local __e3 = __frame2[1]["arg1"]
                  __frame3[1] = {}
                  __frame3[1]["tag"] = "1"
                  __frame3[1]["arg1"] = __e3
                  return __frame3[1]
                end
                __frame2[7] = __frame2[2][__frame2[1]["tag"]]
                if __frame2[7] then
                  __frame2[8] = __frame2[7]()
                else
                  __frame2[3] = __arg2
                  __frame2[4] = {
                    nil
                  }
                  __frame2[4]["0"] = function()
                    local __frame3 = {
                      nil
                    }
                    __frame3[1] = {}
                    __frame3[1]["tag"] = "0"
                    return __frame3[1]
                  end
                  __frame2[5] = __frame2[4][__frame2[3]["tag"]]
                  if __frame2[5] then
                    __frame2[6] = __frame2[5]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  __frame2[8] = __frame2[6]
                end
                return __frame2[8]
              end
              __frame1[11] = __frame1[2][bigint.tostring(__frame1[1])]
              if __frame1[11] then
                __frame1[12] = __frame1[11]()
              else
                local __e1 = __arg1 - bigint:new("1")
                __frame1[3] = __arg2
                __frame1[4] = {
                  nil
                }
                __frame1[4]["1"] = function()
                  local __e7 = __frame1[3]["arg2"]
                  return idris["Prelude.Show.1638:6006:getAt"](__arg0)(__e1)(__e7)
                end
                __frame1[9] = __frame1[4][__frame1[3]["tag"]]
                if __frame1[9] then
                  __frame1[10] = __frame1[9]()
                else
                  __frame1[5] = __arg2
                  __frame1[6] = {
                    nil
                  }
                  __frame1[6]["0"] = function()
                    local __frame2 = {
                      nil
                    }
                    __frame2[1] = {}
                    __frame2[1]["tag"] = "0"
                    return __frame2[1]
                  end
                  __frame1[7] = __frame1[6][__frame1[5]["tag"]]
                  if __frame1[7] then
                    __frame1[8] = __frame1[7]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  __frame1[10] = __frame1[8]
                end
                __frame1[12] = __frame1[10]
              end
              return __frame1[12]
            end)()
        end
    end
end
idris["Idris.IDEMode.Commands.3729:3322:escapeChar"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil,
        nil
      }
      __frame1[2]["\\"] = function()
        local __frame2 = {
          nil,
          nil,
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "0"
        __frame2[2] = {}
        __frame2[2]["tag"] = "1"
        __frame2[2]["arg1"] = "\\"
        __frame2[2]["arg2"] = __frame2[1]
        __frame2[3] = {}
        __frame2[3]["tag"] = "1"
        __frame2[3]["arg1"] = "\\"
        __frame2[3]["arg2"] = __frame2[2]
        return __frame2[3]
      end
      __frame1[2]["\""] = function()
        local __frame2 = {
          nil,
          nil,
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "0"
        __frame2[2] = {}
        __frame2[2]["tag"] = "1"
        __frame2[2]["arg1"] = "\""
        __frame2[2]["arg2"] = __frame2[1]
        __frame2[3] = {}
        __frame2[3]["tag"] = "1"
        __frame2[3]["arg1"] = "\\"
        __frame2[3]["arg2"] = __frame2[2]
        return __frame2[3]
      end
      __frame1[5] = __frame1[2][__frame1[1]]
      if __frame1[5] then
        __frame1[6] = __frame1[5]()
      else
        __frame1[3] = {}
        __frame1[3]["tag"] = "0"
        __frame1[4] = {}
        __frame1[4]["tag"] = "1"
        __frame1[4]["arg1"] = __arg0
        __frame1[4]["arg2"] = __frame1[3]
        __frame1[6] = __frame1[4]
      end
      return __frame1[6]
    end)()
end
idris["Prelude.Show.1638:6005:asciiTab"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      __frame1[2] = {}
      __frame1[2]["tag"] = "1"
      __frame1[2]["arg1"] = "US"
      __frame1[2]["arg2"] = __frame1[1]
      __frame1[3] = {}
      __frame1[3]["tag"] = "1"
      __frame1[3]["arg1"] = "RS"
      __frame1[3]["arg2"] = __frame1[2]
      __frame1[4] = {}
      __frame1[4]["tag"] = "1"
      __frame1[4]["arg1"] = "GS"
      __frame1[4]["arg2"] = __frame1[3]
      __frame1[5] = {}
      __frame1[5]["tag"] = "1"
      __frame1[5]["arg1"] = "FS"
      __frame1[5]["arg2"] = __frame1[4]
      __frame1[6] = {}
      __frame1[6]["tag"] = "1"
      __frame1[6]["arg1"] = "ESC"
      __frame1[6]["arg2"] = __frame1[5]
      __frame1[7] = {}
      __frame1[7]["tag"] = "1"
      __frame1[7]["arg1"] = "SUB"
      __frame1[7]["arg2"] = __frame1[6]
      __frame1[8] = {}
      __frame1[8]["tag"] = "1"
      __frame1[8]["arg1"] = "EM"
      __frame1[8]["arg2"] = __frame1[7]
      __frame1[9] = {}
      __frame1[9]["tag"] = "1"
      __frame1[9]["arg1"] = "CAN"
      __frame1[9]["arg2"] = __frame1[8]
      __frame1[10] = {}
      __frame1[10]["tag"] = "1"
      __frame1[10]["arg1"] = "ETB"
      __frame1[10]["arg2"] = __frame1[9]
      __frame1[11] = {}
      __frame1[11]["tag"] = "1"
      __frame1[11]["arg1"] = "SYN"
      __frame1[11]["arg2"] = __frame1[10]
      __frame1[12] = {}
      __frame1[12]["tag"] = "1"
      __frame1[12]["arg1"] = "NAK"
      __frame1[12]["arg2"] = __frame1[11]
      __frame1[13] = {}
      __frame1[13]["tag"] = "1"
      __frame1[13]["arg1"] = "DC4"
      __frame1[13]["arg2"] = __frame1[12]
      __frame1[14] = {}
      __frame1[14]["tag"] = "1"
      __frame1[14]["arg1"] = "DC3"
      __frame1[14]["arg2"] = __frame1[13]
      __frame1[15] = {}
      __frame1[15]["tag"] = "1"
      __frame1[15]["arg1"] = "DC2"
      __frame1[15]["arg2"] = __frame1[14]
      __frame1[16] = {}
      __frame1[16]["tag"] = "1"
      __frame1[16]["arg1"] = "DC1"
      __frame1[16]["arg2"] = __frame1[15]
      __frame1[17] = {}
      __frame1[17]["tag"] = "1"
      __frame1[17]["arg1"] = "DLE"
      __frame1[17]["arg2"] = __frame1[16]
      __frame1[18] = {}
      __frame1[18]["tag"] = "1"
      __frame1[18]["arg1"] = "SI"
      __frame1[18]["arg2"] = __frame1[17]
      __frame1[19] = {}
      __frame1[19]["tag"] = "1"
      __frame1[19]["arg1"] = "SO"
      __frame1[19]["arg2"] = __frame1[18]
      __frame1[20] = {}
      __frame1[20]["tag"] = "1"
      __frame1[20]["arg1"] = "CR"
      __frame1[20]["arg2"] = __frame1[19]
      __frame1[21] = {}
      __frame1[21]["tag"] = "1"
      __frame1[21]["arg1"] = "FF"
      __frame1[21]["arg2"] = __frame1[20]
      __frame1[22] = {}
      __frame1[22]["tag"] = "1"
      __frame1[22]["arg1"] = "VT"
      __frame1[22]["arg2"] = __frame1[21]
      __frame1[23] = {}
      __frame1[23]["tag"] = "1"
      __frame1[23]["arg1"] = "LF"
      __frame1[23]["arg2"] = __frame1[22]
      __frame1[24] = {}
      __frame1[24]["tag"] = "1"
      __frame1[24]["arg1"] = "HT"
      __frame1[24]["arg2"] = __frame1[23]
      __frame1[25] = {}
      __frame1[25]["tag"] = "1"
      __frame1[25]["arg1"] = "BS"
      __frame1[25]["arg2"] = __frame1[24]
      __frame1[26] = {}
      __frame1[26]["tag"] = "1"
      __frame1[26]["arg1"] = "BEL"
      __frame1[26]["arg2"] = __frame1[25]
      __frame1[27] = {}
      __frame1[27]["tag"] = "1"
      __frame1[27]["arg1"] = "ACK"
      __frame1[27]["arg2"] = __frame1[26]
      __frame1[28] = {}
      __frame1[28]["tag"] = "1"
      __frame1[28]["arg1"] = "ENQ"
      __frame1[28]["arg2"] = __frame1[27]
      __frame1[29] = {}
      __frame1[29]["tag"] = "1"
      __frame1[29]["arg1"] = "EOT"
      __frame1[29]["arg2"] = __frame1[28]
      __frame1[30] = {}
      __frame1[30]["tag"] = "1"
      __frame1[30]["arg1"] = "ETX"
      __frame1[30]["arg2"] = __frame1[29]
      __frame1[31] = {}
      __frame1[31]["tag"] = "1"
      __frame1[31]["arg1"] = "STX"
      __frame1[31]["arg2"] = __frame1[30]
      __frame1[32] = {}
      __frame1[32]["tag"] = "1"
      __frame1[32]["arg1"] = "SOH"
      __frame1[32]["arg2"] = __frame1[31]
      __frame1[33] = {}
      __frame1[33]["tag"] = "1"
      __frame1[33]["arg1"] = "NUL"
      __frame1[33]["arg2"] = __frame1[32]
      return __frame1[33]
    end)()
end
idris["Prelude.Types.traverse_Traversable__List"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return (function()
                          local __frame1 = {
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          __frame1[1] = __arg5
                          __frame1[2] = {
                            nil,
                            nil
                          }
                          __frame1[2]["0"] = function()
                            local __frame2 = {
                              nil,
                              nil,
                              nil,
                              nil
                            }
                            __frame2[1] = __arg3
                            __frame2[2] = {
                              nil
                            }
                            __frame2[2]["0"] = function()
                              local __frame3 = {
                                nil
                              }
                              local __e2 = __frame2[1]["arg2"]
                              __frame3[1] = {}
                              __frame3[1]["tag"] = "0"
                              return __e2(nil)(__frame3[1])
                            end
                            __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                            if __frame2[3] then
                              __frame2[4] = __frame2[3]()
                            else
                              idris["error"]("Impossible else branch")
                            end
                            return __frame2[4]
                          end
                          __frame1[2]["1"] = function()
                            local __frame2 = {
                              nil,
                              nil,
                              nil,
                              nil
                            }
                            local __e2 = __frame1[1]["arg1"]
                            local __e3 = __frame1[1]["arg2"]
                            __frame2[1] = __arg3
                            __frame2[2] = {
                              nil
                            }
                            __frame2[2]["0"] = function()
                              local __frame3 = {
                                nil,
                                nil,
                                nil,
                                nil
                              }
                              local __e4 = __frame2[1]["arg3"]
                              __frame3[1] = __arg3
                              __frame3[2] = {
                                nil
                              }
                              __frame3[2]["0"] = function()
                                local __frame4 = {
                                  nil,
                                  nil,
                                  nil,
                                  nil
                                }
                                local __e6 = __frame3[1]["arg3"]
                                __frame4[1] = __arg3
                                __frame4[2] = {
                                  nil
                                }
                                __frame4[2]["0"] = function()
                                  local __e10 = __frame4[1]["arg2"]
                                  return __e10(nil)(function(__eta0)
                                      return function(__eta1)
                                          local __frame7 = {
                                            nil
                                          }
                                          __frame7[1] = {}
                                          __frame7[1]["tag"] = "1"
                                          __frame7[1]["arg1"] = __eta0
                                          __frame7[1]["arg2"] = __eta1
                                          return __frame7[1]
                                        end
                                    end)
                                end
                                __frame4[3] = __frame4[2][__frame4[1]["tag"]]
                                if __frame4[3] then
                                  __frame4[4] = __frame4[3]()
                                else
                                  idris["error"]("Impossible else branch")
                                end
                                return __e6(nil)(nil)(__frame4[4])(__arg4(__e2))
                              end
                              __frame3[3] = __frame3[2][__frame3[1]["tag"]]
                              if __frame3[3] then
                                __frame3[4] = __frame3[3]()
                              else
                                idris["error"]("Impossible else branch")
                              end
                              return __e4(nil)(nil)(__frame3[4])(idris["Prelude.Types.traverse_Traversable__List"](nil)(nil)(nil)(__arg3)(__arg4)(__e3))
                            end
                            __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                            if __frame2[3] then
                              __frame2[4] = __frame2[3]()
                            else
                              idris["error"]("Impossible else branch")
                            end
                            return __frame2[4]
                          end
                          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                          if __frame1[3] then
                            __frame1[4] = __frame1[3]()
                          else
                            idris["error"]("Impossible else branch")
                          end
                          return __frame1[4]
                        end)()
                    end
                end
            end
        end
    end
end
idris["Utils.Path.tokValue_TokenKind__PathTokenKind"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg0
          __frame1[2] = {
            nil,
            nil
          }
          __frame1[2]["0"] = function()
            return __arg1
          end
          __frame1[2]["1"] = function()
            local __frame2 = {
              nil
            }
            __frame2[1] = {}
            __frame2[1]["tag"] = "0"
            return __frame2[1]
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Prelude.Show.show_Show__Bool"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil,
        nil
      }
      __frame1[2][0] = function()
        return "True"
      end
      __frame1[2][1] = function()
        return "False"
      end
      __frame1[3] = __frame1[2][__frame1[1]]
      if __frame1[3] then
        __frame1[4] = __frame1[3]()
      else
        idris["error"]("Impossible else branch")
      end
      return __frame1[4]
    end)()
end
idris["Prelude.Types.pure_Applicative__Maybe"] = function(__arg0)
  return function(__ext0)
      return (function()
          local __frame1 = {
            nil
          }
          __frame1[1] = {}
          __frame1[1]["tag"] = "1"
          __frame1[1]["arg1"] = __ext0
          return __frame1[1]
        end)()
    end
end
idris["Text.Lexer.Core.case[1221]scan"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return (function()
                              local __frame1 = {
                                nil,
                                nil,
                                nil,
                                nil
                              }
                              __frame1[1] = __arg6
                              __frame1[2] = {
                                nil,
                                nil
                              }
                              __frame1[2][0] = function()
                                local __frame2 = {
                                  nil
                                }
                                __frame2[1] = {}
                                __frame2[1]["tag"] = "0"
                                __frame2[1]["arg1"] = __arg4
                                __frame2[1]["arg2"] = __arg3
                                return idris["Prelude.Types.pure_Applicative__Maybe"](nil)(__frame2[1])
                              end
                              __frame1[2][1] = function()
                                local __frame2 = {
                                  nil
                                }
                                __frame2[1] = {}
                                __frame2[1]["tag"] = "0"
                                return __frame2[1]
                              end
                              __frame1[3] = __frame1[2][__frame1[1]]
                              if __frame1[3] then
                                __frame1[4] = __frame1[3]()
                              else
                                idris["error"]("Impossible else branch")
                              end
                              return __frame1[4]
                            end)()
                        end
                    end
                end
            end
        end
    end
end
idris["Prelude.Types.neutral_Monoid__(List $a)"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      return __frame1[1]
    end)()
end
idris["Prelude.Num.negate_Neg__Int"] = function(__arg0)
  return (function()
      return 0 - __arg0
    end)()
end
idris["Prelude.Num.case[408]abs"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil,
            nil
          }
          __frame1[2][0] = function()
            return idris["Prelude.Num.negate_Neg__Int"](__arg0)
          end
          __frame1[2][1] = function()
            return __arg0
          end
          __frame1[3] = __frame1[2][__frame1[1]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Text.Bounded.map_Functor__WithBounds"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg3
                  __frame1[2] = {
                    nil
                  }
                  __frame1[2]["0"] = function()
                    local __frame2 = {
                      nil
                    }
                    local __e1 = __frame1[1]["arg1"]
                    local __e2 = __frame1[1]["arg2"]
                    local __e3 = __frame1[1]["arg3"]
                    local __e4 = __frame1[1]["arg4"]
                    local __e5 = __frame1[1]["arg5"]
                    local __e6 = __frame1[1]["arg6"]
                    __frame2[1] = {}
                    __frame2[1]["tag"] = "0"
                    __frame2[1]["arg1"] = __arg2(__e1)
                    __frame2[1]["arg2"] = __e2
                    __frame2[1]["arg3"] = __e3
                    __frame2[1]["arg4"] = __e4
                    __frame2[1]["arg5"] = __e5
                    __frame2[1]["arg6"] = __e6
                    return __frame2[1]
                  end
                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[4]
                end)()
            end
        end
    end
end
idris["Prelude.Types.map_Functor__Maybe"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg3
                  __frame1[2] = {
                    nil,
                    nil
                  }
                  __frame1[2]["1"] = function()
                    local __frame2 = {
                      nil
                    }
                    local __e1 = __frame1[1]["arg1"]
                    __frame2[1] = {}
                    __frame2[1]["tag"] = "1"
                    __frame2[1]["arg1"] = __arg2(__e1)
                    return __frame2[1]
                  end
                  __frame1[2]["0"] = function()
                    local __frame2 = {
                      nil
                    }
                    __frame2[1] = {}
                    __frame2[1]["tag"] = "0"
                    return __frame2[1]
                  end
                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[4]
                end)()
            end
        end
    end
end
idris["Prelude.Types.map_Functor__List"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg3
                  __frame1[2] = {
                    nil,
                    nil
                  }
                  __frame1[2]["0"] = function()
                    local __frame2 = {
                      nil
                    }
                    __frame2[1] = {}
                    __frame2[1]["tag"] = "0"
                    return __frame2[1]
                  end
                  __frame1[2]["1"] = function()
                    local __frame2 = {
                      nil
                    }
                    local __e2 = __frame1[1]["arg1"]
                    local __e3 = __frame1[1]["arg2"]
                    __frame2[1] = {}
                    __frame2[1]["tag"] = "1"
                    __frame2[1]["arg1"] = __arg2(__e2)
                    __frame2[1]["arg2"] = idris["Prelude.Types.map_Functor__List"](nil)(nil)(__arg2)(__e3)
                    return __frame2[1]
                  end
                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[4]
                end)()
            end
        end
    end
end
idris["Data.List1.map_Functor__List1"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg3
                  __frame1[2] = {
                    nil
                  }
                  __frame1[2]["0"] = function()
                    local __frame2 = {
                      nil
                    }
                    local __e1 = __frame1[1]["arg1"]
                    local __e2 = __frame1[1]["arg2"]
                    __frame2[1] = {}
                    __frame2[1]["tag"] = "0"
                    __frame2[1]["arg1"] = __arg2(__e1)
                    __frame2[1]["arg2"] = idris["Prelude.Types.map_Functor__List"](nil)(nil)(__arg2)(__e2)
                    return __frame2[1]
                  end
                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[4]
                end)()
            end
        end
    end
end
idris["Prelude.IO.map_Functor__IO"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__ext0)
                  return (function()
                      local __act3 = __arg3(__ext0)
                      return __arg2(__act3)
                    end)()
                end
            end
        end
    end
end
idris["Text.Parser.Core.map_Functor__((Grammar $tok) $c)"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return (function()
                          local __frame1 = {
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          __frame1[1] = __arg3
                          __frame1[2] = {
                            nil
                          }
                          __frame1[2][1] = function()
                            local __frame2 = {
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil
                            }
                            __frame2[1] = __arg5
                            __frame2[2] = {
                              nil
                            }
                            __frame2[2]["0"] = function()
                              local __frame3 = {
                                nil
                              }
                              local __e42 = __frame2[1]["arg1"]
                              __frame3[1] = {}
                              __frame3[1]["tag"] = "0"
                              __frame3[1]["arg1"] = __arg4(__e42)
                              return __frame3[1]
                            end
                            __frame2[27] = __frame2[2][__frame2[1]["tag"]]
                            if __frame2[27] then
                              __frame2[28] = __frame2[27]()
                            else
                              __frame2[3] = __arg5
                              __frame2[4] = {
                                nil,
                                nil,
                                nil
                              }
                              __frame2[4]["4"] = function()
                                local __frame3 = {
                                  nil
                                }
                                local __e30 = __frame2[3]["arg1"]
                                local __e31 = __frame2[3]["arg2"]
                                __frame3[1] = {}
                                __frame3[1]["tag"] = "4"
                                __frame3[1]["arg1"] = __e30
                                __frame3[1]["arg2"] = __e31
                                return __frame3[1]
                              end
                              __frame2[4]["5"] = function()
                                local __frame3 = {
                                  nil
                                }
                                local __e35 = __frame2[3]["arg1"]
                                __frame3[1] = {}
                                __frame3[1]["tag"] = "5"
                                __frame3[1]["arg1"] = idris["Text.Parser.Core.map_Functor__((Grammar $tok) $c)"](nil)(nil)(nil)(__arg3)(__arg4)(__e35)
                                return __frame3[1]
                              end
                              __frame2[4]["7"] = function()
                                local __frame3 = {
                                  nil
                                }
                                local __e39 = __frame2[3]["arg1"]
                                __frame3[1] = {}
                                __frame3[1]["tag"] = "7"
                                __frame3[1]["arg1"] = idris["Text.Parser.Core.map_Functor__((Grammar $tok) $c)"](nil)(nil)(nil)(__arg3)(__arg4)(__e39)
                                return __frame3[1]
                              end
                              __frame2[25] = __frame2[4][__frame2[3]["tag"]]
                              if __frame2[25] then
                                __frame2[26] = __frame2[25]()
                              else
                                __frame2[5] = __arg3
                                __frame2[6] = {
                                  nil
                                }
                                __frame2[6][0] = function()
                                  local __frame3 = {
                                    nil,
                                    nil,
                                    nil,
                                    nil,
                                    nil,
                                    nil,
                                    nil,
                                    nil,
                                    nil,
                                    nil,
                                    nil,
                                    nil,
                                    nil,
                                    nil,
                                    nil,
                                    nil,
                                    nil,
                                    nil,
                                    nil,
                                    nil
                                  }
                                  __frame3[1] = __arg5
                                  __frame3[2] = {
                                    nil
                                  }
                                  __frame3[2]["1"] = function()
                                    local __frame4 = {
                                      nil
                                    }
                                    local __e25 = __frame3[1]["arg1"]
                                    local __e26 = __frame3[1]["arg2"]
                                    __frame4[1] = {}
                                    __frame4[1]["tag"] = "1"
                                    __frame4[1]["arg1"] = __e25
                                    __frame4[1]["arg2"] = function(__eta0)
                                      return idris["Prelude.Types.map_Functor__Maybe"](nil)(nil)(__arg4)(__e26(__eta0))
                                    end
                                    return __frame4[1]
                                  end
                                  __frame3[19] = __frame3[2][__frame3[1]["tag"]]
                                  if __frame3[19] then
                                    __frame3[20] = __frame3[19]()
                                  else
                                    __frame3[3] = __arg5
                                    __frame3[4] = {
                                      nil
                                    }
                                    __frame3[4]["10"] = function()
                                      local __frame4 = {
                                        nil
                                      }
                                      local __e19 = __frame3[3]["arg1"]
                                      local __e20 = __frame3[3]["arg2"]
                                      local __e21 = __frame3[3]["arg3"]
                                      local __e22 = __frame3[3]["arg4"]
                                      __frame4[1] = {}
                                      __frame4[1]["tag"] = "10"
                                      __frame4[1]["arg1"] = __e19
                                      __frame4[1]["arg2"] = __e20
                                      __frame4[1]["arg3"] = idris["Text.Parser.Core.map_Functor__((Grammar $tok) $c)"](nil)(nil)(nil)(__e19)(__arg4)(__e21)
                                      __frame4[1]["arg4"] = function()
                                        return idris["Text.Parser.Core.map_Functor__((Grammar $tok) $c)"](nil)(nil)(nil)(__e20)(__arg4)(__e22())
                                      end
                                      return __frame4[1]
                                    end
                                    __frame3[17] = __frame3[4][__frame3[3]["tag"]]
                                    if __frame3[17] then
                                      __frame3[18] = __frame3[17]()
                                    else
                                      __frame3[5] = __arg3
                                      __frame3[6] = {
                                        nil
                                      }
                                      __frame3[6][0] = function()
                                        local __frame4 = {
                                          nil,
                                          nil,
                                          nil,
                                          nil,
                                          nil,
                                          nil,
                                          nil,
                                          nil,
                                          nil,
                                          nil,
                                          nil,
                                          nil
                                        }
                                        __frame4[1] = __arg5
                                        __frame4[2] = {
                                          nil
                                        }
                                        __frame4[2]["8"] = function()
                                          local __frame5 = {
                                            nil
                                          }
                                          local __e14 = __frame4[1]["arg1"]
                                          local __e15 = __frame4[1]["arg2"]
                                          local __e16 = __frame4[1]["arg3"]
                                          __frame5[1] = {}
                                          __frame5[1]["tag"] = "8"
                                          __frame5[1]["arg1"] = __e14
                                          __frame5[1]["arg2"] = __e15
                                          __frame5[1]["arg3"] = function()
                                            return function(val)
                                                return idris["Text.Parser.Core.map_Functor__((Grammar $tok) $c)"](nil)(nil)(nil)(__e14)(__arg4)(__e16()(val))
                                              end
                                          end
                                          return __frame5[1]
                                        end
                                        __frame4[11] = __frame4[2][__frame4[1]["tag"]]
                                        if __frame4[11] then
                                          __frame4[12] = __frame4[11]()
                                        else
                                          __frame4[3] = __arg5
                                          __frame4[4] = {
                                            nil,
                                            nil
                                          }
                                          __frame4[4]["9"] = function()
                                            local __frame5 = {
                                              nil
                                            }
                                            local __e3 = __frame4[3]["arg1"]
                                            local __e4 = __frame4[3]["arg2"]
                                            local __e5 = __frame4[3]["arg3"]
                                            local __e6 = __frame4[3]["arg4"]
                                            __frame5[1] = {}
                                            __frame5[1]["tag"] = "9"
                                            __frame5[1]["arg1"] = __e3
                                            __frame5[1]["arg2"] = __e4
                                            __frame5[1]["arg3"] = __e5
                                            __frame5[1]["arg4"] = function(val)
                                              return idris["Text.Parser.Core.map_Functor__((Grammar $tok) $c)"](nil)(nil)(nil)(__e4)(__arg4)(__e6(val))
                                            end
                                            return __frame5[1]
                                          end
                                          __frame4[4]["11"] = function()
                                            local __frame5 = {
                                              nil,
                                              nil
                                            }
                                            local __e10 = __frame4[3]["arg1"]
                                            __frame5[1] = {}
                                            __frame5[1]["tag"] = "11"
                                            __frame5[1]["arg1"] = __e10
                                            __frame5[2] = {}
                                            __frame5[2]["tag"] = "9"
                                            __frame5[2]["arg1"] = __arg3
                                            __frame5[2]["arg2"] = 1
                                            __frame5[2]["arg3"] = __frame5[1]
                                            __frame5[2]["arg4"] = function(__eta0)
                                              local __frame6 = {
                                                nil
                                              }
                                              __frame6[1] = {}
                                              __frame6[1]["tag"] = "0"
                                              __frame6[1]["arg1"] = __arg4(__eta0)
                                              return __frame6[1]
                                            end
                                            return __frame5[2]
                                          end
                                          __frame4[9] = __frame4[4][__frame4[3]["tag"]]
                                          if __frame4[9] then
                                            __frame4[10] = __frame4[9]()
                                          else
                                            __frame4[5] = __arg3
                                            __frame4[6] = {
                                              nil
                                            }
                                            __frame4[6][1] = function()
                                              local __frame5 = {
                                                nil
                                              }
                                              __frame5[1] = {}
                                              __frame5[1]["tag"] = "9"
                                              __frame5[1]["arg1"] = 1
                                              __frame5[1]["arg2"] = 1
                                              __frame5[1]["arg3"] = __arg5
                                              __frame5[1]["arg4"] = function(__eta0)
                                                local __frame6 = {
                                                  nil
                                                }
                                                __frame6[1] = {}
                                                __frame6[1]["tag"] = "0"
                                                __frame6[1]["arg1"] = __arg4(__eta0)
                                                return __frame6[1]
                                              end
                                              return __frame5[1]
                                            end
                                            __frame4[7] = __frame4[6][__frame4[5]]
                                            if __frame4[7] then
                                              __frame4[8] = __frame4[7]()
                                            else
                                              idris["error"]("Impossible else branch")
                                            end
                                            __frame4[10] = __frame4[8]
                                          end
                                          __frame4[12] = __frame4[10]
                                        end
                                        return __frame4[12]
                                      end
                                      __frame3[15] = __frame3[6][__frame3[5]]
                                      if __frame3[15] then
                                        __frame3[16] = __frame3[15]()
                                      else
                                        __frame3[7] = __arg5
                                        __frame3[8] = {
                                          nil,
                                          nil
                                        }
                                        __frame3[8]["9"] = function()
                                          local __frame4 = {
                                            nil
                                          }
                                          local __e3 = __frame3[7]["arg1"]
                                          local __e4 = __frame3[7]["arg2"]
                                          local __e5 = __frame3[7]["arg3"]
                                          local __e6 = __frame3[7]["arg4"]
                                          __frame4[1] = {}
                                          __frame4[1]["tag"] = "9"
                                          __frame4[1]["arg1"] = __e3
                                          __frame4[1]["arg2"] = __e4
                                          __frame4[1]["arg3"] = __e5
                                          __frame4[1]["arg4"] = function(val)
                                            return idris["Text.Parser.Core.map_Functor__((Grammar $tok) $c)"](nil)(nil)(nil)(__e4)(__arg4)(__e6(val))
                                          end
                                          return __frame4[1]
                                        end
                                        __frame3[8]["11"] = function()
                                          local __frame4 = {
                                            nil,
                                            nil
                                          }
                                          local __e10 = __frame3[7]["arg1"]
                                          __frame4[1] = {}
                                          __frame4[1]["tag"] = "11"
                                          __frame4[1]["arg1"] = __e10
                                          __frame4[2] = {}
                                          __frame4[2]["tag"] = "9"
                                          __frame4[2]["arg1"] = __arg3
                                          __frame4[2]["arg2"] = 1
                                          __frame4[2]["arg3"] = __frame4[1]
                                          __frame4[2]["arg4"] = function(__eta0)
                                            local __frame5 = {
                                              nil
                                            }
                                            __frame5[1] = {}
                                            __frame5[1]["tag"] = "0"
                                            __frame5[1]["arg1"] = __arg4(__eta0)
                                            return __frame5[1]
                                          end
                                          return __frame4[2]
                                        end
                                        __frame3[13] = __frame3[8][__frame3[7]["tag"]]
                                        if __frame3[13] then
                                          __frame3[14] = __frame3[13]()
                                        else
                                          __frame3[9] = __arg3
                                          __frame3[10] = {
                                            nil
                                          }
                                          __frame3[10][1] = function()
                                            local __frame4 = {
                                              nil
                                            }
                                            __frame4[1] = {}
                                            __frame4[1]["tag"] = "9"
                                            __frame4[1]["arg1"] = 1
                                            __frame4[1]["arg2"] = 1
                                            __frame4[1]["arg3"] = __arg5
                                            __frame4[1]["arg4"] = function(__eta0)
                                              local __frame5 = {
                                                nil
                                              }
                                              __frame5[1] = {}
                                              __frame5[1]["tag"] = "0"
                                              __frame5[1]["arg1"] = __arg4(__eta0)
                                              return __frame5[1]
                                            end
                                            return __frame4[1]
                                          end
                                          __frame3[11] = __frame3[10][__frame3[9]]
                                          if __frame3[11] then
                                            __frame3[12] = __frame3[11]()
                                          else
                                            idris["error"]("Impossible else branch")
                                          end
                                          __frame3[14] = __frame3[12]
                                        end
                                        __frame3[16] = __frame3[14]
                                      end
                                      __frame3[18] = __frame3[16]
                                    end
                                    __frame3[20] = __frame3[18]
                                  end
                                  return __frame3[20]
                                end
                                __frame2[23] = __frame2[6][__frame2[5]]
                                if __frame2[23] then
                                  __frame2[24] = __frame2[23]()
                                else
                                  __frame2[7] = __arg5
                                  __frame2[8] = {
                                    nil
                                  }
                                  __frame2[8]["10"] = function()
                                    local __frame3 = {
                                      nil
                                    }
                                    local __e19 = __frame2[7]["arg1"]
                                    local __e20 = __frame2[7]["arg2"]
                                    local __e21 = __frame2[7]["arg3"]
                                    local __e22 = __frame2[7]["arg4"]
                                    __frame3[1] = {}
                                    __frame3[1]["tag"] = "10"
                                    __frame3[1]["arg1"] = __e19
                                    __frame3[1]["arg2"] = __e20
                                    __frame3[1]["arg3"] = idris["Text.Parser.Core.map_Functor__((Grammar $tok) $c)"](nil)(nil)(nil)(__e19)(__arg4)(__e21)
                                    __frame3[1]["arg4"] = function()
                                      return idris["Text.Parser.Core.map_Functor__((Grammar $tok) $c)"](nil)(nil)(nil)(__e20)(__arg4)(__e22())
                                    end
                                    return __frame3[1]
                                  end
                                  __frame2[21] = __frame2[8][__frame2[7]["tag"]]
                                  if __frame2[21] then
                                    __frame2[22] = __frame2[21]()
                                  else
                                    __frame2[9] = __arg3
                                    __frame2[10] = {
                                      nil
                                    }
                                    __frame2[10][0] = function()
                                      local __frame3 = {
                                        nil,
                                        nil,
                                        nil,
                                        nil,
                                        nil,
                                        nil,
                                        nil,
                                        nil,
                                        nil,
                                        nil,
                                        nil,
                                        nil
                                      }
                                      __frame3[1] = __arg5
                                      __frame3[2] = {
                                        nil
                                      }
                                      __frame3[2]["8"] = function()
                                        local __frame4 = {
                                          nil
                                        }
                                        local __e14 = __frame3[1]["arg1"]
                                        local __e15 = __frame3[1]["arg2"]
                                        local __e16 = __frame3[1]["arg3"]
                                        __frame4[1] = {}
                                        __frame4[1]["tag"] = "8"
                                        __frame4[1]["arg1"] = __e14
                                        __frame4[1]["arg2"] = __e15
                                        __frame4[1]["arg3"] = function()
                                          return function(val)
                                              return idris["Text.Parser.Core.map_Functor__((Grammar $tok) $c)"](nil)(nil)(nil)(__e14)(__arg4)(__e16()(val))
                                            end
                                        end
                                        return __frame4[1]
                                      end
                                      __frame3[11] = __frame3[2][__frame3[1]["tag"]]
                                      if __frame3[11] then
                                        __frame3[12] = __frame3[11]()
                                      else
                                        __frame3[3] = __arg5
                                        __frame3[4] = {
                                          nil,
                                          nil
                                        }
                                        __frame3[4]["9"] = function()
                                          local __frame4 = {
                                            nil
                                          }
                                          local __e3 = __frame3[3]["arg1"]
                                          local __e4 = __frame3[3]["arg2"]
                                          local __e5 = __frame3[3]["arg3"]
                                          local __e6 = __frame3[3]["arg4"]
                                          __frame4[1] = {}
                                          __frame4[1]["tag"] = "9"
                                          __frame4[1]["arg1"] = __e3
                                          __frame4[1]["arg2"] = __e4
                                          __frame4[1]["arg3"] = __e5
                                          __frame4[1]["arg4"] = function(val)
                                            return idris["Text.Parser.Core.map_Functor__((Grammar $tok) $c)"](nil)(nil)(nil)(__e4)(__arg4)(__e6(val))
                                          end
                                          return __frame4[1]
                                        end
                                        __frame3[4]["11"] = function()
                                          local __frame4 = {
                                            nil,
                                            nil
                                          }
                                          local __e10 = __frame3[3]["arg1"]
                                          __frame4[1] = {}
                                          __frame4[1]["tag"] = "11"
                                          __frame4[1]["arg1"] = __e10
                                          __frame4[2] = {}
                                          __frame4[2]["tag"] = "9"
                                          __frame4[2]["arg1"] = __arg3
                                          __frame4[2]["arg2"] = 1
                                          __frame4[2]["arg3"] = __frame4[1]
                                          __frame4[2]["arg4"] = function(__eta0)
                                            local __frame5 = {
                                              nil
                                            }
                                            __frame5[1] = {}
                                            __frame5[1]["tag"] = "0"
                                            __frame5[1]["arg1"] = __arg4(__eta0)
                                            return __frame5[1]
                                          end
                                          return __frame4[2]
                                        end
                                        __frame3[9] = __frame3[4][__frame3[3]["tag"]]
                                        if __frame3[9] then
                                          __frame3[10] = __frame3[9]()
                                        else
                                          __frame3[5] = __arg3
                                          __frame3[6] = {
                                            nil
                                          }
                                          __frame3[6][1] = function()
                                            local __frame4 = {
                                              nil
                                            }
                                            __frame4[1] = {}
                                            __frame4[1]["tag"] = "9"
                                            __frame4[1]["arg1"] = 1
                                            __frame4[1]["arg2"] = 1
                                            __frame4[1]["arg3"] = __arg5
                                            __frame4[1]["arg4"] = function(__eta0)
                                              local __frame5 = {
                                                nil
                                              }
                                              __frame5[1] = {}
                                              __frame5[1]["tag"] = "0"
                                              __frame5[1]["arg1"] = __arg4(__eta0)
                                              return __frame5[1]
                                            end
                                            return __frame4[1]
                                          end
                                          __frame3[7] = __frame3[6][__frame3[5]]
                                          if __frame3[7] then
                                            __frame3[8] = __frame3[7]()
                                          else
                                            idris["error"]("Impossible else branch")
                                          end
                                          __frame3[10] = __frame3[8]
                                        end
                                        __frame3[12] = __frame3[10]
                                      end
                                      return __frame3[12]
                                    end
                                    __frame2[19] = __frame2[10][__frame2[9]]
                                    if __frame2[19] then
                                      __frame2[20] = __frame2[19]()
                                    else
                                      __frame2[11] = __arg5
                                      __frame2[12] = {
                                        nil,
                                        nil
                                      }
                                      __frame2[12]["9"] = function()
                                        local __frame3 = {
                                          nil
                                        }
                                        local __e3 = __frame2[11]["arg1"]
                                        local __e4 = __frame2[11]["arg2"]
                                        local __e5 = __frame2[11]["arg3"]
                                        local __e6 = __frame2[11]["arg4"]
                                        __frame3[1] = {}
                                        __frame3[1]["tag"] = "9"
                                        __frame3[1]["arg1"] = __e3
                                        __frame3[1]["arg2"] = __e4
                                        __frame3[1]["arg3"] = __e5
                                        __frame3[1]["arg4"] = function(val)
                                          return idris["Text.Parser.Core.map_Functor__((Grammar $tok) $c)"](nil)(nil)(nil)(__e4)(__arg4)(__e6(val))
                                        end
                                        return __frame3[1]
                                      end
                                      __frame2[12]["11"] = function()
                                        local __frame3 = {
                                          nil,
                                          nil
                                        }
                                        local __e10 = __frame2[11]["arg1"]
                                        __frame3[1] = {}
                                        __frame3[1]["tag"] = "11"
                                        __frame3[1]["arg1"] = __e10
                                        __frame3[2] = {}
                                        __frame3[2]["tag"] = "9"
                                        __frame3[2]["arg1"] = __arg3
                                        __frame3[2]["arg2"] = 1
                                        __frame3[2]["arg3"] = __frame3[1]
                                        __frame3[2]["arg4"] = function(__eta0)
                                          local __frame4 = {
                                            nil
                                          }
                                          __frame4[1] = {}
                                          __frame4[1]["tag"] = "0"
                                          __frame4[1]["arg1"] = __arg4(__eta0)
                                          return __frame4[1]
                                        end
                                        return __frame3[2]
                                      end
                                      __frame2[17] = __frame2[12][__frame2[11]["tag"]]
                                      if __frame2[17] then
                                        __frame2[18] = __frame2[17]()
                                      else
                                        __frame2[13] = __arg3
                                        __frame2[14] = {
                                          nil
                                        }
                                        __frame2[14][1] = function()
                                          local __frame3 = {
                                            nil
                                          }
                                          __frame3[1] = {}
                                          __frame3[1]["tag"] = "9"
                                          __frame3[1]["arg1"] = 1
                                          __frame3[1]["arg2"] = 1
                                          __frame3[1]["arg3"] = __arg5
                                          __frame3[1]["arg4"] = function(__eta0)
                                            local __frame4 = {
                                              nil
                                            }
                                            __frame4[1] = {}
                                            __frame4[1]["tag"] = "0"
                                            __frame4[1]["arg1"] = __arg4(__eta0)
                                            return __frame4[1]
                                          end
                                          return __frame3[1]
                                        end
                                        __frame2[15] = __frame2[14][__frame2[13]]
                                        if __frame2[15] then
                                          __frame2[16] = __frame2[15]()
                                        else
                                          idris["error"]("Impossible else branch")
                                        end
                                        __frame2[18] = __frame2[16]
                                      end
                                      __frame2[20] = __frame2[18]
                                    end
                                    __frame2[22] = __frame2[20]
                                  end
                                  __frame2[24] = __frame2[22]
                                end
                                __frame2[26] = __frame2[24]
                              end
                              __frame2[28] = __frame2[26]
                            end
                            return __frame2[28]
                          end
                          __frame1[27] = __frame1[2][__frame1[1]]
                          if __frame1[27] then
                            __frame1[28] = __frame1[27]()
                          else
                            __frame1[3] = __arg5
                            __frame1[4] = {
                              nil,
                              nil,
                              nil
                            }
                            __frame1[4]["4"] = function()
                              local __frame2 = {
                                nil
                              }
                              local __e30 = __frame1[3]["arg1"]
                              local __e31 = __frame1[3]["arg2"]
                              __frame2[1] = {}
                              __frame2[1]["tag"] = "4"
                              __frame2[1]["arg1"] = __e30
                              __frame2[1]["arg2"] = __e31
                              return __frame2[1]
                            end
                            __frame1[4]["5"] = function()
                              local __frame2 = {
                                nil
                              }
                              local __e35 = __frame1[3]["arg1"]
                              __frame2[1] = {}
                              __frame2[1]["tag"] = "5"
                              __frame2[1]["arg1"] = idris["Text.Parser.Core.map_Functor__((Grammar $tok) $c)"](nil)(nil)(nil)(__arg3)(__arg4)(__e35)
                              return __frame2[1]
                            end
                            __frame1[4]["7"] = function()
                              local __frame2 = {
                                nil
                              }
                              local __e39 = __frame1[3]["arg1"]
                              __frame2[1] = {}
                              __frame2[1]["tag"] = "7"
                              __frame2[1]["arg1"] = idris["Text.Parser.Core.map_Functor__((Grammar $tok) $c)"](nil)(nil)(nil)(__arg3)(__arg4)(__e39)
                              return __frame2[1]
                            end
                            __frame1[25] = __frame1[4][__frame1[3]["tag"]]
                            if __frame1[25] then
                              __frame1[26] = __frame1[25]()
                            else
                              __frame1[5] = __arg3
                              __frame1[6] = {
                                nil
                              }
                              __frame1[6][0] = function()
                                local __frame2 = {
                                  nil,
                                  nil,
                                  nil,
                                  nil,
                                  nil,
                                  nil,
                                  nil,
                                  nil,
                                  nil,
                                  nil,
                                  nil,
                                  nil,
                                  nil,
                                  nil,
                                  nil,
                                  nil,
                                  nil,
                                  nil,
                                  nil,
                                  nil
                                }
                                __frame2[1] = __arg5
                                __frame2[2] = {
                                  nil
                                }
                                __frame2[2]["1"] = function()
                                  local __frame3 = {
                                    nil
                                  }
                                  local __e25 = __frame2[1]["arg1"]
                                  local __e26 = __frame2[1]["arg2"]
                                  __frame3[1] = {}
                                  __frame3[1]["tag"] = "1"
                                  __frame3[1]["arg1"] = __e25
                                  __frame3[1]["arg2"] = function(__eta0)
                                    return idris["Prelude.Types.map_Functor__Maybe"](nil)(nil)(__arg4)(__e26(__eta0))
                                  end
                                  return __frame3[1]
                                end
                                __frame2[19] = __frame2[2][__frame2[1]["tag"]]
                                if __frame2[19] then
                                  __frame2[20] = __frame2[19]()
                                else
                                  __frame2[3] = __arg5
                                  __frame2[4] = {
                                    nil
                                  }
                                  __frame2[4]["10"] = function()
                                    local __frame3 = {
                                      nil
                                    }
                                    local __e19 = __frame2[3]["arg1"]
                                    local __e20 = __frame2[3]["arg2"]
                                    local __e21 = __frame2[3]["arg3"]
                                    local __e22 = __frame2[3]["arg4"]
                                    __frame3[1] = {}
                                    __frame3[1]["tag"] = "10"
                                    __frame3[1]["arg1"] = __e19
                                    __frame3[1]["arg2"] = __e20
                                    __frame3[1]["arg3"] = idris["Text.Parser.Core.map_Functor__((Grammar $tok) $c)"](nil)(nil)(nil)(__e19)(__arg4)(__e21)
                                    __frame3[1]["arg4"] = function()
                                      return idris["Text.Parser.Core.map_Functor__((Grammar $tok) $c)"](nil)(nil)(nil)(__e20)(__arg4)(__e22())
                                    end
                                    return __frame3[1]
                                  end
                                  __frame2[17] = __frame2[4][__frame2[3]["tag"]]
                                  if __frame2[17] then
                                    __frame2[18] = __frame2[17]()
                                  else
                                    __frame2[5] = __arg3
                                    __frame2[6] = {
                                      nil
                                    }
                                    __frame2[6][0] = function()
                                      local __frame3 = {
                                        nil,
                                        nil,
                                        nil,
                                        nil,
                                        nil,
                                        nil,
                                        nil,
                                        nil,
                                        nil,
                                        nil,
                                        nil,
                                        nil
                                      }
                                      __frame3[1] = __arg5
                                      __frame3[2] = {
                                        nil
                                      }
                                      __frame3[2]["8"] = function()
                                        local __frame4 = {
                                          nil
                                        }
                                        local __e14 = __frame3[1]["arg1"]
                                        local __e15 = __frame3[1]["arg2"]
                                        local __e16 = __frame3[1]["arg3"]
                                        __frame4[1] = {}
                                        __frame4[1]["tag"] = "8"
                                        __frame4[1]["arg1"] = __e14
                                        __frame4[1]["arg2"] = __e15
                                        __frame4[1]["arg3"] = function()
                                          return function(val)
                                              return idris["Text.Parser.Core.map_Functor__((Grammar $tok) $c)"](nil)(nil)(nil)(__e14)(__arg4)(__e16()(val))
                                            end
                                        end
                                        return __frame4[1]
                                      end
                                      __frame3[11] = __frame3[2][__frame3[1]["tag"]]
                                      if __frame3[11] then
                                        __frame3[12] = __frame3[11]()
                                      else
                                        __frame3[3] = __arg5
                                        __frame3[4] = {
                                          nil,
                                          nil
                                        }
                                        __frame3[4]["9"] = function()
                                          local __frame4 = {
                                            nil
                                          }
                                          local __e3 = __frame3[3]["arg1"]
                                          local __e4 = __frame3[3]["arg2"]
                                          local __e5 = __frame3[3]["arg3"]
                                          local __e6 = __frame3[3]["arg4"]
                                          __frame4[1] = {}
                                          __frame4[1]["tag"] = "9"
                                          __frame4[1]["arg1"] = __e3
                                          __frame4[1]["arg2"] = __e4
                                          __frame4[1]["arg3"] = __e5
                                          __frame4[1]["arg4"] = function(val)
                                            return idris["Text.Parser.Core.map_Functor__((Grammar $tok) $c)"](nil)(nil)(nil)(__e4)(__arg4)(__e6(val))
                                          end
                                          return __frame4[1]
                                        end
                                        __frame3[4]["11"] = function()
                                          local __frame4 = {
                                            nil,
                                            nil
                                          }
                                          local __e10 = __frame3[3]["arg1"]
                                          __frame4[1] = {}
                                          __frame4[1]["tag"] = "11"
                                          __frame4[1]["arg1"] = __e10
                                          __frame4[2] = {}
                                          __frame4[2]["tag"] = "9"
                                          __frame4[2]["arg1"] = __arg3
                                          __frame4[2]["arg2"] = 1
                                          __frame4[2]["arg3"] = __frame4[1]
                                          __frame4[2]["arg4"] = function(__eta0)
                                            local __frame5 = {
                                              nil
                                            }
                                            __frame5[1] = {}
                                            __frame5[1]["tag"] = "0"
                                            __frame5[1]["arg1"] = __arg4(__eta0)
                                            return __frame5[1]
                                          end
                                          return __frame4[2]
                                        end
                                        __frame3[9] = __frame3[4][__frame3[3]["tag"]]
                                        if __frame3[9] then
                                          __frame3[10] = __frame3[9]()
                                        else
                                          __frame3[5] = __arg3
                                          __frame3[6] = {
                                            nil
                                          }
                                          __frame3[6][1] = function()
                                            local __frame4 = {
                                              nil
                                            }
                                            __frame4[1] = {}
                                            __frame4[1]["tag"] = "9"
                                            __frame4[1]["arg1"] = 1
                                            __frame4[1]["arg2"] = 1
                                            __frame4[1]["arg3"] = __arg5
                                            __frame4[1]["arg4"] = function(__eta0)
                                              local __frame5 = {
                                                nil
                                              }
                                              __frame5[1] = {}
                                              __frame5[1]["tag"] = "0"
                                              __frame5[1]["arg1"] = __arg4(__eta0)
                                              return __frame5[1]
                                            end
                                            return __frame4[1]
                                          end
                                          __frame3[7] = __frame3[6][__frame3[5]]
                                          if __frame3[7] then
                                            __frame3[8] = __frame3[7]()
                                          else
                                            idris["error"]("Impossible else branch")
                                          end
                                          __frame3[10] = __frame3[8]
                                        end
                                        __frame3[12] = __frame3[10]
                                      end
                                      return __frame3[12]
                                    end
                                    __frame2[15] = __frame2[6][__frame2[5]]
                                    if __frame2[15] then
                                      __frame2[16] = __frame2[15]()
                                    else
                                      __frame2[7] = __arg5
                                      __frame2[8] = {
                                        nil,
                                        nil
                                      }
                                      __frame2[8]["9"] = function()
                                        local __frame3 = {
                                          nil
                                        }
                                        local __e3 = __frame2[7]["arg1"]
                                        local __e4 = __frame2[7]["arg2"]
                                        local __e5 = __frame2[7]["arg3"]
                                        local __e6 = __frame2[7]["arg4"]
                                        __frame3[1] = {}
                                        __frame3[1]["tag"] = "9"
                                        __frame3[1]["arg1"] = __e3
                                        __frame3[1]["arg2"] = __e4
                                        __frame3[1]["arg3"] = __e5
                                        __frame3[1]["arg4"] = function(val)
                                          return idris["Text.Parser.Core.map_Functor__((Grammar $tok) $c)"](nil)(nil)(nil)(__e4)(__arg4)(__e6(val))
                                        end
                                        return __frame3[1]
                                      end
                                      __frame2[8]["11"] = function()
                                        local __frame3 = {
                                          nil,
                                          nil
                                        }
                                        local __e10 = __frame2[7]["arg1"]
                                        __frame3[1] = {}
                                        __frame3[1]["tag"] = "11"
                                        __frame3[1]["arg1"] = __e10
                                        __frame3[2] = {}
                                        __frame3[2]["tag"] = "9"
                                        __frame3[2]["arg1"] = __arg3
                                        __frame3[2]["arg2"] = 1
                                        __frame3[2]["arg3"] = __frame3[1]
                                        __frame3[2]["arg4"] = function(__eta0)
                                          local __frame4 = {
                                            nil
                                          }
                                          __frame4[1] = {}
                                          __frame4[1]["tag"] = "0"
                                          __frame4[1]["arg1"] = __arg4(__eta0)
                                          return __frame4[1]
                                        end
                                        return __frame3[2]
                                      end
                                      __frame2[13] = __frame2[8][__frame2[7]["tag"]]
                                      if __frame2[13] then
                                        __frame2[14] = __frame2[13]()
                                      else
                                        __frame2[9] = __arg3
                                        __frame2[10] = {
                                          nil
                                        }
                                        __frame2[10][1] = function()
                                          local __frame3 = {
                                            nil
                                          }
                                          __frame3[1] = {}
                                          __frame3[1]["tag"] = "9"
                                          __frame3[1]["arg1"] = 1
                                          __frame3[1]["arg2"] = 1
                                          __frame3[1]["arg3"] = __arg5
                                          __frame3[1]["arg4"] = function(__eta0)
                                            local __frame4 = {
                                              nil
                                            }
                                            __frame4[1] = {}
                                            __frame4[1]["tag"] = "0"
                                            __frame4[1]["arg1"] = __arg4(__eta0)
                                            return __frame4[1]
                                          end
                                          return __frame3[1]
                                        end
                                        __frame2[11] = __frame2[10][__frame2[9]]
                                        if __frame2[11] then
                                          __frame2[12] = __frame2[11]()
                                        else
                                          idris["error"]("Impossible else branch")
                                        end
                                        __frame2[14] = __frame2[12]
                                      end
                                      __frame2[16] = __frame2[14]
                                    end
                                    __frame2[18] = __frame2[16]
                                  end
                                  __frame2[20] = __frame2[18]
                                end
                                return __frame2[20]
                              end
                              __frame1[23] = __frame1[6][__frame1[5]]
                              if __frame1[23] then
                                __frame1[24] = __frame1[23]()
                              else
                                __frame1[7] = __arg5
                                __frame1[8] = {
                                  nil
                                }
                                __frame1[8]["10"] = function()
                                  local __frame2 = {
                                    nil
                                  }
                                  local __e19 = __frame1[7]["arg1"]
                                  local __e20 = __frame1[7]["arg2"]
                                  local __e21 = __frame1[7]["arg3"]
                                  local __e22 = __frame1[7]["arg4"]
                                  __frame2[1] = {}
                                  __frame2[1]["tag"] = "10"
                                  __frame2[1]["arg1"] = __e19
                                  __frame2[1]["arg2"] = __e20
                                  __frame2[1]["arg3"] = idris["Text.Parser.Core.map_Functor__((Grammar $tok) $c)"](nil)(nil)(nil)(__e19)(__arg4)(__e21)
                                  __frame2[1]["arg4"] = function()
                                    return idris["Text.Parser.Core.map_Functor__((Grammar $tok) $c)"](nil)(nil)(nil)(__e20)(__arg4)(__e22())
                                  end
                                  return __frame2[1]
                                end
                                __frame1[21] = __frame1[8][__frame1[7]["tag"]]
                                if __frame1[21] then
                                  __frame1[22] = __frame1[21]()
                                else
                                  __frame1[9] = __arg3
                                  __frame1[10] = {
                                    nil
                                  }
                                  __frame1[10][0] = function()
                                    local __frame2 = {
                                      nil,
                                      nil,
                                      nil,
                                      nil,
                                      nil,
                                      nil,
                                      nil,
                                      nil,
                                      nil,
                                      nil,
                                      nil,
                                      nil
                                    }
                                    __frame2[1] = __arg5
                                    __frame2[2] = {
                                      nil
                                    }
                                    __frame2[2]["8"] = function()
                                      local __frame3 = {
                                        nil
                                      }
                                      local __e14 = __frame2[1]["arg1"]
                                      local __e15 = __frame2[1]["arg2"]
                                      local __e16 = __frame2[1]["arg3"]
                                      __frame3[1] = {}
                                      __frame3[1]["tag"] = "8"
                                      __frame3[1]["arg1"] = __e14
                                      __frame3[1]["arg2"] = __e15
                                      __frame3[1]["arg3"] = function()
                                        return function(val)
                                            return idris["Text.Parser.Core.map_Functor__((Grammar $tok) $c)"](nil)(nil)(nil)(__e14)(__arg4)(__e16()(val))
                                          end
                                      end
                                      return __frame3[1]
                                    end
                                    __frame2[11] = __frame2[2][__frame2[1]["tag"]]
                                    if __frame2[11] then
                                      __frame2[12] = __frame2[11]()
                                    else
                                      __frame2[3] = __arg5
                                      __frame2[4] = {
                                        nil,
                                        nil
                                      }
                                      __frame2[4]["9"] = function()
                                        local __frame3 = {
                                          nil
                                        }
                                        local __e3 = __frame2[3]["arg1"]
                                        local __e4 = __frame2[3]["arg2"]
                                        local __e5 = __frame2[3]["arg3"]
                                        local __e6 = __frame2[3]["arg4"]
                                        __frame3[1] = {}
                                        __frame3[1]["tag"] = "9"
                                        __frame3[1]["arg1"] = __e3
                                        __frame3[1]["arg2"] = __e4
                                        __frame3[1]["arg3"] = __e5
                                        __frame3[1]["arg4"] = function(val)
                                          return idris["Text.Parser.Core.map_Functor__((Grammar $tok) $c)"](nil)(nil)(nil)(__e4)(__arg4)(__e6(val))
                                        end
                                        return __frame3[1]
                                      end
                                      __frame2[4]["11"] = function()
                                        local __frame3 = {
                                          nil,
                                          nil
                                        }
                                        local __e10 = __frame2[3]["arg1"]
                                        __frame3[1] = {}
                                        __frame3[1]["tag"] = "11"
                                        __frame3[1]["arg1"] = __e10
                                        __frame3[2] = {}
                                        __frame3[2]["tag"] = "9"
                                        __frame3[2]["arg1"] = __arg3
                                        __frame3[2]["arg2"] = 1
                                        __frame3[2]["arg3"] = __frame3[1]
                                        __frame3[2]["arg4"] = function(__eta0)
                                          local __frame4 = {
                                            nil
                                          }
                                          __frame4[1] = {}
                                          __frame4[1]["tag"] = "0"
                                          __frame4[1]["arg1"] = __arg4(__eta0)
                                          return __frame4[1]
                                        end
                                        return __frame3[2]
                                      end
                                      __frame2[9] = __frame2[4][__frame2[3]["tag"]]
                                      if __frame2[9] then
                                        __frame2[10] = __frame2[9]()
                                      else
                                        __frame2[5] = __arg3
                                        __frame2[6] = {
                                          nil
                                        }
                                        __frame2[6][1] = function()
                                          local __frame3 = {
                                            nil
                                          }
                                          __frame3[1] = {}
                                          __frame3[1]["tag"] = "9"
                                          __frame3[1]["arg1"] = 1
                                          __frame3[1]["arg2"] = 1
                                          __frame3[1]["arg3"] = __arg5
                                          __frame3[1]["arg4"] = function(__eta0)
                                            local __frame4 = {
                                              nil
                                            }
                                            __frame4[1] = {}
                                            __frame4[1]["tag"] = "0"
                                            __frame4[1]["arg1"] = __arg4(__eta0)
                                            return __frame4[1]
                                          end
                                          return __frame3[1]
                                        end
                                        __frame2[7] = __frame2[6][__frame2[5]]
                                        if __frame2[7] then
                                          __frame2[8] = __frame2[7]()
                                        else
                                          idris["error"]("Impossible else branch")
                                        end
                                        __frame2[10] = __frame2[8]
                                      end
                                      __frame2[12] = __frame2[10]
                                    end
                                    return __frame2[12]
                                  end
                                  __frame1[19] = __frame1[10][__frame1[9]]
                                  if __frame1[19] then
                                    __frame1[20] = __frame1[19]()
                                  else
                                    __frame1[11] = __arg5
                                    __frame1[12] = {
                                      nil,
                                      nil
                                    }
                                    __frame1[12]["9"] = function()
                                      local __frame2 = {
                                        nil
                                      }
                                      local __e3 = __frame1[11]["arg1"]
                                      local __e4 = __frame1[11]["arg2"]
                                      local __e5 = __frame1[11]["arg3"]
                                      local __e6 = __frame1[11]["arg4"]
                                      __frame2[1] = {}
                                      __frame2[1]["tag"] = "9"
                                      __frame2[1]["arg1"] = __e3
                                      __frame2[1]["arg2"] = __e4
                                      __frame2[1]["arg3"] = __e5
                                      __frame2[1]["arg4"] = function(val)
                                        return idris["Text.Parser.Core.map_Functor__((Grammar $tok) $c)"](nil)(nil)(nil)(__e4)(__arg4)(__e6(val))
                                      end
                                      return __frame2[1]
                                    end
                                    __frame1[12]["11"] = function()
                                      local __frame2 = {
                                        nil,
                                        nil
                                      }
                                      local __e10 = __frame1[11]["arg1"]
                                      __frame2[1] = {}
                                      __frame2[1]["tag"] = "11"
                                      __frame2[1]["arg1"] = __e10
                                      __frame2[2] = {}
                                      __frame2[2]["tag"] = "9"
                                      __frame2[2]["arg1"] = __arg3
                                      __frame2[2]["arg2"] = 1
                                      __frame2[2]["arg3"] = __frame2[1]
                                      __frame2[2]["arg4"] = function(__eta0)
                                        local __frame3 = {
                                          nil
                                        }
                                        __frame3[1] = {}
                                        __frame3[1]["tag"] = "0"
                                        __frame3[1]["arg1"] = __arg4(__eta0)
                                        return __frame3[1]
                                      end
                                      return __frame2[2]
                                    end
                                    __frame1[17] = __frame1[12][__frame1[11]["tag"]]
                                    if __frame1[17] then
                                      __frame1[18] = __frame1[17]()
                                    else
                                      __frame1[13] = __arg3
                                      __frame1[14] = {
                                        nil
                                      }
                                      __frame1[14][1] = function()
                                        local __frame2 = {
                                          nil
                                        }
                                        __frame2[1] = {}
                                        __frame2[1]["tag"] = "9"
                                        __frame2[1]["arg1"] = 1
                                        __frame2[1]["arg2"] = 1
                                        __frame2[1]["arg3"] = __arg5
                                        __frame2[1]["arg4"] = function(__eta0)
                                          local __frame3 = {
                                            nil
                                          }
                                          __frame3[1] = {}
                                          __frame3[1]["tag"] = "0"
                                          __frame3[1]["arg1"] = __arg4(__eta0)
                                          return __frame3[1]
                                        end
                                        return __frame2[1]
                                      end
                                      __frame1[15] = __frame1[14][__frame1[13]]
                                      if __frame1[15] then
                                        __frame1[16] = __frame1[15]()
                                      else
                                        idris["error"]("Impossible else branch")
                                      end
                                      __frame1[18] = __frame1[16]
                                    end
                                    __frame1[20] = __frame1[18]
                                  end
                                  __frame1[22] = __frame1[20]
                                end
                                __frame1[24] = __frame1[22]
                              end
                              __frame1[26] = __frame1[24]
                            end
                            __frame1[28] = __frame1[26]
                          end
                          return __frame1[28]
                        end)()
                    end
                end
            end
        end
    end
end
idris["Prelude.Types.fromInteger_Num__Nat"] = function(__arg0)
  return (function()
      return __arg0
    end)()
end
idris["Prelude.Types.foldr_Foldable__List"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return (function()
                      local __frame1 = {
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame1[1] = __arg4
                      __frame1[2] = {
                        nil,
                        nil
                      }
                      __frame1[2]["0"] = function()
                        return __arg3
                      end
                      __frame1[2]["1"] = function()
                        local __e2 = __frame1[1]["arg1"]
                        local __e3 = __frame1[1]["arg2"]
                        return __arg2(__e2)(idris["Prelude.Types.foldr_Foldable__List"](nil)(nil)(__arg2)(__arg3)(__e3))
                      end
                      __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                      if __frame1[3] then
                        __frame1[4] = __frame1[3]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame1[4]
                    end)()
                end
            end
        end
    end
end
idris["Prelude.Types.foldl_Foldable__List"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return (function()
                      local __frame1 = {
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame1[1] = __arg4
                      __frame1[2] = {
                        nil,
                        nil
                      }
                      __frame1[2]["0"] = function()
                        return __arg3
                      end
                      __frame1[2]["1"] = function()
                        local __e2 = __frame1[1]["arg1"]
                        local __e3 = __frame1[1]["arg2"]
                        return idris["Prelude.Types.foldl_Foldable__List"](nil)(nil)(__arg2)(__arg2(__arg3)(__e2))(__e3)
                      end
                      __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                      if __frame1[3] then
                        __frame1[4] = __frame1[3]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame1[4]
                    end)()
                end
            end
        end
    end
end
idris["Prelude.Types.compare_Ord__Nat"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil,
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg0
          __frame1[2] = {
            nil
          }
          __frame1[2]["0"] = function()
            local __frame2 = {
              nil,
              nil,
              nil,
              nil
            }
            __frame2[1] = __arg1
            __frame2[2] = {
              nil
            }
            __frame2[2]["0"] = function()
              return 1
            end
            __frame2[3] = __frame2[2][bigint.tostring(__frame2[1])]
            if __frame2[3] then
              __frame2[4] = __frame2[3]()
            else
              __frame2[4] = 0
            end
            return __frame2[4]
          end
          __frame1[7] = __frame1[2][bigint.tostring(__frame1[1])]
          if __frame1[7] then
            __frame1[8] = __frame1[7]()
          else
            local __e0 = __arg0 - bigint:new("1")
            __frame1[3] = __arg1
            __frame1[4] = {
              nil
            }
            __frame1[4]["0"] = function()
              return 2
            end
            __frame1[5] = __frame1[4][bigint.tostring(__frame1[3])]
            if __frame1[5] then
              __frame1[6] = __frame1[5]()
            else
              local __e2 = __arg1 - bigint:new("1")
              __frame1[6] = idris["Prelude.Types.compare_Ord__Nat"](__e0)(__e2)
            end
            __frame1[8] = __frame1[6]
          end
          return __frame1[8]
        end)()
    end
end
idris["Prelude.EqOrd.compare_Ord__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return (function()
                          local __frame1 = {
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          __frame1[1] = __arg4
                          __frame1[2] = {
                            nil
                          }
                          __frame1[2]["0"] = function()
                            local __frame2 = {
                              nil,
                              nil,
                              nil,
                              nil
                            }
                            local __e2 = __frame1[1]["arg1"]
                            local __e3 = __frame1[1]["arg2"]
                            __frame2[1] = __arg5
                            __frame2[2] = {
                              nil
                            }
                            __frame2[2]["0"] = function()
                              local __frame3 = {
                                nil,
                                nil,
                                nil,
                                nil,
                                nil,
                                nil,
                                nil,
                                nil
                              }
                              local __e6 = __frame2[1]["arg1"]
                              local __e7 = __frame2[1]["arg2"]
                              __frame3[1] = __arg2
                              __frame3[2] = {
                                nil
                              }
                              __frame3[2]["0"] = function()
                                local __e1 = __frame3[1]["arg1"]
                                return __e1
                              end
                              __frame3[3] = __frame3[2][__frame3[1]["tag"]]
                              if __frame3[3] then
                                __frame3[4] = __frame3[3]()
                              else
                                idris["error"]("Impossible else branch")
                              end
                              __frame3[5] = __frame3[4]
                              __frame3[6] = {
                                nil
                              }
                              __frame3[6]["0"] = function()
                                local __e4 = __frame3[5]["arg2"]
                                return __e4(__e2)(__e6)
                              end
                              __frame3[7] = __frame3[6][__frame3[5]["tag"]]
                              if __frame3[7] then
                                __frame3[8] = __frame3[7]()
                              else
                                idris["error"]("Impossible else branch")
                              end
                              return idris["Prelude.EqOrd.case[2402]compare"](nil)(nil)(__arg2)(__arg3)(__e2)(__e3)(__e6)(__e7)(__frame3[8])
                            end
                            __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                            if __frame2[3] then
                              __frame2[4] = __frame2[3]()
                            else
                              idris["error"]("Impossible else branch")
                            end
                            return __frame2[4]
                          end
                          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                          if __frame1[3] then
                            __frame1[4] = __frame1[3]()
                          else
                            idris["error"]("Impossible else branch")
                          end
                          return __frame1[4]
                        end)()
                    end
                end
            end
        end
    end
end
idris["Prelude.Types.cast_Cast__String_Integer"] = function(__ext0)
  return (function()
      return bigint:new(__ext0)
    end)()
end
idris["Prelude.Types.cast_Cast__String_Int"] = function(__ext0)
  return (function()
      return idris.strtointeger(__ext0)
    end)()
end
idris["Prelude.Types.cast_Cast__Nat_Int"] = function(__ext0)
  return (function()
      return bigint.tonumber(__ext0)
    end)()
end
idris["Prelude.Types.cast_Cast__Integer_Int"] = function(__ext0)
  return (function()
      return bigint.tonumber(__ext0)
    end)()
end
idris["Prelude.Types.cast_Cast__Int_Integer"] = function(__ext0)
  return (function()
      return bigint:new(__ext0)
    end)()
end
idris["Prelude.Types.cast_Cast__Int_Char"] = function(__ext0)
  return (function()
      return utf8.char(__ext0)
    end)()
end
idris["Utils.Path.TokType_TokenKind__PathTokenKind"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil,
        nil
      }
      __frame1[2]["0"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "idris[\"String\"]"
        return __frame2[1]
      end
      __frame1[2]["1"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "idris[\"Builtin.Unit\"]"
        return __frame2[1]
      end
      __frame1[3] = __frame1[2][__frame1[1]["tag"]]
      if __frame1[3] then
        __frame1[4] = __frame1[3]()
      else
        idris["error"]("Impossible else branch")
      end
      return __frame1[4]
    end)()
end
idris["Prelude.EqOrd.>_Ord__Int"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil,
            nil
          }
          if __arg0 > __arg1 then
            __frame1[1] = 1
          else
            __frame1[1] = 0
          end
          __frame1[2] = __frame1[1]
          __frame1[3] = {
            nil
          }
          __frame1[3][0] = function()
            return 1
          end
          __frame1[4] = __frame1[3][__frame1[2]]
          if __frame1[4] then
            __frame1[5] = __frame1[4]()
          else
            __frame1[5] = 0
          end
          return __frame1[5]
        end)()
    end
end
idris["Prelude.EqOrd.max_Ord__Int"] = function(__arg0)
  return function(__arg1)
      return (function()
          return idris["Prelude.EqOrd.case[1153]max"](__arg1)(__arg0)(idris["Prelude.EqOrd.>_Ord__Int"](__arg0)(__arg1))
        end)()
    end
end
idris["Prelude.EqOrd.>_Ord__Char"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil,
            nil
          }
          if __arg0 > __arg1 then
            __frame1[1] = 1
          else
            __frame1[1] = 0
          end
          __frame1[2] = __frame1[1]
          __frame1[3] = {
            nil
          }
          __frame1[3][0] = function()
            return 1
          end
          __frame1[4] = __frame1[3][__frame1[2]]
          if __frame1[4] then
            __frame1[5] = __frame1[4]()
          else
            __frame1[5] = 0
          end
          return __frame1[5]
        end)()
    end
end
idris["Prelude.Types.>>=_Monad__Maybe"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg2
                  __frame1[2] = {
                    nil,
                    nil
                  }
                  __frame1[2]["0"] = function()
                    local __frame2 = {
                      nil
                    }
                    __frame2[1] = {}
                    __frame2[1]["tag"] = "0"
                    return __frame2[1]
                  end
                  __frame1[2]["1"] = function()
                    local __e2 = __frame1[1]["arg1"]
                    return __arg3(__e2)
                  end
                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[4]
                end)()
            end
        end
    end
end
idris["Prelude.Types.>>=_Monad__(Either $e)"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return (function()
                      local __frame1 = {
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame1[1] = __arg3
                      __frame1[2] = {
                        nil,
                        nil
                      }
                      __frame1[2]["0"] = function()
                        local __frame2 = {
                          nil
                        }
                        local __e2 = __frame1[1]["arg1"]
                        __frame2[1] = {}
                        __frame2[1]["tag"] = "0"
                        __frame2[1]["arg1"] = __e2
                        return __frame2[1]
                      end
                      __frame1[2]["1"] = function()
                        local __e5 = __frame1[1]["arg1"]
                        return __arg4(__e5)
                      end
                      __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                      if __frame1[3] then
                        __frame1[4] = __frame1[3]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame1[4]
                    end)()
                end
            end
        end
    end
end
idris["Prelude.EqOrd.>=_Ord__Int"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil,
            nil
          }
          if __arg0 >= __arg1 then
            __frame1[1] = 1
          else
            __frame1[1] = 0
          end
          __frame1[2] = __frame1[1]
          __frame1[3] = {
            nil
          }
          __frame1[3][0] = function()
            return 1
          end
          __frame1[4] = __frame1[3][__frame1[2]]
          if __frame1[4] then
            __frame1[5] = __frame1[4]()
          else
            __frame1[5] = 0
          end
          return __frame1[5]
        end)()
    end
end
idris["Prelude.EqOrd.>=_Ord__Char"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil,
            nil
          }
          if __arg0 >= __arg1 then
            __frame1[1] = 1
          else
            __frame1[1] = 0
          end
          __frame1[2] = __frame1[1]
          __frame1[3] = {
            nil
          }
          __frame1[3][0] = function()
            return 1
          end
          __frame1[4] = __frame1[3][__frame1[2]]
          if __frame1[4] then
            __frame1[5] = __frame1[4]()
          else
            __frame1[5] = 0
          end
          return __frame1[5]
        end)()
    end
end
idris["Prelude.EqOrd.==_Eq__String"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil,
            nil
          }
          if __arg0 == __arg1 then
            __frame1[1] = 1
          else
            __frame1[1] = 0
          end
          __frame1[2] = __frame1[1]
          __frame1[3] = {
            nil
          }
          __frame1[3][0] = function()
            return 1
          end
          __frame1[4] = __frame1[3][__frame1[2]]
          if __frame1[4] then
            __frame1[5] = __frame1[4]()
          else
            __frame1[5] = 0
          end
          return __frame1[5]
        end)()
    end
end
idris["Parser.Rule.Source.case[2773]exactIdent"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg2
              __frame1[2] = {
                nil
              }
              __frame1[2]["5"] = function()
                local __e0 = __frame1[1]["arg1"]
                return idris["Parser.Rule.Source.case[2785]case block in exactIdent"](__arg0)(__arg1)(__e0)(idris["Prelude.EqOrd.==_Eq__String"](__e0)(__arg0))
              end
              __frame1[4] = __frame1[2][__frame1[1]["tag"]]
              if __frame1[4] then
                __frame1[5] = __frame1[4]()
              else
                __frame1[3] = {}
                __frame1[3]["tag"] = "0"
                __frame1[5] = __frame1[3]
              end
              return __frame1[5]
            end)()
        end
    end
end
idris["Parser.Rule.Source.case[2672]symbol"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg2
              __frame1[2] = {
                nil
              }
              __frame1[2]["8"] = function()
                local __e0 = __frame1[1]["arg1"]
                return idris["Parser.Rule.Source.case[2684]case block in symbol"](__arg0)(__arg1)(__e0)(idris["Prelude.EqOrd.==_Eq__String"](__e0)(__arg0))
              end
              __frame1[4] = __frame1[2][__frame1[1]["tag"]]
              if __frame1[4] then
                __frame1[5] = __frame1[4]()
              else
                __frame1[3] = {}
                __frame1[3]["tag"] = "0"
                __frame1[5] = __frame1[3]
              end
              return __frame1[5]
            end)()
        end
    end
end
idris["Prelude.EqOrd.==_Eq__Ordering"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg0
          __frame1[2] = {
            nil,
            nil,
            nil
          }
          __frame1[2][0] = function()
            local __frame2 = {
              nil,
              nil,
              nil,
              nil
            }
            __frame2[1] = __arg1
            __frame2[2] = {
              nil
            }
            __frame2[2][0] = function()
              return 0
            end
            __frame2[3] = __frame2[2][__frame2[1]]
            if __frame2[3] then
              __frame2[4] = __frame2[3]()
            else
              __frame2[4] = 1
            end
            return __frame2[4]
          end
          __frame1[2][1] = function()
            local __frame2 = {
              nil,
              nil,
              nil,
              nil
            }
            __frame2[1] = __arg1
            __frame2[2] = {
              nil
            }
            __frame2[2][1] = function()
              return 0
            end
            __frame2[3] = __frame2[2][__frame2[1]]
            if __frame2[3] then
              __frame2[4] = __frame2[3]()
            else
              __frame2[4] = 1
            end
            return __frame2[4]
          end
          __frame1[2][2] = function()
            local __frame2 = {
              nil,
              nil,
              nil,
              nil
            }
            __frame2[1] = __arg1
            __frame2[2] = {
              nil
            }
            __frame2[2][2] = function()
              return 0
            end
            __frame2[3] = __frame2[2][__frame2[1]]
            if __frame2[3] then
              __frame2[4] = __frame2[3]()
            else
              __frame2[4] = 1
            end
            return __frame2[4]
          end
          __frame1[3] = __frame1[2][__frame1[1]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            __frame1[4] = 1
          end
          return __frame1[4]
        end)()
    end
end
idris["Prelude.Types.>_Ord__Nat"] = function(__arg0)
  return function(__arg1)
      return (function()
          return idris["Prelude.EqOrd.==_Eq__Ordering"](idris["Prelude.Types.compare_Ord__Nat"](__arg0)(__arg1))(2)
        end)()
    end
end
idris["Prelude.EqOrd.>_Ord__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return (function()
                          return idris["Prelude.EqOrd.==_Eq__Ordering"](idris["Prelude.EqOrd.compare_Ord__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)"](nil)(nil)(__arg2)(__arg3)(__arg4)(__arg5))(2)
                        end)()
                    end
                end
            end
        end
    end
end
idris["Prelude.EqOrd.max_Ord__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return (function()
                          return idris["Prelude.EqOrd.case[2277]max"](nil)(nil)(__arg2)(__arg3)(__arg5)(__arg4)(idris["Prelude.EqOrd.>_Ord__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)"](nil)(nil)(__arg2)(__arg3)(__arg4)(__arg5))
                        end)()
                    end
                end
            end
        end
    end
end
idris["Prelude.Types.==_Eq__Nat"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil,
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg0
          __frame1[2] = {
            nil
          }
          __frame1[2]["0"] = function()
            local __frame2 = {
              nil,
              nil,
              nil,
              nil
            }
            __frame2[1] = __arg1
            __frame2[2] = {
              nil
            }
            __frame2[2]["0"] = function()
              return 0
            end
            __frame2[3] = __frame2[2][bigint.tostring(__frame2[1])]
            if __frame2[3] then
              __frame2[4] = __frame2[3]()
            else
              __frame2[4] = 1
            end
            return __frame2[4]
          end
          __frame1[7] = __frame1[2][bigint.tostring(__frame1[1])]
          if __frame1[7] then
            __frame1[8] = __frame1[7]()
          else
            local __e0 = __arg0 - bigint:new("1")
            __frame1[3] = __arg1
            __frame1[4] = {
              nil
            }
            __frame1[4]["0"] = function()
              return 1
            end
            __frame1[5] = __frame1[4][bigint.tostring(__frame1[3])]
            if __frame1[5] then
              __frame1[6] = __frame1[5]()
            else
              local __e1 = __arg1 - bigint:new("1")
              __frame1[6] = idris["Prelude.Types.==_Eq__Nat"](__e0)(__e1)
            end
            __frame1[8] = __frame1[6]
          end
          return __frame1[8]
        end)()
    end
end
idris["Prelude.EqOrd.==_Eq__Integer"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil,
            nil
          }
          if __arg0 == __arg1 then
            __frame1[1] = 1
          else
            __frame1[1] = 0
          end
          __frame1[2] = __frame1[1]
          __frame1[3] = {
            nil
          }
          __frame1[3][0] = function()
            return 1
          end
          __frame1[4] = __frame1[3][__frame1[2]]
          if __frame1[4] then
            __frame1[5] = __frame1[4]()
          else
            __frame1[5] = 0
          end
          return __frame1[5]
        end)()
    end
end
idris["Prelude.EqOrd.case[1284]compare"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg2
              __frame1[2] = {
                nil,
                nil
              }
              __frame1[2][0] = function()
                return 0
              end
              __frame1[2][1] = function()
                return idris["Prelude.EqOrd.case[1301]case block in compare"](__arg0)(__arg1)(idris["Prelude.EqOrd.==_Eq__Integer"](__arg1)(__arg0))
              end
              __frame1[3] = __frame1[2][__frame1[1]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["Prelude.EqOrd.==_Eq__Int"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil,
            nil
          }
          if __arg0 == __arg1 then
            __frame1[1] = 1
          else
            __frame1[1] = 0
          end
          __frame1[2] = __frame1[1]
          __frame1[3] = {
            nil
          }
          __frame1[3][0] = function()
            return 1
          end
          __frame1[4] = __frame1[3][__frame1[2]]
          if __frame1[4] then
            __frame1[5] = __frame1[4]()
          else
            __frame1[5] = 0
          end
          return __frame1[5]
        end)()
    end
end
idris["Prelude.EqOrd.case[1170]compare"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg2
              __frame1[2] = {
                nil,
                nil
              }
              __frame1[2][0] = function()
                return 0
              end
              __frame1[2][1] = function()
                return idris["Prelude.EqOrd.case[1187]case block in compare"](__arg0)(__arg1)(idris["Prelude.EqOrd.==_Eq__Int"](__arg1)(__arg0))
              end
              __frame1[3] = __frame1[2][__frame1[1]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["Prelude.EqOrd.==_Eq__Char"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil,
            nil
          }
          if __arg0 == __arg1 then
            __frame1[1] = 1
          else
            __frame1[1] = 0
          end
          __frame1[2] = __frame1[1]
          __frame1[3] = {
            nil
          }
          __frame1[3][0] = function()
            return 1
          end
          __frame1[4] = __frame1[3][__frame1[2]]
          if __frame1[4] then
            __frame1[5] = __frame1[4]()
          else
            __frame1[5] = 0
          end
          return __frame1[5]
        end)()
    end
end
idris["Utils.Path.==_Eq__PathTokenKind"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg0
          __frame1[2] = {
            nil,
            nil
          }
          __frame1[2]["0"] = function()
            local __frame2 = {
              nil,
              nil,
              nil,
              nil
            }
            __frame2[1] = __arg1
            __frame2[2] = {
              nil
            }
            __frame2[2]["0"] = function()
              return 0
            end
            __frame2[3] = __frame2[2][__frame2[1]["tag"]]
            if __frame2[3] then
              __frame2[4] = __frame2[3]()
            else
              __frame2[4] = 1
            end
            return __frame2[4]
          end
          __frame1[2]["1"] = function()
            local __frame2 = {
              nil,
              nil,
              nil,
              nil
            }
            local __e0 = __frame1[1]["arg1"]
            __frame2[1] = __arg1
            __frame2[2] = {
              nil
            }
            __frame2[2]["1"] = function()
              local __e1 = __frame2[1]["arg1"]
              return idris["Prelude.EqOrd.==_Eq__Char"](__e0)(__e1)
            end
            __frame2[3] = __frame2[2][__frame2[1]["tag"]]
            if __frame2[3] then
              __frame2[4] = __frame2[3]()
            else
              __frame2[4] = 1
            end
            return __frame2[4]
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            __frame1[4] = 1
          end
          return __frame1[4]
        end)()
    end
end
idris["Prelude.EqOrd.==_Eq__Bool"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg0
          __frame1[2] = {
            nil,
            nil
          }
          __frame1[2][0] = function()
            local __frame2 = {
              nil,
              nil,
              nil,
              nil
            }
            __frame2[1] = __arg1
            __frame2[2] = {
              nil
            }
            __frame2[2][0] = function()
              return 0
            end
            __frame2[3] = __frame2[2][__frame2[1]]
            if __frame2[3] then
              __frame2[4] = __frame2[3]()
            else
              __frame2[4] = 1
            end
            return __frame2[4]
          end
          __frame1[2][1] = function()
            local __frame2 = {
              nil,
              nil,
              nil,
              nil
            }
            __frame2[1] = __arg1
            __frame2[2] = {
              nil
            }
            __frame2[2][1] = function()
              return 0
            end
            __frame2[3] = __frame2[2][__frame2[1]]
            if __frame2[3] then
              __frame2[4] = __frame2[3]()
            else
              __frame2[4] = 1
            end
            return __frame2[4]
          end
          __frame1[3] = __frame1[2][__frame1[1]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            __frame1[4] = 1
          end
          return __frame1[4]
        end)()
    end
end
idris["Utils.Path.==_Eq__Body"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg0
          __frame1[2] = {
            nil,
            nil,
            nil
          }
          __frame1[2]["0"] = function()
            local __frame2 = {
              nil,
              nil,
              nil,
              nil
            }
            __frame2[1] = __arg1
            __frame2[2] = {
              nil
            }
            __frame2[2]["0"] = function()
              return 0
            end
            __frame2[3] = __frame2[2][__frame2[1]["tag"]]
            if __frame2[3] then
              __frame2[4] = __frame2[3]()
            else
              __frame2[4] = 1
            end
            return __frame2[4]
          end
          __frame1[2]["1"] = function()
            local __frame2 = {
              nil,
              nil,
              nil,
              nil
            }
            __frame2[1] = __arg1
            __frame2[2] = {
              nil
            }
            __frame2[2]["1"] = function()
              return 0
            end
            __frame2[3] = __frame2[2][__frame2[1]["tag"]]
            if __frame2[3] then
              __frame2[4] = __frame2[3]()
            else
              __frame2[4] = 1
            end
            return __frame2[4]
          end
          __frame1[2]["2"] = function()
            local __frame2 = {
              nil,
              nil,
              nil,
              nil
            }
            local __e0 = __frame1[1]["arg1"]
            __frame2[1] = __arg1
            __frame2[2] = {
              nil
            }
            __frame2[2]["2"] = function()
              local __e1 = __frame2[1]["arg1"]
              return idris["Prelude.EqOrd.==_Eq__String"](__e0)(__e1)
            end
            __frame2[3] = __frame2[2][__frame2[1]["tag"]]
            if __frame2[3] then
              __frame2[4] = __frame2[3]()
            else
              __frame2[4] = 1
            end
            return __frame2[4]
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            __frame1[4] = 1
          end
          return __frame1[4]
        end)()
    end
end
idris["Prelude.Types.<_Ord__Nat"] = function(__arg0)
  return function(__arg1)
      return (function()
          return idris["Prelude.EqOrd.==_Eq__Ordering"](idris["Prelude.Types.compare_Ord__Nat"](__arg0)(__arg1))(0)
        end)()
    end
end
idris["Prelude.EqOrd.<_Ord__Integer"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil,
            nil
          }
          if __arg0 < __arg1 then
            __frame1[1] = 1
          else
            __frame1[1] = 0
          end
          __frame1[2] = __frame1[1]
          __frame1[3] = {
            nil
          }
          __frame1[3][0] = function()
            return 1
          end
          __frame1[4] = __frame1[3][__frame1[2]]
          if __frame1[4] then
            __frame1[5] = __frame1[4]()
          else
            __frame1[5] = 0
          end
          return __frame1[5]
        end)()
    end
end
idris["Prelude.EqOrd.compare_Ord__Integer"] = function(__arg0)
  return function(__arg1)
      return (function()
          return idris["Prelude.EqOrd.case[1284]compare"](__arg1)(__arg0)(idris["Prelude.EqOrd.<_Ord__Integer"](__arg0)(__arg1))
        end)()
    end
end
idris["Prelude.EqOrd.<_Ord__Int"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil,
            nil
          }
          if __arg0 < __arg1 then
            __frame1[1] = 1
          else
            __frame1[1] = 0
          end
          __frame1[2] = __frame1[1]
          __frame1[3] = {
            nil
          }
          __frame1[3][0] = function()
            return 1
          end
          __frame1[4] = __frame1[3][__frame1[2]]
          if __frame1[4] then
            __frame1[5] = __frame1[4]()
          else
            __frame1[5] = 0
          end
          return __frame1[5]
        end)()
    end
end
idris["Prelude.EqOrd.min_Ord__Int"] = function(__arg0)
  return function(__arg1)
      return (function()
          return idris["Prelude.EqOrd.case[1139]min"](__arg1)(__arg0)(idris["Prelude.EqOrd.<_Ord__Int"](__arg0)(__arg1))
        end)()
    end
end
idris["Prelude.EqOrd.compare_Ord__Int"] = function(__arg0)
  return function(__arg1)
      return (function()
          return idris["Prelude.EqOrd.case[1170]compare"](__arg1)(__arg0)(idris["Prelude.EqOrd.<_Ord__Int"](__arg0)(__arg1))
        end)()
    end
end
idris["Prelude.Num.abs_Abs__Int"] = function(__arg0)
  return (function()
      return idris["Prelude.Num.case[408]abs"](__arg0)(idris["Prelude.EqOrd.<_Ord__Int"](__arg0)(bigint.tonumber(bigint:new("0"))))
    end)()
end
idris["Prelude.EqOrd.<_Ord__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return (function()
                          return idris["Prelude.EqOrd.==_Eq__Ordering"](idris["Prelude.EqOrd.compare_Ord__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)"](nil)(nil)(__arg2)(__arg3)(__arg4)(__arg5))(0)
                        end)()
                    end
                end
            end
        end
    end
end
idris["Prelude.EqOrd.min_Ord__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return (function()
                          return idris["Prelude.EqOrd.case[2235]min"](nil)(nil)(__arg2)(__arg3)(__arg5)(__arg4)(idris["Prelude.EqOrd.<_Ord__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)"](nil)(nil)(__arg2)(__arg3)(__arg4)(__arg5))
                        end)()
                    end
                end
            end
        end
    end
end
idris["Prelude.EqOrd.<=_Ord__Int"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil,
            nil
          }
          if __arg0 <= __arg1 then
            __frame1[1] = 1
          else
            __frame1[1] = 0
          end
          __frame1[2] = __frame1[1]
          __frame1[3] = {
            nil
          }
          __frame1[3][0] = function()
            return 1
          end
          __frame1[4] = __frame1[3][__frame1[2]]
          if __frame1[4] then
            __frame1[5] = __frame1[4]()
          else
            __frame1[5] = 0
          end
          return __frame1[5]
        end)()
    end
end
idris["Prelude.EqOrd.<=_Ord__Char"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil,
            nil
          }
          if __arg0 <= __arg1 then
            __frame1[1] = 1
          else
            __frame1[1] = 0
          end
          __frame1[2] = __frame1[1]
          __frame1[3] = {
            nil
          }
          __frame1[3][0] = function()
            return 1
          end
          __frame1[4] = __frame1[3][__frame1[2]]
          if __frame1[4] then
            __frame1[5] = __frame1[4]()
          else
            __frame1[5] = 0
          end
          return __frame1[5]
        end)()
    end
end
idris["Prelude.Types.<*>_Applicative__Maybe"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg2
                  __frame1[2] = {
                    nil
                  }
                  __frame1[2]["1"] = function()
                    local __frame2 = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    local __e1 = __frame1[1]["arg1"]
                    __frame2[1] = __arg3
                    __frame2[2] = {
                      nil
                    }
                    __frame2[2]["1"] = function()
                      local __frame3 = {
                        nil
                      }
                      local __e3 = __frame2[1]["arg1"]
                      __frame3[1] = {}
                      __frame3[1]["tag"] = "1"
                      __frame3[1]["arg1"] = __e1(__e3)
                      return __frame3[1]
                    end
                    __frame2[4] = __frame2[2][__frame2[1]["tag"]]
                    if __frame2[4] then
                      __frame2[5] = __frame2[4]()
                    else
                      __frame2[3] = {}
                      __frame2[3]["tag"] = "0"
                      __frame2[5] = __frame2[3]
                    end
                    return __frame2[5]
                  end
                  __frame1[4] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[4] then
                    __frame1[5] = __frame1[4]()
                  else
                    __frame1[3] = {}
                    __frame1[3]["tag"] = "0"
                    __frame1[5] = __frame1[3]
                  end
                  return __frame1[5]
                end)()
            end
        end
    end
end
idris["Prelude.Num.-_Neg__Int"] = function(__ext0)
  return function(__ext1)
      return (function()
          return __ext0 - __ext1
        end)()
    end
end
idris["Prelude.Types.case[4177]toUpper"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil,
            nil
          }
          __frame1[2][0] = function()
            return utf8.char(idris["Prelude.Num.-_Neg__Int"](utf8.byte(__arg0))(32))
          end
          __frame1[2][1] = function()
            return __arg0
          end
          __frame1[3] = __frame1[2][__frame1[1]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Prelude.Types.case[4057]unpack,unpack'"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return (function()
                      local __frame1 = {
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame1[1] = __arg4
                      __frame1[2] = {
                        nil,
                        nil
                      }
                      __frame1[2][0] = function()
                        return __arg1
                      end
                      __frame1[2][1] = function()
                        local __frame2 = {
                          nil
                        }
                        __frame2[1] = {}
                        __frame2[1]["tag"] = "1"
                        __frame2[1]["arg1"] = utf8.sub(__arg2, __arg3 + 1, __arg3 + 1)
                        __frame2[1]["arg2"] = __arg1
                        return idris["Prelude.Types.3950:4045:unpack'"](__arg0)(idris["Prelude.Num.-_Neg__Int"](__arg3)(1))(__arg2)(__frame2[1])
                      end
                      __frame1[3] = __frame1[2][__frame1[1]]
                      if __frame1[3] then
                        __frame1[4] = __frame1[3]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame1[4]
                    end)()
                end
            end
        end
    end
end
idris["Prelude.Types.3950:4045:unpack'"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  return idris["Prelude.Types.case[4057]unpack,unpack'"](__arg0)(__arg3)(__arg2)(__arg1)(idris["Prelude.EqOrd.<_Ord__Int"](__arg1)(bigint.tonumber(bigint:new("0"))))
                end)()
            end
        end
    end
end
idris["Prelude.Types.+_Num__Nat"] = function(__ext0)
  return function(__ext1)
      return (function()
          return __ext0 + __ext1
        end)()
    end
end
idris["Prelude.Types.*_Num__Nat"] = function(__ext0)
  return function(__ext1)
      return (function()
          return __ext0 * __ext1
        end)()
    end
end
idris["Prelude.Basics.||"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg0
          __frame1[2] = {
            nil,
            nil
          }
          __frame1[2][0] = function()
            return 0
          end
          __frame1[2][1] = function()
            return __arg1()
          end
          __frame1[3] = __frame1[2][__frame1[1]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Data.List.zipWith"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return (function()
                          local __frame1 = {
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          __frame1[1] = __arg4
                          __frame1[2] = {
                            nil
                          }
                          __frame1[2]["0"] = function()
                            local __frame2 = {
                              nil
                            }
                            __frame2[1] = {}
                            __frame2[1]["tag"] = "0"
                            return __frame2[1]
                          end
                          __frame1[11] = __frame1[2][__frame1[1]["tag"]]
                          if __frame1[11] then
                            __frame1[12] = __frame1[11]()
                          else
                            __frame1[3] = __arg5
                            __frame1[4] = {
                              nil
                            }
                            __frame1[4]["0"] = function()
                              local __frame2 = {
                                nil
                              }
                              __frame2[1] = {}
                              __frame2[1]["tag"] = "0"
                              return __frame2[1]
                            end
                            __frame1[9] = __frame1[4][__frame1[3]["tag"]]
                            if __frame1[9] then
                              __frame1[10] = __frame1[9]()
                            else
                              __frame1[5] = __arg4
                              __frame1[6] = {
                                nil
                              }
                              __frame1[6]["1"] = function()
                                local __frame2 = {
                                  nil,
                                  nil,
                                  nil,
                                  nil
                                }
                                local __e1 = __frame1[5]["arg1"]
                                local __e2 = __frame1[5]["arg2"]
                                __frame2[1] = __arg5
                                __frame2[2] = {
                                  nil
                                }
                                __frame2[2]["1"] = function()
                                  local __frame3 = {
                                    nil
                                  }
                                  local __e4 = __frame2[1]["arg1"]
                                  local __e5 = __frame2[1]["arg2"]
                                  __frame3[1] = {}
                                  __frame3[1]["tag"] = "1"
                                  __frame3[1]["arg1"] = __arg3(__e1)(__e4)
                                  __frame3[1]["arg2"] = idris["Data.List.zipWith"](nil)(nil)(nil)(__arg3)(__e2)(__e5)
                                  return __frame3[1]
                                end
                                __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                                if __frame2[3] then
                                  __frame2[4] = __frame2[3]()
                                else
                                  idris["error"]("Impossible else branch")
                                end
                                return __frame2[4]
                              end
                              __frame1[7] = __frame1[6][__frame1[5]["tag"]]
                              if __frame1[7] then
                                __frame1[8] = __frame1[7]()
                              else
                                idris["error"]("Impossible else branch")
                              end
                              __frame1[10] = __frame1[8]
                            end
                            __frame1[12] = __frame1[10]
                          end
                          return __frame1[12]
                        end)()
                    end
                end
            end
        end
    end
end
idris["Data.List.zip"] = function(__arg0)
  return function(__arg1)
      return function(__ext0)
          return function(__ext1)
              return (function()
                  return idris["Data.List.zipWith"](nil)(nil)(nil)(function(x)
                      return function(y)
                          local __frame3 = {
                            nil
                          }
                          __frame3[1] = {}
                          __frame3[1]["tag"] = "0"
                          __frame3[1]["arg1"] = x
                          __frame3[1]["arg2"] = y
                          return __frame3[1]
                        end
                    end)(__ext0)(__ext1)
                end)()
            end
        end
    end
end
idris["Prelude.Interfaces.when"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg2
                  __frame1[2] = {
                    nil,
                    nil
                  }
                  __frame1[2][0] = function()
                    return __arg3()
                  end
                  __frame1[2][1] = function()
                    local __frame2 = {
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    __frame2[1] = __arg1
                    __frame2[2] = {
                      nil
                    }
                    __frame2[2]["0"] = function()
                      local __frame3 = {
                        nil
                      }
                      local __e2 = __frame2[1]["arg2"]
                      __frame3[1] = {}
                      __frame3[1]["tag"] = "0"
                      return __e2(nil)(__frame3[1])
                    end
                    __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                    if __frame2[3] then
                      __frame2[4] = __frame2[3]()
                    else
                      idris["error"]("Impossible else branch")
                    end
                    return __frame2[4]
                  end
                  __frame1[3] = __frame1[2][__frame1[1]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[4]
                end)()
            end
        end
    end
end
idris["Plugin.validateNameAtEntry"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil
      }
      __frame1[2]["0"] = function()
        local __frame2 = {
          nil,
          nil,
          nil,
          nil,
          nil
        }
        local __e0 = __frame1[1]["arg1"]
        __frame2[1] = __e0
        __frame2[2] = {
          nil
        }
        __frame2[2]["1"] = function()
          local __frame3 = {
            nil,
            nil,
            nil,
            nil,
            nil
          }
          local __e2 = __frame2[1]["arg1"]
          local __e3 = __frame2[1]["arg2"]
          __frame3[1] = __e2
          __frame3[2] = {
            nil
          }
          __frame3[2]["1"] = function()
            local __frame4 = {
              nil,
              nil,
              nil,
              nil,
              nil
            }
            local __e4 = __frame3[1]["arg1"]
            __frame4[1] = __e3
            __frame4[2] = {
              nil
            }
            __frame4[2]["1"] = function()
              local __frame5 = {
                nil,
                nil,
                nil,
                nil,
                nil
              }
              local __e6 = __frame4[1]["arg1"]
              local __e7 = __frame4[1]["arg2"]
              __frame5[1] = __e6
              __frame5[2] = {
                nil
              }
              __frame5[2]["1"] = function()
                local __frame6 = {
                  nil,
                  nil,
                  nil,
                  nil,
                  nil
                }
                local __e8 = __frame5[1]["arg1"]
                __frame6[1] = __e7
                __frame6[2] = {
                  nil
                }
                __frame6[2]["1"] = function()
                  local __frame7 = {
                    nil,
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  local __e10 = __frame6[1]["arg1"]
                  local __e11 = __frame6[1]["arg2"]
                  __frame7[1] = __e10
                  __frame7[2] = {
                    nil
                  }
                  __frame7[2]["3"] = function()
                    local __frame8 = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    local __e12 = __frame7[1]["arg1"]
                    __frame8[1] = __e11
                    __frame8[2] = {
                      nil
                    }
                    __frame8[2]["1"] = function()
                      local __frame9 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      local __e14 = __frame8[1]["arg1"]
                      local __e15 = __frame8[1]["arg2"]
                      __frame9[1] = __e14
                      __frame9[2] = {
                        nil
                      }
                      __frame9[2]["3"] = function()
                        local __frame10 = {
                          nil,
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        local __e16 = __frame9[1]["arg1"]
                        __frame10[1] = __e15
                        __frame10[2] = {
                          nil
                        }
                        __frame10[2]["1"] = function()
                          local __frame11 = {
                            nil,
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          local __e18 = __frame10[1]["arg1"]
                          local __e19 = __frame10[1]["arg2"]
                          __frame11[1] = __e18
                          __frame11[2] = {
                            nil
                          }
                          __frame11[2]["3"] = function()
                            local __frame12 = {
                              nil,
                              nil,
                              nil,
                              nil,
                              nil
                            }
                            local __e20 = __frame11[1]["arg1"]
                            __frame12[1] = __e19
                            __frame12[2] = {
                              nil
                            }
                            __frame12[2]["1"] = function()
                              local __frame13 = {
                                nil,
                                nil,
                                nil,
                                nil,
                                nil
                              }
                              local __e22 = __frame12[1]["arg1"]
                              local __e23 = __frame12[1]["arg2"]
                              __frame13[1] = __e22
                              __frame13[2] = {
                                nil
                              }
                              __frame13[2]["3"] = function()
                                local __frame14 = {
                                  nil,
                                  nil,
                                  nil,
                                  nil,
                                  nil
                                }
                                local __e24 = __frame13[1]["arg1"]
                                __frame14[1] = __e23
                                __frame14[2] = {
                                  nil
                                }
                                __frame14[2]["0"] = function()
                                  local __frame15 = {
                                    nil,
                                    nil
                                  }
                                  __frame15[1] = {}
                                  __frame15[1]["tag"] = "0"
                                  __frame15[1]["arg1"] = __e4
                                  __frame15[1]["arg2"] = __e8
                                  __frame15[1]["arg3"] = __e12
                                  __frame15[1]["arg4"] = __e16
                                  __frame15[1]["arg5"] = __e20
                                  __frame15[1]["arg6"] = __e24
                                  __frame15[2] = {}
                                  __frame15[2]["tag"] = "1"
                                  __frame15[2]["arg1"] = __frame15[1]
                                  return __frame15[2]
                                end
                                __frame14[4] = __frame14[2][__frame14[1]["tag"]]
                                if __frame14[4] then
                                  __frame14[5] = __frame14[4]()
                                else
                                  __frame14[3] = {}
                                  __frame14[3]["tag"] = "0"
                                  __frame14[5] = __frame14[3]
                                end
                                return __frame14[5]
                              end
                              __frame13[4] = __frame13[2][__frame13[1]["tag"]]
                              if __frame13[4] then
                                __frame13[5] = __frame13[4]()
                              else
                                __frame13[3] = {}
                                __frame13[3]["tag"] = "0"
                                __frame13[5] = __frame13[3]
                              end
                              return __frame13[5]
                            end
                            __frame12[4] = __frame12[2][__frame12[1]["tag"]]
                            if __frame12[4] then
                              __frame12[5] = __frame12[4]()
                            else
                              __frame12[3] = {}
                              __frame12[3]["tag"] = "0"
                              __frame12[5] = __frame12[3]
                            end
                            return __frame12[5]
                          end
                          __frame11[4] = __frame11[2][__frame11[1]["tag"]]
                          if __frame11[4] then
                            __frame11[5] = __frame11[4]()
                          else
                            __frame11[3] = {}
                            __frame11[3]["tag"] = "0"
                            __frame11[5] = __frame11[3]
                          end
                          return __frame11[5]
                        end
                        __frame10[4] = __frame10[2][__frame10[1]["tag"]]
                        if __frame10[4] then
                          __frame10[5] = __frame10[4]()
                        else
                          __frame10[3] = {}
                          __frame10[3]["tag"] = "0"
                          __frame10[5] = __frame10[3]
                        end
                        return __frame10[5]
                      end
                      __frame9[4] = __frame9[2][__frame9[1]["tag"]]
                      if __frame9[4] then
                        __frame9[5] = __frame9[4]()
                      else
                        __frame9[3] = {}
                        __frame9[3]["tag"] = "0"
                        __frame9[5] = __frame9[3]
                      end
                      return __frame9[5]
                    end
                    __frame8[4] = __frame8[2][__frame8[1]["tag"]]
                    if __frame8[4] then
                      __frame8[5] = __frame8[4]()
                    else
                      __frame8[3] = {}
                      __frame8[3]["tag"] = "0"
                      __frame8[5] = __frame8[3]
                    end
                    return __frame8[5]
                  end
                  __frame7[4] = __frame7[2][__frame7[1]["tag"]]
                  if __frame7[4] then
                    __frame7[5] = __frame7[4]()
                  else
                    __frame7[3] = {}
                    __frame7[3]["tag"] = "0"
                    __frame7[5] = __frame7[3]
                  end
                  return __frame7[5]
                end
                __frame6[4] = __frame6[2][__frame6[1]["tag"]]
                if __frame6[4] then
                  __frame6[5] = __frame6[4]()
                else
                  __frame6[3] = {}
                  __frame6[3]["tag"] = "0"
                  __frame6[5] = __frame6[3]
                end
                return __frame6[5]
              end
              __frame5[4] = __frame5[2][__frame5[1]["tag"]]
              if __frame5[4] then
                __frame5[5] = __frame5[4]()
              else
                __frame5[3] = {}
                __frame5[3]["tag"] = "0"
                __frame5[5] = __frame5[3]
              end
              return __frame5[5]
            end
            __frame4[4] = __frame4[2][__frame4[1]["tag"]]
            if __frame4[4] then
              __frame4[5] = __frame4[4]()
            else
              __frame4[3] = {}
              __frame4[3]["tag"] = "0"
              __frame4[5] = __frame4[3]
            end
            return __frame4[5]
          end
          __frame3[4] = __frame3[2][__frame3[1]["tag"]]
          if __frame3[4] then
            __frame3[5] = __frame3[4]()
          else
            __frame3[3] = {}
            __frame3[3]["tag"] = "0"
            __frame3[5] = __frame3[3]
          end
          return __frame3[5]
        end
        __frame2[4] = __frame2[2][__frame2[1]["tag"]]
        if __frame2[4] then
          __frame2[5] = __frame2[4]()
        else
          __frame2[3] = {}
          __frame2[3]["tag"] = "0"
          __frame2[5] = __frame2[3]
        end
        return __frame2[5]
      end
      __frame1[4] = __frame1[2][__frame1[1]["tag"]]
      if __frame1[4] then
        __frame1[5] = __frame1[4]()
      else
        __frame1[3] = {}
        __frame1[3]["tag"] = "0"
        __frame1[5] = __frame1[3]
      end
      return __frame1[5]
    end)()
end
idris["PrimIO.unsafeDestroyWorld"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              return __arg2
            end)()
        end
    end
end
idris["PrimIO.case[442]unsafePerformIO"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  return idris["PrimIO.unsafeDestroyWorld"](nil)(nil)(__arg3)
                end)()
            end
        end
    end
end
idris["PrimIO.unsafeCreateWorld"] = function(__arg0)
  return function(__arg1)
      return (function()
          return __arg1("%MkWorld")
        end)()
    end
end
idris["PrimIO.unsafePerformIO"] = function(__arg0)
  return function(__arg1)
      return (function()
          return idris["PrimIO.unsafeCreateWorld"](nil)(function(w)
              return idris["PrimIO.case[442]unsafePerformIO"](nil)(nil)(nil)(__arg1(w))
            end)
        end)()
    end
end
idris["Text.Lexer.toTokenMap"] = function(__arg0)
  return function(__ext0)
      return (function()
          return idris["Prelude.Types.map_Functor__List"](nil)(nil)(function(__lamc0)
              local __frame2 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame2[1] = __lamc0
              __frame2[2] = {
                nil
              }
              __frame2[2]["0"] = function()
                local __frame3 = {
                  nil
                }
                local __e2 = __frame2[1]["arg1"]
                local __e3 = __frame2[1]["arg2"]
                __frame3[1] = {}
                __frame3[1]["tag"] = "0"
                __frame3[1]["arg1"] = __e2
                __frame3[1]["arg2"] = function(__eta0)
                  local __frame4 = {
                    nil
                  }
                  __frame4[1] = {}
                  __frame4[1]["tag"] = "0"
                  __frame4[1]["arg1"] = __e3
                  __frame4[1]["arg2"] = __eta0
                  return __frame4[1]
                end
                return __frame3[1]
              end
              __frame2[3] = __frame2[2][__frame2[1]["tag"]]
              if __frame2[3] then
                __frame2[4] = __frame2[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame2[4]
            end)(__ext0)
        end)()
    end
end
idris["Parser.Support.toGenericParsingError"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil
          }
          __frame1[2]["0"] = function()
            local __frame2 = {
              nil,
              nil,
              nil,
              nil
            }
            local __e1 = __frame1[1]["arg1"]
            local __e2 = __frame1[1]["arg2"]
            __frame2[1] = __e2
            __frame2[2] = {
              nil,
              nil
            }
            __frame2[2]["0"] = function()
              local __frame3 = {
                nil,
                nil,
                nil
              }
              __frame3[1] = {}
              __frame3[1]["tag"] = "0"
              __frame3[2] = {}
              __frame3[2]["tag"] = "0"
              __frame3[3] = {}
              __frame3[3]["tag"] = "0"
              __frame3[3]["arg1"] = __e1
              __frame3[3]["arg2"] = __frame3[1]
              __frame3[3]["arg3"] = __frame3[2]
              return __frame3[3]
            end
            __frame2[2]["1"] = function()
              local __frame3 = {
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil
              }
              local __e5 = __frame2[1]["arg1"]
              local __e6 = __frame2[1]["arg2"]
              __frame3[1] = __e5
              __frame3[2] = {
                nil
              }
              __frame3[2]["0"] = function()
                local __e3 = __frame3[1]["arg3"]
                return __e3
              end
              __frame3[3] = __frame3[2][__frame3[1]["tag"]]
              if __frame3[3] then
                __frame3[4] = __frame3[3]()
              else
                idris["error"]("Impossible else branch")
              end
              __frame3[5] = __e5
              __frame3[6] = {
                nil
              }
              __frame3[6]["0"] = function()
                local __e4 = __frame3[5]["arg4"]
                return __e4
              end
              __frame3[7] = __frame3[6][__frame3[5]["tag"]]
              if __frame3[7] then
                __frame3[8] = __frame3[7]()
              else
                idris["error"]("Impossible else branch")
              end
              __frame3[9] = {}
              __frame3[9]["tag"] = "0"
              __frame3[9]["arg1"] = __frame3[4]
              __frame3[9]["arg2"] = __frame3[8]
              __frame3[10] = {}
              __frame3[10]["tag"] = "1"
              __frame3[10]["arg1"] = __frame3[9]
              __frame3[11] = {}
              __frame3[11]["tag"] = "1"
              __frame3[11]["arg1"] = __e5
              __frame3[11]["arg2"] = __e6
              __frame3[12] = {}
              __frame3[12]["tag"] = "0"
              __frame3[12]["arg1"] = __e1
              __frame3[12]["arg2"] = __frame3[10]
              __frame3[12]["arg3"] = idris["Prelude.Types.map_Functor__List"](nil)(nil)(function(__eta0)
                local __frame4 = {
                  nil,
                  nil,
                  nil,
                  nil
                }
                __frame4[1] = __eta0
                __frame4[2] = {
                  nil
                }
                __frame4[2]["0"] = function()
                  local __e10 = __frame4[1]["arg1"]
                  return __e10
                end
                __frame4[3] = __frame4[2][__frame4[1]["tag"]]
                if __frame4[3] then
                  __frame4[4] = __frame4[3]()
                else
                  idris["error"]("Impossible else branch")
                end
                return __frame4[4]
              end)(__frame3[11])
              return __frame3[12]
            end
            __frame2[3] = __frame2[2][__frame2[1]["tag"]]
            if __frame2[3] then
              __frame2[4] = __frame2[3]()
            else
              idris["error"]("Impossible else branch")
            end
            return __frame2[4]
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Prelude.Types.takeUntil"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg2
              __frame1[2] = {
                nil
              }
              __frame1[2]["0"] = function()
                local __e1 = __frame1[1]["arg1"]
                local __e2 = __frame1[1]["arg2"]
                return idris["Prelude.Types.case[4755]takeUntil"](nil)(__e1)(__e2)(__arg1)(__arg1(__e1))
              end
              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["Data.List.take"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg1
              __frame1[2] = {
                nil
              }
              __frame1[2]["0"] = function()
                local __frame2 = {
                  nil
                }
                __frame2[1] = {}
                __frame2[1]["tag"] = "0"
                return __frame2[1]
              end
              __frame1[8] = __frame1[2][bigint.tostring(__frame1[1])]
              if __frame1[8] then
                __frame1[9] = __frame1[8]()
              else
                local __e0 = __arg1 - bigint:new("1")
                __frame1[3] = __arg2
                __frame1[4] = {
                  nil
                }
                __frame1[4]["1"] = function()
                  local __frame2 = {
                    nil
                  }
                  local __e2 = __frame1[3]["arg1"]
                  local __e3 = __frame1[3]["arg2"]
                  __frame2[1] = {}
                  __frame2[1]["tag"] = "1"
                  __frame2[1]["arg1"] = __e2
                  __frame2[1]["arg2"] = idris["Data.List.take"](nil)(__e0)(__e3)
                  return __frame2[1]
                end
                __frame1[6] = __frame1[4][__frame1[3]["tag"]]
                if __frame1[6] then
                  __frame1[7] = __frame1[6]()
                else
                  __frame1[5] = {}
                  __frame1[5]["tag"] = "0"
                  __frame1[7] = __frame1[5]
                end
                __frame1[9] = __frame1[7]
              end
              return __frame1[9]
            end)()
        end
    end
end
idris["Idris.IDEMode.Parser.symbols"] = (function()
  local __frame1 = {
    nil,
    nil,
    nil,
    nil
  }
  __frame1[1] = {}
  __frame1[1]["tag"] = "0"
  __frame1[2] = {}
  __frame1[2]["tag"] = "1"
  __frame1[2]["arg1"] = ")"
  __frame1[2]["arg2"] = __frame1[1]
  __frame1[3] = {}
  __frame1[3]["tag"] = "1"
  __frame1[3]["arg1"] = ":"
  __frame1[3]["arg2"] = __frame1[2]
  __frame1[4] = {}
  __frame1[4]["tag"] = "1"
  __frame1[4]["arg1"] = "("
  __frame1[4]["arg2"] = __frame1[3]
  return __frame1[4]
end)()
idris["Parser.Rule.Source.strLit"] = (function()
  local __frame1 = {
    nil
  }
  __frame1[1] = {}
  __frame1[1]["tag"] = "1"
  __frame1[1]["arg1"] = "Expected string literal"
  __frame1[1]["arg2"] = function(x)
    local __frame2 = {
      nil,
      nil,
      nil,
      nil
    }
    __frame2[1] = x
    __frame2[2] = {
      nil
    }
    __frame2[2]["0"] = function()
      local __e1 = __frame2[1]["arg1"]
      return __e1
    end
    __frame2[3] = __frame2[2][__frame2[1]["tag"]]
    if __frame2[3] then
      __frame2[4] = __frame2[3]()
    else
      idris["error"]("Impossible else branch")
    end
    return idris["Parser.Rule.Source.case[2618]strLit"](x)(__frame2[4])
  end
  return __frame1[1]
end)()
idris["Prelude.Types.strCons"] = function(__ext0)
  return function(__ext1)
      return (function()
          return (__ext0) .. (__ext1)
        end)()
    end
end
idris["Text.Bounded.start"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil,
            nil,
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil
          }
          __frame1[2]["0"] = function()
            local __e3 = __frame1[1]["arg3"]
            return __e3
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          __frame1[5] = __arg1
          __frame1[6] = {
            nil
          }
          __frame1[6]["0"] = function()
            local __e4 = __frame1[5]["arg4"]
            return __e4
          end
          __frame1[7] = __frame1[6][__frame1[5]["tag"]]
          if __frame1[7] then
            __frame1[8] = __frame1[7]()
          else
            idris["error"]("Impossible else branch")
          end
          __frame1[9] = {}
          __frame1[9]["tag"] = "0"
          __frame1[9]["arg1"] = __frame1[4]
          __frame1[9]["arg2"] = __frame1[8]
          return __frame1[9]
        end)()
    end
end
idris["Data.List.span"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg2
              __frame1[2] = {
                nil,
                nil
              }
              __frame1[2]["0"] = function()
                local __frame2 = {
                  nil,
                  nil,
                  nil
                }
                __frame2[1] = {}
                __frame2[1]["tag"] = "0"
                __frame2[2] = {}
                __frame2[2]["tag"] = "0"
                __frame2[3] = {}
                __frame2[3]["tag"] = "0"
                __frame2[3]["arg1"] = __frame2[1]
                __frame2[3]["arg2"] = __frame2[2]
                return __frame2[3]
              end
              __frame1[2]["1"] = function()
                local __e2 = __frame1[1]["arg1"]
                local __e3 = __frame1[1]["arg2"]
                return idris["Data.List.case[2083]span"](nil)(__e2)(__e3)(__arg1)(__arg1(__e2))
              end
              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["Plugin.Parameters.sourceDir"] = function(__arg0)
  return (function()
      return __arg0
    end)()
end
idris["Plugin.Parameters..sourceDir"] = function(__ext0)
  return (function()
      return idris["Plugin.Parameters.sourceDir"](__ext0)
    end)()
end
idris["Builtin.snd"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg2
              __frame1[2] = {
                nil
              }
              __frame1[2]["0"] = function()
                local __e3 = __frame1[1]["arg2"]
                return __e3
              end
              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["Text.Parser.case[379]match"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return (function()
                      local __frame1 = {
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame1[1] = __arg4
                      __frame1[2] = {
                        nil,
                        nil
                      }
                      __frame1[2][0] = function()
                        local __frame2 = {
                          nil,
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        __frame2[1] = idris["Builtin.snd"](nil)(nil)(__arg1)
                        __frame2[2] = {
                          nil
                        }
                        __frame2[2]["0"] = function()
                          local __frame3 = {
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          local __e2 = __frame2[1]["arg2"]
                          __frame3[1] = __arg3
                          __frame3[2] = {
                            nil
                          }
                          __frame3[2]["0"] = function()
                            local __e8 = __frame3[1]["arg1"]
                            return __e8
                          end
                          __frame3[3] = __frame3[2][__frame3[1]["tag"]]
                          if __frame3[3] then
                            __frame3[4] = __frame3[3]()
                          else
                            idris["error"]("Impossible else branch")
                          end
                          __frame3[5] = __frame3[4]
                          __frame3[6] = {
                            nil
                          }
                          __frame3[6]["0"] = function()
                            local __e3 = __frame3[5]["arg2"]
                            return __e3
                          end
                          __frame3[7] = __frame3[6][__frame3[5]["tag"]]
                          if __frame3[7] then
                            __frame3[8] = __frame3[7]()
                          else
                            idris["error"]("Impossible else branch")
                          end
                          return __e2(__arg2)(__frame3[8])
                        end
                        __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                        if __frame2[3] then
                          __frame2[4] = __frame2[3]()
                        else
                          idris["error"]("Impossible else branch")
                        end
                        __frame2[5] = {}
                        __frame2[5]["tag"] = "1"
                        __frame2[5]["arg1"] = __frame2[4]
                        return __frame2[5]
                      end
                      __frame1[2][1] = function()
                        local __frame2 = {
                          nil
                        }
                        __frame2[1] = {}
                        __frame2[1]["tag"] = "0"
                        return __frame2[1]
                      end
                      __frame1[3] = __frame1[2][__frame1[1]]
                      if __frame1[3] then
                        __frame1[4] = __frame1[3]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame1[4]
                    end)()
                end
            end
        end
    end
end
idris["Data.List1.singleton"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil
          }
          __frame1[1] = {}
          __frame1[1]["tag"] = "0"
          __frame1[2] = {}
          __frame1[2]["tag"] = "0"
          __frame1[2]["arg1"] = __arg1
          __frame1[2]["arg2"] = __frame1[1]
          return __frame1[2]
        end)()
    end
end
idris["Data.List.reverseOnto"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg2
              __frame1[2] = {
                nil,
                nil
              }
              __frame1[2]["0"] = function()
                return __arg1
              end
              __frame1[2]["1"] = function()
                local __frame2 = {
                  nil
                }
                local __e2 = __frame1[1]["arg1"]
                local __e3 = __frame1[1]["arg2"]
                __frame2[1] = {}
                __frame2[1]["tag"] = "1"
                __frame2[1]["arg1"] = __e2
                __frame2[1]["arg2"] = __arg1
                return idris["Data.List.reverseOnto"](nil)(__frame2[1])(__e3)
              end
              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["Prelude.Types.reverse"] = function(__ext0)
  return (function()
      return (__ext0):reverse()
    end)()
end
idris["Data.List.reverse"] = function(__arg0)
  return function(__ext0)
      return (function()
          local __frame1 = {
            nil
          }
          __frame1[1] = {}
          __frame1[1]["tag"] = "0"
          return idris["Data.List.reverseOnto"](nil)(__frame1[1])(__ext0)
        end)()
    end
end
idris["Plugin.responseBufferName"] = (function()
  return "idris-response"
end)()
idris["Data.List.replicate"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg1
              __frame1[2] = {
                nil
              }
              __frame1[2]["0"] = function()
                local __frame2 = {
                  nil
                }
                __frame2[1] = {}
                __frame2[1]["tag"] = "0"
                return __frame2[1]
              end
              __frame1[4] = __frame1[2][bigint.tostring(__frame1[1])]
              if __frame1[4] then
                __frame1[5] = __frame1[4]()
              else
                local __e0 = __arg1 - bigint:new("1")
                __frame1[3] = {}
                __frame1[3]["tag"] = "1"
                __frame1[3]["arg1"] = __arg2
                __frame1[3]["arg2"] = idris["Data.List.replicate"](nil)(__e0)(__arg2)
                __frame1[5] = __frame1[3]
              end
              return __frame1[5]
            end)()
        end
    end
end
idris["Text.Bounded.removeIrrelevance"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil
          }
          __frame1[2]["0"] = function()
            local __frame2 = {
              nil
            }
            local __e1 = __frame1[1]["arg1"]
            local __e3 = __frame1[1]["arg3"]
            local __e4 = __frame1[1]["arg4"]
            local __e5 = __frame1[1]["arg5"]
            local __e6 = __frame1[1]["arg6"]
            __frame2[1] = {}
            __frame2[1]["tag"] = "0"
            __frame2[1]["arg1"] = __e1
            __frame2[1]["arg2"] = 0
            __frame2[1]["arg3"] = __e3
            __frame2[1]["arg4"] = __e4
            __frame2[1]["arg5"] = __e5
            __frame2[1]["arg6"] = __e6
            return __frame2[1]
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Text.Parser.Core.case[2275]doParse"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return (function()
                                      local __frame1 = {
                                        nil,
                                        nil,
                                        nil,
                                        nil
                                      }
                                      __frame1[1] = __arg8
                                      __frame1[2] = {
                                        nil,
                                        nil
                                      }
                                      __frame1[2][0] = function()
                                        local __frame2 = {
                                          nil,
                                          nil
                                        }
                                        __frame2[1] = {}
                                        __frame2[1]["tag"] = "1"
                                        __frame2[1]["arg1"] = __arg3
                                        __frame2[1]["arg2"] = __arg4
                                        __frame2[2] = {}
                                        __frame2[2]["tag"] = "1"
                                        __frame2[2]["arg1"] = __arg5
                                        __frame2[2]["arg2"] = idris["Text.Bounded.removeIrrelevance"](nil)(__arg3)
                                        __frame2[2]["arg3"] = __frame2[1]
                                        return __frame2[2]
                                      end
                                      __frame1[2][1] = function()
                                        local __frame2 = {
                                          nil,
                                          nil
                                        }
                                        __frame2[1] = {}
                                        __frame2[1]["tag"] = "1"
                                        __frame2[1]["arg1"] = __arg3
                                        __frame2[1]["arg2"] = __arg4
                                        __frame2[2] = {}
                                        __frame2[2]["tag"] = "0"
                                        __frame2[2]["arg1"] = __arg5
                                        __frame2[2]["arg2"] = 1
                                        __frame2[2]["arg3"] = __arg2
                                        __frame2[2]["arg4"] = __frame2[1]
                                        return __frame2[2]
                                      end
                                      __frame1[3] = __frame1[2][__frame1[1]]
                                      if __frame1[3] then
                                        __frame1[4] = __frame1[3]()
                                      else
                                        idris["error"]("Impossible else branch")
                                      end
                                      return __frame1[4]
                                    end)()
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Text.Lexer.Core.reject"] = function(__arg0)
  return function(__ext0)
      return (function()
          local __frame1 = {
            nil
          }
          __frame1[1] = {}
          __frame1[1]["tag"] = "2"
          __frame1[1]["arg1"] = 1
          __frame1[1]["arg2"] = __ext0
          return __frame1[1]
        end)()
    end
end
idris["Idris.IDEMode.Commands.putIDECommand"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[2]["0"] = function()
        local __frame2 = {
          nil,
          nil,
          nil,
          nil,
          nil,
          nil
        }
        local __e0 = __frame1[1]["arg1"]
        __frame2[1] = {}
        __frame2[1]["tag"] = "4"
        __frame2[1]["arg1"] = "interpret"
        __frame2[2] = {}
        __frame2[2]["tag"] = "1"
        __frame2[2]["arg1"] = __e0
        __frame2[3] = {}
        __frame2[3]["tag"] = "0"
        __frame2[4] = {}
        __frame2[4]["tag"] = "1"
        __frame2[4]["arg1"] = __frame2[2]
        __frame2[4]["arg2"] = __frame2[3]
        __frame2[5] = {}
        __frame2[5]["tag"] = "1"
        __frame2[5]["arg1"] = __frame2[1]
        __frame2[5]["arg2"] = __frame2[4]
        __frame2[6] = {}
        __frame2[6]["tag"] = "0"
        __frame2[6]["arg1"] = __frame2[5]
        return __frame2[6]
      end
      __frame1[2]["1"] = function()
        local __frame2 = {
          nil,
          nil,
          nil,
          nil
        }
        local __e1 = __frame1[1]["arg1"]
        local __e2 = __frame1[1]["arg2"]
        __frame2[1] = __e2
        __frame2[2] = {
          nil,
          nil
        }
        __frame2[2]["0"] = function()
          local __frame3 = {
            nil,
            nil,
            nil,
            nil,
            nil,
            nil
          }
          __frame3[1] = {}
          __frame3[1]["tag"] = "4"
          __frame3[1]["arg1"] = "load-file"
          __frame3[2] = {}
          __frame3[2]["tag"] = "1"
          __frame3[2]["arg1"] = __e1
          __frame3[3] = {}
          __frame3[3]["tag"] = "0"
          __frame3[4] = {}
          __frame3[4]["tag"] = "1"
          __frame3[4]["arg1"] = __frame3[2]
          __frame3[4]["arg2"] = __frame3[3]
          __frame3[5] = {}
          __frame3[5]["tag"] = "1"
          __frame3[5]["arg1"] = __frame3[1]
          __frame3[5]["arg2"] = __frame3[4]
          __frame3[6] = {}
          __frame3[6]["tag"] = "0"
          __frame3[6]["arg1"] = __frame3[5]
          return __frame3[6]
        end
        __frame2[2]["1"] = function()
          local __frame3 = {
            nil,
            nil,
            nil,
            nil,
            nil,
            nil,
            nil,
            nil
          }
          local __e42 = __frame2[1]["arg1"]
          __frame3[1] = {}
          __frame3[1]["tag"] = "4"
          __frame3[1]["arg1"] = "load-file"
          __frame3[2] = {}
          __frame3[2]["tag"] = "1"
          __frame3[2]["arg1"] = __e1
          __frame3[3] = {}
          __frame3[3]["tag"] = "3"
          __frame3[3]["arg1"] = __e42
          __frame3[4] = {}
          __frame3[4]["tag"] = "0"
          __frame3[5] = {}
          __frame3[5]["tag"] = "1"
          __frame3[5]["arg1"] = __frame3[3]
          __frame3[5]["arg2"] = __frame3[4]
          __frame3[6] = {}
          __frame3[6]["tag"] = "1"
          __frame3[6]["arg1"] = __frame3[2]
          __frame3[6]["arg2"] = __frame3[5]
          __frame3[7] = {}
          __frame3[7]["tag"] = "1"
          __frame3[7]["arg1"] = __frame3[1]
          __frame3[7]["arg2"] = __frame3[6]
          __frame3[8] = {}
          __frame3[8]["tag"] = "0"
          __frame3[8]["arg1"] = __frame3[7]
          return __frame3[8]
        end
        __frame2[3] = __frame2[2][__frame2[1]["tag"]]
        if __frame2[3] then
          __frame2[4] = __frame2[3]()
        else
          idris["error"]("Impossible else branch")
        end
        return __frame2[4]
      end
      __frame1[2]["2"] = function()
        local __frame2 = {
          nil,
          nil,
          nil,
          nil
        }
        local __e3 = __frame1[1]["arg1"]
        local __e4 = __frame1[1]["arg2"]
        __frame2[1] = __e4
        __frame2[2] = {
          nil,
          nil
        }
        __frame2[2]["0"] = function()
          local __frame3 = {
            nil,
            nil,
            nil,
            nil,
            nil,
            nil
          }
          __frame3[1] = {}
          __frame3[1]["tag"] = "4"
          __frame3[1]["arg1"] = "type-of"
          __frame3[2] = {}
          __frame3[2]["tag"] = "1"
          __frame3[2]["arg1"] = __e3
          __frame3[3] = {}
          __frame3[3]["tag"] = "0"
          __frame3[4] = {}
          __frame3[4]["tag"] = "1"
          __frame3[4]["arg1"] = __frame3[2]
          __frame3[4]["arg2"] = __frame3[3]
          __frame3[5] = {}
          __frame3[5]["tag"] = "1"
          __frame3[5]["arg1"] = __frame3[1]
          __frame3[5]["arg2"] = __frame3[4]
          __frame3[6] = {}
          __frame3[6]["tag"] = "0"
          __frame3[6]["arg1"] = __frame3[5]
          return __frame3[6]
        end
        __frame2[2]["1"] = function()
          local __frame3 = {
            nil,
            nil,
            nil,
            nil
          }
          local __e45 = __frame2[1]["arg1"]
          __frame3[1] = __e45
          __frame3[2] = {
            nil
          }
          __frame3[2]["0"] = function()
            local __frame4 = {
              nil,
              nil,
              nil,
              nil,
              nil,
              nil,
              nil,
              nil,
              nil,
              nil
            }
            local __e48 = __frame3[1]["arg1"]
            local __e49 = __frame3[1]["arg2"]
            __frame4[1] = {}
            __frame4[1]["tag"] = "4"
            __frame4[1]["arg1"] = "type-of"
            __frame4[2] = {}
            __frame4[2]["tag"] = "1"
            __frame4[2]["arg1"] = __e3
            __frame4[3] = {}
            __frame4[3]["tag"] = "3"
            __frame4[3]["arg1"] = __e48
            __frame4[4] = {}
            __frame4[4]["tag"] = "3"
            __frame4[4]["arg1"] = __e49
            __frame4[5] = {}
            __frame4[5]["tag"] = "0"
            __frame4[6] = {}
            __frame4[6]["tag"] = "1"
            __frame4[6]["arg1"] = __frame4[4]
            __frame4[6]["arg2"] = __frame4[5]
            __frame4[7] = {}
            __frame4[7]["tag"] = "1"
            __frame4[7]["arg1"] = __frame4[3]
            __frame4[7]["arg2"] = __frame4[6]
            __frame4[8] = {}
            __frame4[8]["tag"] = "1"
            __frame4[8]["arg1"] = __frame4[2]
            __frame4[8]["arg2"] = __frame4[7]
            __frame4[9] = {}
            __frame4[9]["tag"] = "1"
            __frame4[9]["arg1"] = __frame4[1]
            __frame4[9]["arg2"] = __frame4[8]
            __frame4[10] = {}
            __frame4[10]["tag"] = "0"
            __frame4[10]["arg1"] = __frame4[9]
            return __frame4[10]
          end
          __frame3[3] = __frame3[2][__frame3[1]["tag"]]
          if __frame3[3] then
            __frame3[4] = __frame3[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame3[4]
        end
        __frame2[3] = __frame2[2][__frame2[1]["tag"]]
        if __frame2[3] then
          __frame2[4] = __frame2[3]()
        else
          idris["error"]("Impossible else branch")
        end
        return __frame2[4]
      end
      __frame1[2]["3"] = function()
        local __frame2 = {
          nil,
          nil,
          nil,
          nil
        }
        local __e5 = __frame1[1]["arg1"]
        local __e6 = __frame1[1]["arg2"]
        __frame2[1] = __e6
        __frame2[2] = {
          nil,
          nil
        }
        __frame2[2]["0"] = function()
          local __frame3 = {
            nil,
            nil,
            nil,
            nil,
            nil,
            nil
          }
          __frame3[1] = {}
          __frame3[1]["tag"] = "4"
          __frame3[1]["arg1"] = "name-at"
          __frame3[2] = {}
          __frame3[2]["tag"] = "1"
          __frame3[2]["arg1"] = __e5
          __frame3[3] = {}
          __frame3[3]["tag"] = "0"
          __frame3[4] = {}
          __frame3[4]["tag"] = "1"
          __frame3[4]["arg1"] = __frame3[2]
          __frame3[4]["arg2"] = __frame3[3]
          __frame3[5] = {}
          __frame3[5]["tag"] = "1"
          __frame3[5]["arg1"] = __frame3[1]
          __frame3[5]["arg2"] = __frame3[4]
          __frame3[6] = {}
          __frame3[6]["tag"] = "0"
          __frame3[6]["arg1"] = __frame3[5]
          return __frame3[6]
        end
        __frame2[2]["1"] = function()
          local __frame3 = {
            nil,
            nil,
            nil,
            nil
          }
          local __e52 = __frame2[1]["arg1"]
          __frame3[1] = __e52
          __frame3[2] = {
            nil
          }
          __frame3[2]["0"] = function()
            local __frame4 = {
              nil,
              nil,
              nil,
              nil,
              nil,
              nil,
              nil,
              nil,
              nil,
              nil
            }
            local __e55 = __frame3[1]["arg1"]
            local __e56 = __frame3[1]["arg2"]
            __frame4[1] = {}
            __frame4[1]["tag"] = "4"
            __frame4[1]["arg1"] = "name-at"
            __frame4[2] = {}
            __frame4[2]["tag"] = "1"
            __frame4[2]["arg1"] = __e5
            __frame4[3] = {}
            __frame4[3]["tag"] = "3"
            __frame4[3]["arg1"] = __e55
            __frame4[4] = {}
            __frame4[4]["tag"] = "3"
            __frame4[4]["arg1"] = __e56
            __frame4[5] = {}
            __frame4[5]["tag"] = "0"
            __frame4[6] = {}
            __frame4[6]["tag"] = "1"
            __frame4[6]["arg1"] = __frame4[4]
            __frame4[6]["arg2"] = __frame4[5]
            __frame4[7] = {}
            __frame4[7]["tag"] = "1"
            __frame4[7]["arg1"] = __frame4[3]
            __frame4[7]["arg2"] = __frame4[6]
            __frame4[8] = {}
            __frame4[8]["tag"] = "1"
            __frame4[8]["arg1"] = __frame4[2]
            __frame4[8]["arg2"] = __frame4[7]
            __frame4[9] = {}
            __frame4[9]["tag"] = "1"
            __frame4[9]["arg1"] = __frame4[1]
            __frame4[9]["arg2"] = __frame4[8]
            __frame4[10] = {}
            __frame4[10]["tag"] = "0"
            __frame4[10]["arg1"] = __frame4[9]
            return __frame4[10]
          end
          __frame3[3] = __frame3[2][__frame3[1]["tag"]]
          if __frame3[3] then
            __frame3[4] = __frame3[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame3[4]
        end
        __frame2[3] = __frame2[2][__frame2[1]["tag"]]
        if __frame2[3] then
          __frame2[4] = __frame2[3]()
        else
          idris["error"]("Impossible else branch")
        end
        return __frame2[4]
      end
      __frame1[2]["4"] = function()
        local __frame2 = {
          nil,
          nil,
          nil,
          nil,
          nil,
          nil,
          nil,
          nil,
          nil,
          nil
        }
        local __e7 = __frame1[1]["arg1"]
        local __e8 = __frame1[1]["arg2"]
        local __e9 = __frame1[1]["arg3"]
        __frame2[1] = {}
        __frame2[1]["tag"] = "4"
        __frame2[1]["arg1"] = "case-split"
        __frame2[2] = {}
        __frame2[2]["tag"] = "3"
        __frame2[2]["arg1"] = __e7
        __frame2[3] = {}
        __frame2[3]["tag"] = "3"
        __frame2[3]["arg1"] = __e8
        __frame2[4] = {}
        __frame2[4]["tag"] = "1"
        __frame2[4]["arg1"] = __e9
        __frame2[5] = {}
        __frame2[5]["tag"] = "0"
        __frame2[6] = {}
        __frame2[6]["tag"] = "1"
        __frame2[6]["arg1"] = __frame2[4]
        __frame2[6]["arg2"] = __frame2[5]
        __frame2[7] = {}
        __frame2[7]["tag"] = "1"
        __frame2[7]["arg1"] = __frame2[3]
        __frame2[7]["arg2"] = __frame2[6]
        __frame2[8] = {}
        __frame2[8]["tag"] = "1"
        __frame2[8]["arg1"] = __frame2[2]
        __frame2[8]["arg2"] = __frame2[7]
        __frame2[9] = {}
        __frame2[9]["tag"] = "1"
        __frame2[9]["arg1"] = __frame2[1]
        __frame2[9]["arg2"] = __frame2[8]
        __frame2[10] = {}
        __frame2[10]["tag"] = "0"
        __frame2[10]["arg1"] = __frame2[9]
        return __frame2[10]
      end
      __frame1[2]["5"] = function()
        local __frame2 = {
          nil,
          nil,
          nil,
          nil,
          nil,
          nil,
          nil,
          nil
        }
        local __e10 = __frame1[1]["arg1"]
        local __e11 = __frame1[1]["arg2"]
        __frame2[1] = {}
        __frame2[1]["tag"] = "4"
        __frame2[1]["arg1"] = "add-clause"
        __frame2[2] = {}
        __frame2[2]["tag"] = "3"
        __frame2[2]["arg1"] = __e10
        __frame2[3] = {}
        __frame2[3]["tag"] = "1"
        __frame2[3]["arg1"] = __e11
        __frame2[4] = {}
        __frame2[4]["tag"] = "0"
        __frame2[5] = {}
        __frame2[5]["tag"] = "1"
        __frame2[5]["arg1"] = __frame2[3]
        __frame2[5]["arg2"] = __frame2[4]
        __frame2[6] = {}
        __frame2[6]["tag"] = "1"
        __frame2[6]["arg1"] = __frame2[2]
        __frame2[6]["arg2"] = __frame2[5]
        __frame2[7] = {}
        __frame2[7]["tag"] = "1"
        __frame2[7]["arg1"] = __frame2[1]
        __frame2[7]["arg2"] = __frame2[6]
        __frame2[8] = {}
        __frame2[8]["tag"] = "0"
        __frame2[8]["arg1"] = __frame2[7]
        return __frame2[8]
      end
      __frame1[2]["6"] = function()
        local __frame2 = {
          nil,
          nil,
          nil,
          nil,
          nil,
          nil,
          nil,
          nil
        }
        local __e12 = __frame1[1]["arg1"]
        local __e13 = __frame1[1]["arg2"]
        __frame2[1] = {}
        __frame2[1]["tag"] = "4"
        __frame2[1]["arg1"] = "add-missing"
        __frame2[2] = {}
        __frame2[2]["tag"] = "3"
        __frame2[2]["arg1"] = __e12
        __frame2[3] = {}
        __frame2[3]["tag"] = "1"
        __frame2[3]["arg1"] = __e13
        __frame2[4] = {}
        __frame2[4]["tag"] = "0"
        __frame2[5] = {}
        __frame2[5]["tag"] = "1"
        __frame2[5]["arg1"] = __frame2[3]
        __frame2[5]["arg2"] = __frame2[4]
        __frame2[6] = {}
        __frame2[6]["tag"] = "1"
        __frame2[6]["arg1"] = __frame2[2]
        __frame2[6]["arg2"] = __frame2[5]
        __frame2[7] = {}
        __frame2[7]["tag"] = "1"
        __frame2[7]["arg1"] = __frame2[1]
        __frame2[7]["arg2"] = __frame2[6]
        __frame2[8] = {}
        __frame2[8]["tag"] = "0"
        __frame2[8]["arg1"] = __frame2[7]
        return __frame2[8]
      end
      __frame1[2]["7"] = function()
        local __frame2 = {
          nil,
          nil,
          nil,
          nil,
          nil,
          nil,
          nil,
          nil,
          nil,
          nil,
          nil
        }
        local __e14 = __frame1[1]["arg1"]
        local __e15 = __frame1[1]["arg2"]
        local __e16 = __frame1[1]["arg3"]
        local __e17 = __frame1[1]["arg4"]
        __frame2[1] = {}
        __frame2[1]["tag"] = "4"
        __frame2[1]["arg1"] = "proof-search"
        __frame2[2] = {}
        __frame2[2]["tag"] = "3"
        __frame2[2]["arg1"] = __e14
        __frame2[3] = {}
        __frame2[3]["tag"] = "1"
        __frame2[3]["arg1"] = __e15
        __frame2[4] = {}
        __frame2[4]["tag"] = "0"
        __frame2[4]["arg1"] = idris["Prelude.Types.map_Functor__List"](nil)(nil)(function(__eta0)
          local __frame3 = {
            nil
          }
          __frame3[1] = {}
          __frame3[1]["tag"] = "1"
          __frame3[1]["arg1"] = __eta0
          return __frame3[1]
        end)(__e16)
        __frame2[5] = {}
        __frame2[5]["tag"] = "0"
        __frame2[6] = {}
        __frame2[6]["tag"] = "1"
        __frame2[6]["arg1"] = idris["Idris.IDEMode.Commands.3280:3034:getMode"](__e17)(__e16)(__e15)(__e14)(__e17)
        __frame2[6]["arg2"] = __frame2[5]
        __frame2[7] = {}
        __frame2[7]["tag"] = "1"
        __frame2[7]["arg1"] = __frame2[4]
        __frame2[7]["arg2"] = __frame2[6]
        __frame2[8] = {}
        __frame2[8]["tag"] = "1"
        __frame2[8]["arg1"] = __frame2[3]
        __frame2[8]["arg2"] = __frame2[7]
        __frame2[9] = {}
        __frame2[9]["tag"] = "1"
        __frame2[9]["arg1"] = __frame2[2]
        __frame2[9]["arg2"] = __frame2[8]
        __frame2[10] = {}
        __frame2[10]["tag"] = "1"
        __frame2[10]["arg1"] = __frame2[1]
        __frame2[10]["arg2"] = __frame2[9]
        __frame2[11] = {}
        __frame2[11]["tag"] = "0"
        __frame2[11]["arg1"] = __frame2[10]
        return __frame2[11]
      end
      __frame1[2]["8"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "4"
        __frame2[1]["arg1"] = "proof-search--next"
        return __frame2[1]
      end
      __frame1[2]["9"] = function()
        local __frame2 = {
          nil,
          nil,
          nil,
          nil,
          nil,
          nil,
          nil,
          nil
        }
        local __e18 = __frame1[1]["arg1"]
        local __e19 = __frame1[1]["arg2"]
        __frame2[1] = {}
        __frame2[1]["tag"] = "4"
        __frame2[1]["arg1"] = "generate-def"
        __frame2[2] = {}
        __frame2[2]["tag"] = "3"
        __frame2[2]["arg1"] = __e18
        __frame2[3] = {}
        __frame2[3]["tag"] = "1"
        __frame2[3]["arg1"] = __e19
        __frame2[4] = {}
        __frame2[4]["tag"] = "0"
        __frame2[5] = {}
        __frame2[5]["tag"] = "1"
        __frame2[5]["arg1"] = __frame2[3]
        __frame2[5]["arg2"] = __frame2[4]
        __frame2[6] = {}
        __frame2[6]["tag"] = "1"
        __frame2[6]["arg1"] = __frame2[2]
        __frame2[6]["arg2"] = __frame2[5]
        __frame2[7] = {}
        __frame2[7]["tag"] = "1"
        __frame2[7]["arg1"] = __frame2[1]
        __frame2[7]["arg2"] = __frame2[6]
        __frame2[8] = {}
        __frame2[8]["tag"] = "0"
        __frame2[8]["arg1"] = __frame2[7]
        return __frame2[8]
      end
      __frame1[2]["10"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "4"
        __frame2[1]["arg1"] = "generate-def-next"
        return __frame2[1]
      end
      __frame1[2]["11"] = function()
        local __frame2 = {
          nil,
          nil,
          nil,
          nil,
          nil,
          nil,
          nil,
          nil
        }
        local __e20 = __frame1[1]["arg1"]
        local __e21 = __frame1[1]["arg2"]
        __frame2[1] = {}
        __frame2[1]["tag"] = "4"
        __frame2[1]["arg1"] = "make-lemma"
        __frame2[2] = {}
        __frame2[2]["tag"] = "3"
        __frame2[2]["arg1"] = __e20
        __frame2[3] = {}
        __frame2[3]["tag"] = "1"
        __frame2[3]["arg1"] = __e21
        __frame2[4] = {}
        __frame2[4]["tag"] = "0"
        __frame2[5] = {}
        __frame2[5]["tag"] = "1"
        __frame2[5]["arg1"] = __frame2[3]
        __frame2[5]["arg2"] = __frame2[4]
        __frame2[6] = {}
        __frame2[6]["tag"] = "1"
        __frame2[6]["arg1"] = __frame2[2]
        __frame2[6]["arg2"] = __frame2[5]
        __frame2[7] = {}
        __frame2[7]["tag"] = "1"
        __frame2[7]["arg1"] = __frame2[1]
        __frame2[7]["arg2"] = __frame2[6]
        __frame2[8] = {}
        __frame2[8]["tag"] = "0"
        __frame2[8]["arg1"] = __frame2[7]
        return __frame2[8]
      end
      __frame1[2]["12"] = function()
        local __frame2 = {
          nil,
          nil,
          nil,
          nil,
          nil,
          nil,
          nil,
          nil
        }
        local __e22 = __frame1[1]["arg1"]
        local __e23 = __frame1[1]["arg2"]
        __frame2[1] = {}
        __frame2[1]["tag"] = "4"
        __frame2[1]["arg1"] = "make-case"
        __frame2[2] = {}
        __frame2[2]["tag"] = "3"
        __frame2[2]["arg1"] = __e22
        __frame2[3] = {}
        __frame2[3]["tag"] = "1"
        __frame2[3]["arg1"] = __e23
        __frame2[4] = {}
        __frame2[4]["tag"] = "0"
        __frame2[5] = {}
        __frame2[5]["tag"] = "1"
        __frame2[5]["arg1"] = __frame2[3]
        __frame2[5]["arg2"] = __frame2[4]
        __frame2[6] = {}
        __frame2[6]["tag"] = "1"
        __frame2[6]["arg1"] = __frame2[2]
        __frame2[6]["arg2"] = __frame2[5]
        __frame2[7] = {}
        __frame2[7]["tag"] = "1"
        __frame2[7]["arg1"] = __frame2[1]
        __frame2[7]["arg2"] = __frame2[6]
        __frame2[8] = {}
        __frame2[8]["tag"] = "0"
        __frame2[8]["arg1"] = __frame2[7]
        return __frame2[8]
      end
      __frame1[2]["13"] = function()
        local __frame2 = {
          nil,
          nil,
          nil,
          nil,
          nil,
          nil,
          nil,
          nil
        }
        local __e24 = __frame1[1]["arg1"]
        local __e25 = __frame1[1]["arg2"]
        __frame2[1] = {}
        __frame2[1]["tag"] = "4"
        __frame2[1]["arg1"] = "make-with"
        __frame2[2] = {}
        __frame2[2]["tag"] = "3"
        __frame2[2]["arg1"] = __e24
        __frame2[3] = {}
        __frame2[3]["tag"] = "1"
        __frame2[3]["arg1"] = __e25
        __frame2[4] = {}
        __frame2[4]["tag"] = "0"
        __frame2[5] = {}
        __frame2[5]["tag"] = "1"
        __frame2[5]["arg1"] = __frame2[3]
        __frame2[5]["arg2"] = __frame2[4]
        __frame2[6] = {}
        __frame2[6]["tag"] = "1"
        __frame2[6]["arg1"] = __frame2[2]
        __frame2[6]["arg2"] = __frame2[5]
        __frame2[7] = {}
        __frame2[7]["tag"] = "1"
        __frame2[7]["arg1"] = __frame2[1]
        __frame2[7]["arg2"] = __frame2[6]
        __frame2[8] = {}
        __frame2[8]["tag"] = "0"
        __frame2[8]["arg1"] = __frame2[7]
        return __frame2[8]
      end
      __frame1[2]["14"] = function()
        local __frame2 = {
          nil,
          nil,
          nil,
          nil,
          nil,
          nil,
          nil,
          nil,
          nil
        }
        local __e26 = __frame1[1]["arg1"]
        local __e27 = __frame1[1]["arg2"]
        __frame2[1] = __e27
        __frame2[2] = {
          nil,
          nil
        }
        __frame2[2]["0"] = function()
          local __frame3 = {
            nil
          }
          __frame3[1] = {}
          __frame3[1]["tag"] = "0"
          return __frame3[1]
        end
        __frame2[2]["1"] = function()
          local __frame3 = {
            nil,
            nil,
            nil,
            nil
          }
          local __e2 = __frame2[1]["arg1"]
          __frame3[1] = __e2
          __frame3[2] = {
            nil,
            nil
          }
          __frame3[2]["0"] = function()
            local __frame4 = {
              nil,
              nil,
              nil
            }
            __frame4[1] = {}
            __frame4[1]["tag"] = "4"
            __frame4[1]["arg1"] = "overview"
            __frame4[2] = {}
            __frame4[2]["tag"] = "0"
            __frame4[3] = {}
            __frame4[3]["tag"] = "1"
            __frame4[3]["arg1"] = __frame4[1]
            __frame4[3]["arg2"] = __frame4[2]
            return __frame4[3]
          end
          __frame3[2]["1"] = function()
            local __frame4 = {
              nil,
              nil,
              nil
            }
            __frame4[1] = {}
            __frame4[1]["tag"] = "4"
            __frame4[1]["arg1"] = "full"
            __frame4[2] = {}
            __frame4[2]["tag"] = "0"
            __frame4[3] = {}
            __frame4[3]["tag"] = "1"
            __frame4[3]["arg1"] = __frame4[1]
            __frame4[3]["arg2"] = __frame4[2]
            return __frame4[3]
          end
          __frame3[3] = __frame3[2][__frame3[1]["tag"]]
          if __frame3[3] then
            __frame3[4] = __frame3[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame3[4]
        end
        __frame2[3] = __frame2[2][__frame2[1]["tag"]]
        if __frame2[3] then
          __frame2[4] = __frame2[3]()
        else
          idris["error"]("Impossible else branch")
        end
        local modeTail = __frame2[4]
        __frame2[5] = {}
        __frame2[5]["tag"] = "4"
        __frame2[5]["arg1"] = "docs-for"
        __frame2[6] = {}
        __frame2[6]["tag"] = "1"
        __frame2[6]["arg1"] = __e26
        __frame2[7] = {}
        __frame2[7]["tag"] = "1"
        __frame2[7]["arg1"] = __frame2[6]
        __frame2[7]["arg2"] = modeTail
        __frame2[8] = {}
        __frame2[8]["tag"] = "1"
        __frame2[8]["arg1"] = __frame2[5]
        __frame2[8]["arg2"] = __frame2[7]
        __frame2[9] = {}
        __frame2[9]["tag"] = "0"
        __frame2[9]["arg1"] = __frame2[8]
        return __frame2[9]
      end
      __frame1[2]["16"] = function()
        local __frame2 = {
          nil,
          nil,
          nil,
          nil,
          nil,
          nil
        }
        local __e28 = __frame1[1]["arg1"]
        __frame2[1] = {}
        __frame2[1]["tag"] = "4"
        __frame2[1]["arg1"] = "apropos"
        __frame2[2] = {}
        __frame2[2]["tag"] = "1"
        __frame2[2]["arg1"] = __e28
        __frame2[3] = {}
        __frame2[3]["tag"] = "0"
        __frame2[4] = {}
        __frame2[4]["tag"] = "1"
        __frame2[4]["arg1"] = __frame2[2]
        __frame2[4]["arg2"] = __frame2[3]
        __frame2[5] = {}
        __frame2[5]["tag"] = "1"
        __frame2[5]["arg1"] = __frame2[1]
        __frame2[5]["arg2"] = __frame2[4]
        __frame2[6] = {}
        __frame2[6]["tag"] = "0"
        __frame2[6]["arg1"] = __frame2[5]
        return __frame2[6]
      end
      __frame1[2]["17"] = function()
        local __frame2 = {
          nil,
          nil,
          nil,
          nil,
          nil,
          nil
        }
        local __e29 = __frame1[1]["arg1"]
        __frame2[1] = {}
        __frame2[1]["tag"] = "4"
        __frame2[1]["arg1"] = "metavariables"
        __frame2[2] = {}
        __frame2[2]["tag"] = "3"
        __frame2[2]["arg1"] = __e29
        __frame2[3] = {}
        __frame2[3]["tag"] = "0"
        __frame2[4] = {}
        __frame2[4]["tag"] = "1"
        __frame2[4]["arg1"] = __frame2[2]
        __frame2[4]["arg2"] = __frame2[3]
        __frame2[5] = {}
        __frame2[5]["tag"] = "1"
        __frame2[5]["arg1"] = __frame2[1]
        __frame2[5]["arg2"] = __frame2[4]
        __frame2[6] = {}
        __frame2[6]["tag"] = "0"
        __frame2[6]["arg1"] = __frame2[5]
        return __frame2[6]
      end
      __frame1[2]["18"] = function()
        local __frame2 = {
          nil,
          nil,
          nil,
          nil,
          nil,
          nil
        }
        local __e30 = __frame1[1]["arg1"]
        __frame2[1] = {}
        __frame2[1]["tag"] = "4"
        __frame2[1]["arg1"] = "who-calls"
        __frame2[2] = {}
        __frame2[2]["tag"] = "1"
        __frame2[2]["arg1"] = __e30
        __frame2[3] = {}
        __frame2[3]["tag"] = "0"
        __frame2[4] = {}
        __frame2[4]["tag"] = "1"
        __frame2[4]["arg1"] = __frame2[2]
        __frame2[4]["arg2"] = __frame2[3]
        __frame2[5] = {}
        __frame2[5]["tag"] = "1"
        __frame2[5]["arg1"] = __frame2[1]
        __frame2[5]["arg2"] = __frame2[4]
        __frame2[6] = {}
        __frame2[6]["tag"] = "0"
        __frame2[6]["arg1"] = __frame2[5]
        return __frame2[6]
      end
      __frame1[2]["19"] = function()
        local __frame2 = {
          nil,
          nil,
          nil,
          nil,
          nil,
          nil
        }
        local __e31 = __frame1[1]["arg1"]
        __frame2[1] = {}
        __frame2[1]["tag"] = "4"
        __frame2[1]["arg1"] = "calls-who"
        __frame2[2] = {}
        __frame2[2]["tag"] = "1"
        __frame2[2]["arg1"] = __e31
        __frame2[3] = {}
        __frame2[3]["tag"] = "0"
        __frame2[4] = {}
        __frame2[4]["tag"] = "1"
        __frame2[4]["arg1"] = __frame2[2]
        __frame2[4]["arg2"] = __frame2[3]
        __frame2[5] = {}
        __frame2[5]["tag"] = "1"
        __frame2[5]["arg1"] = __frame2[1]
        __frame2[5]["arg2"] = __frame2[4]
        __frame2[6] = {}
        __frame2[6]["tag"] = "0"
        __frame2[6]["arg1"] = __frame2[5]
        return __frame2[6]
      end
      __frame1[2]["20"] = function()
        local __frame2 = {
          nil,
          nil,
          nil,
          nil,
          nil,
          nil
        }
        local __e32 = __frame1[1]["arg1"]
        __frame2[1] = {}
        __frame2[1]["tag"] = "4"
        __frame2[1]["arg1"] = "browse-namespace"
        __frame2[2] = {}
        __frame2[2]["tag"] = "1"
        __frame2[2]["arg1"] = __e32
        __frame2[3] = {}
        __frame2[3]["tag"] = "0"
        __frame2[4] = {}
        __frame2[4]["tag"] = "1"
        __frame2[4]["arg1"] = __frame2[2]
        __frame2[4]["arg2"] = __frame2[3]
        __frame2[5] = {}
        __frame2[5]["tag"] = "1"
        __frame2[5]["arg1"] = __frame2[1]
        __frame2[5]["arg2"] = __frame2[4]
        __frame2[6] = {}
        __frame2[6]["tag"] = "0"
        __frame2[6]["arg1"] = __frame2[5]
        return __frame2[6]
      end
      __frame1[2]["21"] = function()
        local __frame2 = {
          nil,
          nil,
          nil,
          nil,
          nil,
          nil
        }
        local __e33 = __frame1[1]["arg1"]
        __frame2[1] = {}
        __frame2[1]["tag"] = "4"
        __frame2[1]["arg1"] = "normalise-term"
        __frame2[2] = {}
        __frame2[2]["tag"] = "1"
        __frame2[2]["arg1"] = __e33
        __frame2[3] = {}
        __frame2[3]["tag"] = "0"
        __frame2[4] = {}
        __frame2[4]["tag"] = "1"
        __frame2[4]["arg1"] = __frame2[2]
        __frame2[4]["arg2"] = __frame2[3]
        __frame2[5] = {}
        __frame2[5]["tag"] = "1"
        __frame2[5]["arg1"] = __frame2[1]
        __frame2[5]["arg2"] = __frame2[4]
        __frame2[6] = {}
        __frame2[6]["tag"] = "0"
        __frame2[6]["arg1"] = __frame2[5]
        return __frame2[6]
      end
      __frame1[2]["22"] = function()
        local __frame2 = {
          nil,
          nil,
          nil,
          nil,
          nil,
          nil
        }
        local __e34 = __frame1[1]["arg1"]
        __frame2[1] = {}
        __frame2[1]["tag"] = "4"
        __frame2[1]["arg1"] = "show-term-implicits"
        __frame2[2] = {}
        __frame2[2]["tag"] = "1"
        __frame2[2]["arg1"] = __e34
        __frame2[3] = {}
        __frame2[3]["tag"] = "0"
        __frame2[4] = {}
        __frame2[4]["tag"] = "1"
        __frame2[4]["arg1"] = __frame2[2]
        __frame2[4]["arg2"] = __frame2[3]
        __frame2[5] = {}
        __frame2[5]["tag"] = "1"
        __frame2[5]["arg1"] = __frame2[1]
        __frame2[5]["arg2"] = __frame2[4]
        __frame2[6] = {}
        __frame2[6]["tag"] = "0"
        __frame2[6]["arg1"] = __frame2[5]
        return __frame2[6]
      end
      __frame1[2]["23"] = function()
        local __frame2 = {
          nil,
          nil,
          nil,
          nil,
          nil,
          nil
        }
        local __e35 = __frame1[1]["arg1"]
        __frame2[1] = {}
        __frame2[1]["tag"] = "4"
        __frame2[1]["arg1"] = "hide-term-implicits"
        __frame2[2] = {}
        __frame2[2]["tag"] = "1"
        __frame2[2]["arg1"] = __e35
        __frame2[3] = {}
        __frame2[3]["tag"] = "0"
        __frame2[4] = {}
        __frame2[4]["tag"] = "1"
        __frame2[4]["arg1"] = __frame2[2]
        __frame2[4]["arg2"] = __frame2[3]
        __frame2[5] = {}
        __frame2[5]["tag"] = "1"
        __frame2[5]["arg1"] = __frame2[1]
        __frame2[5]["arg2"] = __frame2[4]
        __frame2[6] = {}
        __frame2[6]["tag"] = "0"
        __frame2[6]["arg1"] = __frame2[5]
        return __frame2[6]
      end
      __frame1[2]["24"] = function()
        local __frame2 = {
          nil,
          nil,
          nil,
          nil,
          nil,
          nil
        }
        local __e36 = __frame1[1]["arg1"]
        __frame2[1] = {}
        __frame2[1]["tag"] = "4"
        __frame2[1]["arg1"] = "elaborate-term"
        __frame2[2] = {}
        __frame2[2]["tag"] = "1"
        __frame2[2]["arg1"] = __e36
        __frame2[3] = {}
        __frame2[3]["tag"] = "0"
        __frame2[4] = {}
        __frame2[4]["tag"] = "1"
        __frame2[4]["arg1"] = __frame2[2]
        __frame2[4]["arg2"] = __frame2[3]
        __frame2[5] = {}
        __frame2[5]["tag"] = "1"
        __frame2[5]["arg1"] = __frame2[1]
        __frame2[5]["arg2"] = __frame2[4]
        __frame2[6] = {}
        __frame2[6]["tag"] = "0"
        __frame2[6]["arg1"] = __frame2[5]
        return __frame2[6]
      end
      __frame1[2]["25"] = function()
        local __frame2 = {
          nil,
          nil,
          nil,
          nil,
          nil,
          nil
        }
        local __e37 = __frame1[1]["arg1"]
        __frame2[1] = {}
        __frame2[1]["tag"] = "4"
        __frame2[1]["arg1"] = "print-definition"
        __frame2[2] = {}
        __frame2[2]["tag"] = "1"
        __frame2[2]["arg1"] = __e37
        __frame2[3] = {}
        __frame2[3]["tag"] = "0"
        __frame2[4] = {}
        __frame2[4]["tag"] = "1"
        __frame2[4]["arg1"] = __frame2[2]
        __frame2[4]["arg2"] = __frame2[3]
        __frame2[5] = {}
        __frame2[5]["tag"] = "1"
        __frame2[5]["arg1"] = __frame2[1]
        __frame2[5]["arg2"] = __frame2[4]
        __frame2[6] = {}
        __frame2[6]["tag"] = "0"
        __frame2[6]["arg1"] = __frame2[5]
        return __frame2[6]
      end
      __frame1[2]["26"] = function()
        local __frame2 = {
          nil,
          nil,
          nil,
          nil,
          nil,
          nil
        }
        local __e38 = __frame1[1]["arg1"]
        __frame2[1] = {}
        __frame2[1]["tag"] = "4"
        __frame2[1]["arg1"] = "repl-completions"
        __frame2[2] = {}
        __frame2[2]["tag"] = "1"
        __frame2[2]["arg1"] = __e38
        __frame2[3] = {}
        __frame2[3]["tag"] = "0"
        __frame2[4] = {}
        __frame2[4]["tag"] = "1"
        __frame2[4]["arg1"] = __frame2[2]
        __frame2[4]["arg2"] = __frame2[3]
        __frame2[5] = {}
        __frame2[5]["tag"] = "1"
        __frame2[5]["arg1"] = __frame2[1]
        __frame2[5]["arg2"] = __frame2[4]
        __frame2[6] = {}
        __frame2[6]["tag"] = "0"
        __frame2[6]["arg1"] = __frame2[5]
        return __frame2[6]
      end
      __frame1[2]["15"] = function()
        local __frame2 = {
          nil,
          nil,
          nil,
          nil,
          nil,
          nil
        }
        local __e39 = __frame1[1]["arg1"]
        __frame2[1] = {}
        __frame2[1]["tag"] = "4"
        __frame2[1]["arg1"] = "directive"
        __frame2[2] = {}
        __frame2[2]["tag"] = "1"
        __frame2[2]["arg1"] = __e39
        __frame2[3] = {}
        __frame2[3]["tag"] = "0"
        __frame2[4] = {}
        __frame2[4]["tag"] = "1"
        __frame2[4]["arg1"] = __frame2[2]
        __frame2[4]["arg2"] = __frame2[3]
        __frame2[5] = {}
        __frame2[5]["tag"] = "1"
        __frame2[5]["arg1"] = __frame2[1]
        __frame2[5]["arg2"] = __frame2[4]
        __frame2[6] = {}
        __frame2[6]["tag"] = "0"
        __frame2[6]["arg1"] = __frame2[5]
        return __frame2[6]
      end
      __frame1[2]["28"] = function()
        local __frame2 = {
          nil,
          nil,
          nil,
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "4"
        __frame2[1]["arg1"] = "get-options"
        __frame2[2] = {}
        __frame2[2]["tag"] = "0"
        __frame2[3] = {}
        __frame2[3]["tag"] = "1"
        __frame2[3]["arg1"] = __frame2[1]
        __frame2[3]["arg2"] = __frame2[2]
        __frame2[4] = {}
        __frame2[4]["tag"] = "0"
        __frame2[4]["arg1"] = __frame2[3]
        return __frame2[4]
      end
      __frame1[2]["27"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "4"
        __frame2[1]["arg1"] = "version"
        return __frame2[1]
      end
      __frame1[3] = __frame1[2][__frame1[1]["tag"]]
      if __frame1[3] then
        __frame1[4] = __frame1[3]()
      else
        idris["error"]("Impossible else branch")
      end
      return __frame1[4]
    end)()
end
idris["Idris.IDEMode.Commands.toSExp_SExpable__IDECommand"] = function(__ext0)
  return (function()
      return idris["Idris.IDEMode.Commands.putIDECommand"](__ext0)
    end)()
end
idris["Foreign.write"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg1
                  __frame1[2] = {
                    nil
                  }
                  __frame1[2]["0"] = function()
                    local __e2 = __frame1[1]["arg2"]
                    return __e2(nil)(function(__eta0)
                        return idris["Foreign.prim__write"](__arg2)(__arg3)(__eta0)
                      end)
                  end
                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[4]
                end)()
            end
        end
    end
end
idris["Foreign.vnoremap"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg1
                  __frame1[2] = {
                    nil
                  }
                  __frame1[2]["0"] = function()
                    local __e2 = __frame1[1]["arg2"]
                    return __e2(nil)(function(__eta0)
                        return idris["Foreign.prim__vnoremap"](__arg2)(__arg3)(__eta0)
                      end)
                  end
                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[4]
                end)()
            end
        end
    end
end
idris["Plugin.spawnOpts"] = function(__arg0)
  return function(__arg1)
      return (function()
          return idris["Plugin.prim__spawnOpts"](__arg0)(__arg1)
        end)()
    end
end
idris["Foreign.sigterm"] = function(__arg0)
  return function(__arg1)
      return function(__ext0)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg1
              __frame1[2] = {
                nil
              }
              __frame1[2]["0"] = function()
                local __e2 = __frame1[1]["arg2"]
                return __e2(nil)(function(__eta1)
                    return idris["Foreign.prim__sigtermHandle"](__ext0)(__eta1)
                  end)
              end
              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["Plugin.quitServer"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg1
              __frame1[2] = {
                nil
              }
              __frame1[2]["0"] = function()
                local __e1 = __frame1[1]["arg1"]
                return __e1
              end
              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              __frame1[5] = __frame1[4]
              __frame1[6] = {
                nil
              }
              __frame1[6]["0"] = function()
                local __frame2 = {
                  nil,
                  nil,
                  nil,
                  nil
                }
                local __e2 = __frame1[5]["arg2"]
                __frame2[1] = __arg1
                __frame2[2] = {
                  nil
                }
                __frame2[2]["0"] = function()
                  local __e4 = __frame2[1]["arg2"]
                  return __e4(nil)(function(__eta0)
                      return __arg2["val"]
                    end)
                end
                __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                if __frame2[3] then
                  __frame2[4] = __frame2[3]()
                else
                  idris["error"]("Impossible else branch")
                end
                return __e2(nil)(nil)(__frame2[4])(function(___0)
                    local __frame3 = {
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    __frame3[1] = ___0
                    __frame3[2] = {
                      nil,
                      nil
                    }
                    __frame3[2]["1"] = function()
                      local __frame4 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      local __e4 = __frame3[1]["arg1"]
                      __frame4[1] = __arg1
                      __frame4[2] = {
                        nil
                      }
                      __frame4[2]["0"] = function()
                        local __e6 = __frame4[1]["arg1"]
                        return __e6
                      end
                      __frame4[3] = __frame4[2][__frame4[1]["tag"]]
                      if __frame4[3] then
                        __frame4[4] = __frame4[3]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      __frame4[5] = __frame4[4]
                      __frame4[6] = {
                        nil
                      }
                      __frame4[6]["0"] = function()
                        local __e6 = __frame4[5]["arg2"]
                        return __e6(nil)(nil)(idris["Foreign.sigterm"](nil)(__arg1)(__e4))(function(___8040)
                            local __frame6 = {
                              nil,
                              nil,
                              nil,
                              nil
                            }
                            __frame6[1] = __arg1
                            __frame6[2] = {
                              nil
                            }
                            __frame6[2]["0"] = function()
                              local __e8 = __frame6[1]["arg2"]
                              return __e8(nil)(function(__eta0)
                                  local __frame8 = {
                                    nil
                                  }
                                  __frame8[1] = {}
                                  __frame8[1]["tag"] = "0"
                                  __arg2["val"] = __frame8[1]
                                  return {
                                      tag = 
                                        "0"
                                    }
                                end)
                            end
                            __frame6[3] = __frame6[2][__frame6[1]["tag"]]
                            if __frame6[3] then
                              __frame6[4] = __frame6[3]()
                            else
                              idris["error"]("Impossible else branch")
                            end
                            return __frame6[4]
                          end)
                      end
                      __frame4[7] = __frame4[6][__frame4[5]["tag"]]
                      if __frame4[7] then
                        __frame4[8] = __frame4[7]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame4[8]
                    end
                    __frame3[2]["0"] = function()
                      local __frame4 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame4[1] = __arg1
                      __frame4[2] = {
                        nil
                      }
                      __frame4[2]["0"] = function()
                        local __e5 = __frame4[1]["arg1"]
                        return __e5
                      end
                      __frame4[3] = __frame4[2][__frame4[1]["tag"]]
                      if __frame4[3] then
                        __frame4[4] = __frame4[3]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      __frame4[5] = __frame4[4]
                      __frame4[6] = {
                        nil
                      }
                      __frame4[6]["0"] = function()
                        local __e6 = __frame4[5]["arg1"]
                        return __e6
                      end
                      __frame4[7] = __frame4[6][__frame4[5]["tag"]]
                      if __frame4[7] then
                        __frame4[8] = __frame4[7]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      __frame4[9] = __frame4[8]
                      __frame4[10] = {
                        nil
                      }
                      __frame4[10]["0"] = function()
                        local __frame5 = {
                          nil
                        }
                        local __e5 = __frame4[9]["arg2"]
                        __frame5[1] = {}
                        __frame5[1]["tag"] = "0"
                        return __e5(nil)(__frame5[1])
                      end
                      __frame4[11] = __frame4[10][__frame4[9]["tag"]]
                      if __frame4[11] then
                        __frame4[12] = __frame4[11]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame4[12]
                    end
                    __frame3[3] = __frame3[2][__frame3[1]["tag"]]
                    if __frame3[3] then
                      __frame3[4] = __frame3[3]()
                    else
                      idris["error"]("Impossible else branch")
                    end
                    return __frame3[4]
                  end)
              end
              __frame1[7] = __frame1[6][__frame1[5]["tag"]]
              if __frame1[7] then
                __frame1[8] = __frame1[7]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[8]
            end)()
        end
    end
end
idris["Foreign.saveBuffer"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil
          }
          __frame1[2]["0"] = function()
            local __e2 = __frame1[1]["arg2"]
            return __e2(nil)(function(__eta0)
                return idris["Foreign.prim__saveBuffer"](__eta0)
              end)
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Foreign.readStop"] = function(__arg0)
  return function(__arg1)
      return function(__ext0)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg1
              __frame1[2] = {
                nil
              }
              __frame1[2]["0"] = function()
                local __e2 = __frame1[1]["arg2"]
                return __e2(nil)(function(__eta1)
                    return idris["Foreign.prim__readStop"](__ext0)(__eta1)
                  end)
              end
              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["Foreign.readStart"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return (function()
                          local __frame1 = {
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          __frame1[1] = __arg1
                          __frame1[2] = {
                            nil
                          }
                          __frame1[2]["0"] = function()
                            local __e2 = __frame1[1]["arg2"]
                            return __e2(nil)(function(__eta0)
                                return idris["Foreign.prim__readStart"](__arg2)(function(s)
                                    return __arg3(s)
                                  end)(function(s)
                                    return __arg4(s)
                                  end)(__arg5)(__eta0)
                              end)
                          end
                          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                          if __frame1[3] then
                            __frame1[4] = __frame1[3]()
                          else
                            idris["error"]("Impossible else branch")
                          end
                          return __frame1[4]
                        end)()
                    end
                end
            end
        end
    end
end
idris["Prelude.IO.putStr"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg1
              __frame1[2] = {
                nil
              }
              __frame1[2]["0"] = function()
                local __e2 = __frame1[1]["arg2"]
                return __e2(nil)(function(__eta0)
                    return idris["Prelude.IO.prim__putStr"](__arg2)(__eta0)
                  end)
              end
              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["Prelude.IO.putStrLn"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              return idris["Prelude.IO.putStr"](nil)(__arg1)((__arg2) .. ("\n"))
            end)()
        end
    end
end
idris["System.File.returnError"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg2
              __frame1[2] = {
                nil
              }
              __frame1[2]["0"] = function()
                local __e1 = __frame1[1]["arg1"]
                return __e1
              end
              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              __frame1[5] = __frame1[4]
              __frame1[6] = {
                nil
              }
              __frame1[6]["0"] = function()
                local __frame2 = {
                  nil,
                  nil,
                  nil,
                  nil
                }
                local __e2 = __frame1[5]["arg2"]
                __frame2[1] = __arg2
                __frame2[2] = {
                  nil
                }
                __frame2[2]["0"] = function()
                  local __e4 = __frame2[1]["arg2"]
                  return __e4(nil)(function(__eta0)
                      return idris["System.File.prim__fileErrno"](__eta0)
                    end)
                end
                __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                if __frame2[3] then
                  __frame2[4] = __frame2[3]()
                else
                  idris["error"]("Impossible else branch")
                end
                return __e2(nil)(nil)(__frame2[4])(function(err)
                    local __frame3 = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    __frame3[1] = err
                    __frame3[2] = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    __frame3[2][0] = function()
                      local __frame4 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame4[1] = __arg2
                      __frame4[2] = {
                        nil
                      }
                      __frame4[2]["0"] = function()
                        local __e5 = __frame4[1]["arg1"]
                        return __e5
                      end
                      __frame4[3] = __frame4[2][__frame4[1]["tag"]]
                      if __frame4[3] then
                        __frame4[4] = __frame4[3]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      __frame4[5] = __frame4[4]
                      __frame4[6] = {
                        nil
                      }
                      __frame4[6]["0"] = function()
                        local __e6 = __frame4[5]["arg1"]
                        return __e6
                      end
                      __frame4[7] = __frame4[6][__frame4[5]["tag"]]
                      if __frame4[7] then
                        __frame4[8] = __frame4[7]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      __frame4[9] = __frame4[8]
                      __frame4[10] = {
                        nil
                      }
                      __frame4[10]["0"] = function()
                        local __frame5 = {
                          nil,
                          nil
                        }
                        local __e5 = __frame4[9]["arg2"]
                        __frame5[1] = {}
                        __frame5[1]["tag"] = "1"
                        __frame5[2] = {}
                        __frame5[2]["tag"] = "0"
                        __frame5[2]["arg1"] = __frame5[1]
                        return __e5(nil)(__frame5[2])
                      end
                      __frame4[11] = __frame4[10][__frame4[9]["tag"]]
                      if __frame4[11] then
                        __frame4[12] = __frame4[11]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame4[12]
                    end
                    __frame3[2][1] = function()
                      local __frame4 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame4[1] = __arg2
                      __frame4[2] = {
                        nil
                      }
                      __frame4[2]["0"] = function()
                        local __e5 = __frame4[1]["arg1"]
                        return __e5
                      end
                      __frame4[3] = __frame4[2][__frame4[1]["tag"]]
                      if __frame4[3] then
                        __frame4[4] = __frame4[3]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      __frame4[5] = __frame4[4]
                      __frame4[6] = {
                        nil
                      }
                      __frame4[6]["0"] = function()
                        local __e6 = __frame4[5]["arg1"]
                        return __e6
                      end
                      __frame4[7] = __frame4[6][__frame4[5]["tag"]]
                      if __frame4[7] then
                        __frame4[8] = __frame4[7]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      __frame4[9] = __frame4[8]
                      __frame4[10] = {
                        nil
                      }
                      __frame4[10]["0"] = function()
                        local __frame5 = {
                          nil,
                          nil
                        }
                        local __e5 = __frame4[9]["arg2"]
                        __frame5[1] = {}
                        __frame5[1]["tag"] = "2"
                        __frame5[2] = {}
                        __frame5[2]["tag"] = "0"
                        __frame5[2]["arg1"] = __frame5[1]
                        return __e5(nil)(__frame5[2])
                      end
                      __frame4[11] = __frame4[10][__frame4[9]["tag"]]
                      if __frame4[11] then
                        __frame4[12] = __frame4[11]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame4[12]
                    end
                    __frame3[2][2] = function()
                      local __frame4 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame4[1] = __arg2
                      __frame4[2] = {
                        nil
                      }
                      __frame4[2]["0"] = function()
                        local __e5 = __frame4[1]["arg1"]
                        return __e5
                      end
                      __frame4[3] = __frame4[2][__frame4[1]["tag"]]
                      if __frame4[3] then
                        __frame4[4] = __frame4[3]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      __frame4[5] = __frame4[4]
                      __frame4[6] = {
                        nil
                      }
                      __frame4[6]["0"] = function()
                        local __e6 = __frame4[5]["arg1"]
                        return __e6
                      end
                      __frame4[7] = __frame4[6][__frame4[5]["tag"]]
                      if __frame4[7] then
                        __frame4[8] = __frame4[7]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      __frame4[9] = __frame4[8]
                      __frame4[10] = {
                        nil
                      }
                      __frame4[10]["0"] = function()
                        local __frame5 = {
                          nil,
                          nil
                        }
                        local __e5 = __frame4[9]["arg2"]
                        __frame5[1] = {}
                        __frame5[1]["tag"] = "3"
                        __frame5[2] = {}
                        __frame5[2]["tag"] = "0"
                        __frame5[2]["arg1"] = __frame5[1]
                        return __e5(nil)(__frame5[2])
                      end
                      __frame4[11] = __frame4[10][__frame4[9]["tag"]]
                      if __frame4[11] then
                        __frame4[12] = __frame4[11]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame4[12]
                    end
                    __frame3[2][3] = function()
                      local __frame4 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame4[1] = __arg2
                      __frame4[2] = {
                        nil
                      }
                      __frame4[2]["0"] = function()
                        local __e5 = __frame4[1]["arg1"]
                        return __e5
                      end
                      __frame4[3] = __frame4[2][__frame4[1]["tag"]]
                      if __frame4[3] then
                        __frame4[4] = __frame4[3]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      __frame4[5] = __frame4[4]
                      __frame4[6] = {
                        nil
                      }
                      __frame4[6]["0"] = function()
                        local __e6 = __frame4[5]["arg1"]
                        return __e6
                      end
                      __frame4[7] = __frame4[6][__frame4[5]["tag"]]
                      if __frame4[7] then
                        __frame4[8] = __frame4[7]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      __frame4[9] = __frame4[8]
                      __frame4[10] = {
                        nil
                      }
                      __frame4[10]["0"] = function()
                        local __frame5 = {
                          nil,
                          nil
                        }
                        local __e5 = __frame4[9]["arg2"]
                        __frame5[1] = {}
                        __frame5[1]["tag"] = "4"
                        __frame5[2] = {}
                        __frame5[2]["tag"] = "0"
                        __frame5[2]["arg1"] = __frame5[1]
                        return __e5(nil)(__frame5[2])
                      end
                      __frame4[11] = __frame4[10][__frame4[9]["tag"]]
                      if __frame4[11] then
                        __frame4[12] = __frame4[11]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame4[12]
                    end
                    __frame3[2][4] = function()
                      local __frame4 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame4[1] = __arg2
                      __frame4[2] = {
                        nil
                      }
                      __frame4[2]["0"] = function()
                        local __e5 = __frame4[1]["arg1"]
                        return __e5
                      end
                      __frame4[3] = __frame4[2][__frame4[1]["tag"]]
                      if __frame4[3] then
                        __frame4[4] = __frame4[3]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      __frame4[5] = __frame4[4]
                      __frame4[6] = {
                        nil
                      }
                      __frame4[6]["0"] = function()
                        local __e6 = __frame4[5]["arg1"]
                        return __e6
                      end
                      __frame4[7] = __frame4[6][__frame4[5]["tag"]]
                      if __frame4[7] then
                        __frame4[8] = __frame4[7]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      __frame4[9] = __frame4[8]
                      __frame4[10] = {
                        nil
                      }
                      __frame4[10]["0"] = function()
                        local __frame5 = {
                          nil,
                          nil
                        }
                        local __e5 = __frame4[9]["arg2"]
                        __frame5[1] = {}
                        __frame5[1]["tag"] = "5"
                        __frame5[2] = {}
                        __frame5[2]["tag"] = "0"
                        __frame5[2]["arg1"] = __frame5[1]
                        return __e5(nil)(__frame5[2])
                      end
                      __frame4[11] = __frame4[10][__frame4[9]["tag"]]
                      if __frame4[11] then
                        __frame4[12] = __frame4[11]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame4[12]
                    end
                    __frame3[15] = __frame3[2][__frame3[1]]
                    if __frame3[15] then
                      __frame3[16] = __frame3[15]()
                    else
                      __frame3[3] = __arg2
                      __frame3[4] = {
                        nil
                      }
                      __frame3[4]["0"] = function()
                        local __e5 = __frame3[3]["arg1"]
                        return __e5
                      end
                      __frame3[5] = __frame3[4][__frame3[3]["tag"]]
                      if __frame3[5] then
                        __frame3[6] = __frame3[5]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      __frame3[7] = __frame3[6]
                      __frame3[8] = {
                        nil
                      }
                      __frame3[8]["0"] = function()
                        local __e6 = __frame3[7]["arg1"]
                        return __e6
                      end
                      __frame3[9] = __frame3[8][__frame3[7]["tag"]]
                      if __frame3[9] then
                        __frame3[10] = __frame3[9]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      __frame3[11] = __frame3[10]
                      __frame3[12] = {
                        nil
                      }
                      __frame3[12]["0"] = function()
                        local __frame4 = {
                          nil,
                          nil
                        }
                        local __e5 = __frame3[11]["arg2"]
                        __frame4[1] = {}
                        __frame4[1]["tag"] = "0"
                        __frame4[1]["arg1"] = idris["Prelude.Num.-_Neg__Int"](err)(5)
                        __frame4[2] = {}
                        __frame4[2]["tag"] = "0"
                        __frame4[2]["arg1"] = __frame4[1]
                        return __e5(nil)(__frame4[2])
                      end
                      __frame3[13] = __frame3[12][__frame3[11]["tag"]]
                      if __frame3[13] then
                        __frame3[14] = __frame3[13]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      __frame3[16] = __frame3[14]
                    end
                    return __frame3[16]
                  end)
              end
              __frame1[7] = __frame1[6][__frame1[5]["tag"]]
              if __frame1[7] then
                __frame1[8] = __frame1[7]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[8]
            end)()
        end
    end
end
idris["System.File.case[1262]popen"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return (function()
                          local __frame1 = {
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          __frame1[1] = __arg5
                          __frame1[2] = {
                            nil,
                            nil
                          }
                          __frame1[2][0] = function()
                            return idris["System.File.returnError"](nil)(nil)(__arg1)
                          end
                          __frame1[2][1] = function()
                            local __frame2 = {
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil
                            }
                            __frame2[1] = __arg1
                            __frame2[2] = {
                              nil
                            }
                            __frame2[2]["0"] = function()
                              local __e1 = __frame2[1]["arg1"]
                              return __e1
                            end
                            __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                            if __frame2[3] then
                              __frame2[4] = __frame2[3]()
                            else
                              idris["error"]("Impossible else branch")
                            end
                            __frame2[5] = __frame2[4]
                            __frame2[6] = {
                              nil
                            }
                            __frame2[6]["0"] = function()
                              local __e1 = __frame2[5]["arg1"]
                              return __e1
                            end
                            __frame2[7] = __frame2[6][__frame2[5]["tag"]]
                            if __frame2[7] then
                              __frame2[8] = __frame2[7]()
                            else
                              idris["error"]("Impossible else branch")
                            end
                            __frame2[9] = __frame2[8]
                            __frame2[10] = {
                              nil
                            }
                            __frame2[10]["0"] = function()
                              local __frame3 = {
                                nil
                              }
                              local __e2 = __frame2[9]["arg2"]
                              __frame3[1] = {}
                              __frame3[1]["tag"] = "1"
                              __frame3[1]["arg1"] = __arg4
                              return __e2(nil)(__frame3[1])
                            end
                            __frame2[11] = __frame2[10][__frame2[9]["tag"]]
                            if __frame2[11] then
                              __frame2[12] = __frame2[11]()
                            else
                              idris["error"]("Impossible else branch")
                            end
                            return __frame2[12]
                          end
                          __frame1[3] = __frame1[2][__frame1[1]]
                          if __frame1[3] then
                            __frame1[4] = __frame1[3]()
                          else
                            idris["error"]("Impossible else branch")
                          end
                          return __frame1[4]
                        end)()
                    end
                end
            end
        end
    end
end
idris["Text.Lexer.Core.pred"] = function(__ext0)
  return (function()
      local __frame1 = {
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "3"
      __frame1[1]["arg1"] = __ext0
      return __frame1[1]
    end)()
end
idris["Prelude.Show.precCon"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[2]["0"] = function()
        return bigint:new("0")
      end
      __frame1[2]["1"] = function()
        return bigint:new("1")
      end
      __frame1[2]["2"] = function()
        return bigint:new("2")
      end
      __frame1[2]["3"] = function()
        return bigint:new("3")
      end
      __frame1[2]["4"] = function()
        return bigint:new("4")
      end
      __frame1[2]["5"] = function()
        return bigint:new("5")
      end
      __frame1[2]["6"] = function()
        return bigint:new("6")
      end
      __frame1[3] = __frame1[2][__frame1[1]["tag"]]
      if __frame1[3] then
        __frame1[4] = __frame1[3]()
      else
        idris["error"]("Impossible else branch")
      end
      return __frame1[4]
    end)()
end
idris["Prelude.Show.compare_Ord__Prec"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg0
          __frame1[2] = {
            nil
          }
          __frame1[2]["4"] = function()
            local __frame2 = {
              nil,
              nil,
              nil,
              nil
            }
            local __e0 = __frame1[1]["arg1"]
            __frame2[1] = __arg1
            __frame2[2] = {
              nil
            }
            __frame2[2]["4"] = function()
              local __e1 = __frame2[1]["arg1"]
              return idris["Prelude.Types.compare_Ord__Nat"](__e0)(__e1)
            end
            __frame2[3] = __frame2[2][__frame2[1]["tag"]]
            if __frame2[3] then
              __frame2[4] = __frame2[3]()
            else
              __frame2[4] = idris["Prelude.EqOrd.compare_Ord__Integer"](idris["Prelude.Show.precCon"](__arg0))(idris["Prelude.Show.precCon"](__arg1))
            end
            return __frame2[4]
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            __frame1[4] = idris["Prelude.EqOrd.compare_Ord__Integer"](idris["Prelude.Show.precCon"](__arg0))(idris["Prelude.Show.precCon"](__arg1))
          end
          return __frame1[4]
        end)()
    end
end
idris["System.File.pclose"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg1
              __frame1[2] = {
                nil
              }
              __frame1[2]["0"] = function()
                local __e2 = __frame1[1]["arg2"]
                return __e2(nil)(function(__eta0)
                    return idris["System.File.prim__pclose"](__arg2)(__eta0)
                  end)
              end
              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["Prelude.Types.pack"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil,
        nil
      }
      __frame1[2]["0"] = function()
        return ""
      end
      __frame1[2]["1"] = function()
        local __e2 = __frame1[1]["arg1"]
        local __e3 = __frame1[1]["arg2"]
        return idris["Prelude.Types.strCons"](__e2)(idris["Prelude.Types.pack"](__e3))
      end
      __frame1[3] = __frame1[2][__frame1[1]["tag"]]
      if __frame1[3] then
        __frame1[4] = __frame1[3]()
      else
        idris["error"]("Impossible else branch")
      end
      return __frame1[4]
    end)()
end
idris["System.Info.os"] = (function()
  return idris["System.Info.prim__os"]
end)()
idris["Prelude.Types.ord"] = function(__ext0)
  return (function()
      return utf8.byte(__ext0)
    end)()
end
idris["Text.Parser.option"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return (function()
                      local __frame1 = {
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame1[1] = __arg2
                      __frame1[2] = {
                        nil,
                        nil
                      }
                      __frame1[2][1] = function()
                        local __frame2 = {
                          nil
                        }
                        __frame2[1] = {}
                        __frame2[1]["tag"] = "10"
                        __frame2[1]["arg1"] = 1
                        __frame2[1]["arg2"] = 1
                        __frame2[1]["arg3"] = __arg4
                        __frame2[1]["arg4"] = function()
                          local __frame3 = {
                            nil
                          }
                          __frame3[1] = {}
                          __frame3[1]["tag"] = "0"
                          __frame3[1]["arg1"] = __arg3
                          return __frame3[1]
                        end
                        return __frame2[1]
                      end
                      __frame1[2][0] = function()
                        local __frame2 = {
                          nil
                        }
                        __frame2[1] = {}
                        __frame2[1]["tag"] = "10"
                        __frame2[1]["arg1"] = 0
                        __frame2[1]["arg2"] = 1
                        __frame2[1]["arg3"] = __arg4
                        __frame2[1]["arg4"] = function()
                          local __frame3 = {
                            nil
                          }
                          __frame3[1] = {}
                          __frame3[1]["tag"] = "0"
                          __frame3[1]["arg1"] = __arg3
                          return __frame3[1]
                        end
                        return __frame2[1]
                      end
                      __frame1[3] = __frame1[2][__frame1[1]]
                      if __frame1[3] then
                        __frame1[4] = __frame1[3]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame1[4]
                    end)()
                end
            end
        end
    end
end
idris["Text.Parser.some"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil
              }
              __frame1[1] = {}
              __frame1[1]["tag"] = "8"
              __frame1[1]["arg1"] = 1
              __frame1[1]["arg2"] = __arg2
              __frame1[1]["arg3"] = function()
                return function(__bind0)
                    local __frame3 = {
                      nil
                    }
                    __frame3[1] = {}
                    __frame3[1]["tag"] = "9"
                    __frame3[1]["arg1"] = 1
                    __frame3[1]["arg2"] = 1
                    __frame3[1]["arg3"] = idris["Text.Parser.many"](nil)(nil)(__arg2)
                    __frame3[1]["arg4"] = function(__bind1)
                      local __frame4 = {
                        nil,
                        nil
                      }
                      __frame4[1] = {}
                      __frame4[1]["tag"] = "1"
                      __frame4[1]["arg1"] = __bind0
                      __frame4[1]["arg2"] = __bind1
                      __frame4[2] = {}
                      __frame4[2]["tag"] = "0"
                      __frame4[2]["arg1"] = __frame4[1]
                      return __frame4[2]
                    end
                    return __frame3[1]
                  end
              end
              return __frame1[1]
            end)()
        end
    end
end
idris["Text.Parser.optional"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil
                  }
                  __frame1[1] = {}
                  __frame1[1]["tag"] = "0"
                  return idris["Text.Parser.option"](nil)(nil)(__arg2)(__frame1[1])(idris["Text.Parser.Core.map_Functor__((Grammar $tok) $c)"](nil)(nil)(nil)(__arg2)(function(__eta0)
                      local __frame2 = {
                        nil
                      }
                      __frame2[1] = {}
                      __frame2[1]["tag"] = "1"
                      __frame2[1]["arg1"] = __eta0
                      return __frame2[1]
                    end)(__arg3))
                end)()
            end
        end
    end
end
idris["System.File.ok"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg2
                  __frame1[2] = {
                    nil
                  }
                  __frame1[2]["0"] = function()
                    local __e1 = __frame1[1]["arg1"]
                    return __e1
                  end
                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  __frame1[5] = __frame1[4]
                  __frame1[6] = {
                    nil
                  }
                  __frame1[6]["0"] = function()
                    local __e1 = __frame1[5]["arg1"]
                    return __e1
                  end
                  __frame1[7] = __frame1[6][__frame1[5]["tag"]]
                  if __frame1[7] then
                    __frame1[8] = __frame1[7]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  __frame1[9] = __frame1[8]
                  __frame1[10] = {
                    nil
                  }
                  __frame1[10]["0"] = function()
                    local __frame2 = {
                      nil
                    }
                    local __e2 = __frame1[9]["arg2"]
                    __frame2[1] = {}
                    __frame2[1]["tag"] = "1"
                    __frame2[1]["arg1"] = __arg3
                    return __e2(nil)(__frame2[1])
                  end
                  __frame1[11] = __frame1[10][__frame1[9]["tag"]]
                  if __frame1[11] then
                    __frame1[12] = __frame1[11]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[12]
                end)()
            end
        end
    end
end
idris["System.File.case[934]fGetLine"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return (function()
                      local __frame1 = {
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame1[1] = __arg4
                      __frame1[2] = {
                        nil,
                        nil
                      }
                      __frame1[2][0] = function()
                        return idris["System.File.returnError"](nil)(nil)(__arg1)
                      end
                      __frame1[2][1] = function()
                        return idris["System.File.ok"](nil)(nil)(__arg1)(idris["Prelude.IO.prim__getString"](__arg3))
                      end
                      __frame1[3] = __frame1[2][__frame1[1]]
                      if __frame1[3] then
                        __frame1[4] = __frame1[3]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame1[4]
                    end)()
                end
            end
        end
    end
end
idris["Parser.Support.oct"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[2]["0"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 0
        return __frame2[1]
      end
      __frame1[2]["1"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 1
        return __frame2[1]
      end
      __frame1[2]["2"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 2
        return __frame2[1]
      end
      __frame1[2]["3"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 3
        return __frame2[1]
      end
      __frame1[2]["4"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 4
        return __frame2[1]
      end
      __frame1[2]["5"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 5
        return __frame2[1]
      end
      __frame1[2]["6"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 6
        return __frame2[1]
      end
      __frame1[2]["7"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 7
        return __frame2[1]
      end
      __frame1[4] = __frame1[2][__frame1[1]]
      if __frame1[4] then
        __frame1[5] = __frame1[4]()
      else
        __frame1[3] = {}
        __frame1[3]["tag"] = "0"
        __frame1[5] = __frame1[3]
      end
      return __frame1[5]
    end)()
end
idris["Foreign.nvimEval"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__ext0)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg2
                  __frame1[2] = {
                    nil
                  }
                  __frame1[2]["0"] = function()
                    local __e2 = __frame1[1]["arg2"]
                    return __e2(nil)(function(__eta1)
                        return idris["Foreign.prim__nvimEval"](nil)(__ext0)(__eta1)
                      end)
                  end
                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[4]
                end)()
            end
        end
    end
end
idris["Foreign.nvimCommand"] = function(__arg0)
  return function(__arg1)
      return function(__ext0)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg1
              __frame1[2] = {
                nil
              }
              __frame1[2]["0"] = function()
                local __e2 = __frame1[1]["arg2"]
                return __e2(nil)(function(__eta1)
                    return idris["Foreign.prim__nvimCommand"](__ext0)(__eta1)
                  end)
              end
              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["Prelude.Basics.not"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil,
        nil
      }
      __frame1[2][0] = function()
        return 1
      end
      __frame1[2][1] = function()
        return 0
      end
      __frame1[3] = __frame1[2][__frame1[1]]
      if __frame1[3] then
        __frame1[4] = __frame1[3]()
      else
        idris["error"]("Impossible else branch")
      end
      return __frame1[4]
    end)()
end
idris["Prelude.EqOrd./=_Eq__String"] = function(__arg0)
  return function(__arg1)
      return (function()
          return idris["Prelude.Basics.not"](idris["Prelude.EqOrd.==_Eq__String"](__arg0)(__arg1))
        end)()
    end
end
idris["Utils.Path./=_Eq__PathTokenKind"] = function(__arg0)
  return function(__arg1)
      return (function()
          return idris["Prelude.Basics.not"](idris["Utils.Path.==_Eq__PathTokenKind"](__arg0)(__arg1))
        end)()
    end
end
idris["Prelude.EqOrd./=_Eq__Ordering"] = function(__arg0)
  return function(__arg1)
      return (function()
          return idris["Prelude.Basics.not"](idris["Prelude.EqOrd.==_Eq__Ordering"](__arg0)(__arg1))
        end)()
    end
end
idris["Prelude.Show.>=_Ord__Prec"] = function(__arg0)
  return function(__arg1)
      return (function()
          return idris["Prelude.EqOrd./=_Eq__Ordering"](idris["Prelude.Show.compare_Ord__Prec"](__arg0)(__arg1))(0)
        end)()
    end
end
idris["Prelude.Types.>=_Ord__Nat"] = function(__arg0)
  return function(__arg1)
      return (function()
          return idris["Prelude.EqOrd./=_Eq__Ordering"](idris["Prelude.Types.compare_Ord__Nat"](__arg0)(__arg1))(0)
        end)()
    end
end
idris["Prelude.Types.<=_Ord__Nat"] = function(__arg0)
  return function(__arg1)
      return (function()
          return idris["Prelude.EqOrd./=_Eq__Ordering"](idris["Prelude.Types.compare_Ord__Nat"](__arg0)(__arg1))(2)
        end)()
    end
end
idris["Prelude.EqOrd./=_Eq__Int"] = function(__arg0)
  return function(__arg1)
      return (function()
          return idris["Prelude.Basics.not"](idris["Prelude.EqOrd.==_Eq__Int"](__arg0)(__arg1))
        end)()
    end
end
idris["Prelude.EqOrd./=_Eq__Char"] = function(__arg0)
  return function(__arg1)
      return (function()
          return idris["Prelude.Basics.not"](idris["Prelude.EqOrd.==_Eq__Char"](__arg0)(__arg1))
        end)()
    end
end
idris["Utils.Path./=_Eq__Body"] = function(__arg0)
  return function(__arg1)
      return (function()
          return idris["Prelude.Basics.not"](idris["Utils.Path.==_Eq__Body"](__arg0)(__arg1))
        end)()
    end
end
idris["Foreign.nnoremap"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg1
                  __frame1[2] = {
                    nil
                  }
                  __frame1[2]["0"] = function()
                    local __e2 = __frame1[1]["arg2"]
                    return __e2(nil)(function(__eta0)
                        return idris["Foreign.prim__nnoremap"](__arg2)(__arg3)(__eta0)
                      end)
                  end
                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[4]
                end)()
            end
        end
    end
end
idris["Foreign.newTCP"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil
          }
          __frame1[2]["0"] = function()
            local __e2 = __frame1[1]["arg2"]
            return __e2(nil)(function(__eta0)
                return idris["Foreign.prim__newTCP"](__eta0)
              end)
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Foreign.newPipe"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil
          }
          __frame1[2]["0"] = function()
            local __e2 = __frame1[1]["arg2"]
            return __e2(nil)(function(__eta0)
                return idris["Foreign.prim__newPipe"](__eta0)
              end)
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Data.IORef.newIORef"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg2
                  __frame1[2] = {
                    nil
                  }
                  __frame1[2]["0"] = function()
                    local __e1 = __frame1[1]["arg1"]
                    return __e1
                  end
                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  __frame1[5] = __frame1[4]
                  __frame1[6] = {
                    nil
                  }
                  __frame1[6]["0"] = function()
                    local __frame2 = {
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    local __e2 = __frame1[5]["arg2"]
                    __frame2[1] = __arg2
                    __frame2[2] = {
                      nil
                    }
                    __frame2[2]["0"] = function()
                      local __e4 = __frame2[1]["arg2"]
                      return __e4(nil)(function(__eta0)
                          return {
                              val = 
                                __arg3
                            }
                        end)
                    end
                    __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                    if __frame2[3] then
                      __frame2[4] = __frame2[3]()
                    else
                      idris["error"]("Impossible else branch")
                    end
                    return __e2(nil)(nil)(__frame2[4])(function(m)
                        local __frame3 = {
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        __frame3[1] = __arg2
                        __frame3[2] = {
                          nil
                        }
                        __frame3[2]["0"] = function()
                          local __e5 = __frame3[1]["arg1"]
                          return __e5
                        end
                        __frame3[3] = __frame3[2][__frame3[1]["tag"]]
                        if __frame3[3] then
                          __frame3[4] = __frame3[3]()
                        else
                          idris["error"]("Impossible else branch")
                        end
                        __frame3[5] = __frame3[4]
                        __frame3[6] = {
                          nil
                        }
                        __frame3[6]["0"] = function()
                          local __e6 = __frame3[5]["arg1"]
                          return __e6
                        end
                        __frame3[7] = __frame3[6][__frame3[5]["tag"]]
                        if __frame3[7] then
                          __frame3[8] = __frame3[7]()
                        else
                          idris["error"]("Impossible else branch")
                        end
                        __frame3[9] = __frame3[8]
                        __frame3[10] = {
                          nil
                        }
                        __frame3[10]["0"] = function()
                          local __e5 = __frame3[9]["arg2"]
                          return __e5(nil)(m)
                        end
                        __frame3[11] = __frame3[10][__frame3[9]["tag"]]
                        if __frame3[11] then
                          __frame3[12] = __frame3[11]()
                        else
                          idris["error"]("Impossible else branch")
                        end
                        return __frame3[12]
                      end)
                  end
                  __frame1[7] = __frame1[6][__frame1[5]["tag"]]
                  if __frame1[7] then
                    __frame1[8] = __frame1[7]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[8]
                end)()
            end
        end
    end
end
idris["Data.Ref.newRef"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return (function()
                          local __frame1 = {
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          __frame1[1] = __arg3
                          __frame1[2] = {
                            nil
                          }
                          __frame1[2]["0"] = function()
                            local __e1 = __frame1[1]["arg1"]
                            return __e1
                          end
                          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                          if __frame1[3] then
                            __frame1[4] = __frame1[3]()
                          else
                            idris["error"]("Impossible else branch")
                          end
                          __frame1[5] = __frame1[4]
                          __frame1[6] = {
                            nil
                          }
                          __frame1[6]["0"] = function()
                            local __e2 = __frame1[5]["arg2"]
                            return __e2(nil)(nil)(idris["Data.IORef.newIORef"](nil)(nil)(__arg3)(__arg5))(function(ref)
                                local __frame3 = {
                                  nil,
                                  nil,
                                  nil,
                                  nil,
                                  nil,
                                  nil,
                                  nil,
                                  nil,
                                  nil,
                                  nil,
                                  nil,
                                  nil
                                }
                                __frame3[1] = __arg3
                                __frame3[2] = {
                                  nil
                                }
                                __frame3[2]["0"] = function()
                                  local __e5 = __frame3[1]["arg1"]
                                  return __e5
                                end
                                __frame3[3] = __frame3[2][__frame3[1]["tag"]]
                                if __frame3[3] then
                                  __frame3[4] = __frame3[3]()
                                else
                                  idris["error"]("Impossible else branch")
                                end
                                __frame3[5] = __frame3[4]
                                __frame3[6] = {
                                  nil
                                }
                                __frame3[6]["0"] = function()
                                  local __e6 = __frame3[5]["arg1"]
                                  return __e6
                                end
                                __frame3[7] = __frame3[6][__frame3[5]["tag"]]
                                if __frame3[7] then
                                  __frame3[8] = __frame3[7]()
                                else
                                  idris["error"]("Impossible else branch")
                                end
                                __frame3[9] = __frame3[8]
                                __frame3[10] = {
                                  nil
                                }
                                __frame3[10]["0"] = function()
                                  local __e5 = __frame3[9]["arg2"]
                                  return __e5(nil)(ref)
                                end
                                __frame3[11] = __frame3[10][__frame3[9]["tag"]]
                                if __frame3[11] then
                                  __frame3[12] = __frame3[11]()
                                else
                                  idris["error"]("Impossible else branch")
                                end
                                return __frame3[12]
                              end)
                          end
                          __frame1[7] = __frame1[6][__frame1[5]["tag"]]
                          if __frame1[7] then
                            __frame1[8] = __frame1[7]()
                          else
                            idris["error"]("Impossible else branch")
                          end
                          return __frame1[8]
                        end)()
                    end
                end
            end
        end
    end
end
idris["Prelude.Types.minus"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil,
            nil,
            nil,
            nil,
            nil,
            nil,
            nil,
            nil,
            nil,
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg0
          __frame1[2] = {
            nil
          }
          __frame1[2]["0"] = function()
            return bigint:new("0")
          end
          __frame1[15] = __frame1[2][bigint.tostring(__frame1[1])]
          if __frame1[15] then
            __frame1[16] = __frame1[15]()
          else
            __frame1[3] = __arg1
            __frame1[4] = {
              nil
            }
            __frame1[4]["0"] = function()
              return __arg0
            end
            __frame1[13] = __frame1[4][bigint.tostring(__frame1[3])]
            if __frame1[13] then
              __frame1[14] = __frame1[13]()
            else
              __frame1[5] = __arg0
              __frame1[6] = {
                nil
              }
              __frame1[6]["0"] = function()
                return idris["error"]("Nat case not covered")
              end
              __frame1[11] = __frame1[6][bigint.tostring(__frame1[5])]
              if __frame1[11] then
                __frame1[12] = __frame1[11]()
              else
                local __e0 = __arg0 - bigint:new("1")
                __frame1[7] = __arg1
                __frame1[8] = {
                  nil
                }
                __frame1[8]["0"] = function()
                  return idris["error"]("Nat case not covered")
                end
                __frame1[9] = __frame1[8][bigint.tostring(__frame1[7])]
                if __frame1[9] then
                  __frame1[10] = __frame1[9]()
                else
                  local __e1 = __arg1 - bigint:new("1")
                  __frame1[10] = idris["Prelude.Types.minus"](__e0)(__e1)
                end
                __frame1[12] = __frame1[10]
              end
              __frame1[14] = __frame1[12]
            end
            __frame1[16] = __frame1[14]
          end
          return __frame1[16]
        end)()
    end
end
idris["Prelude.Types.maybe"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return (function()
                      local __frame1 = {
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame1[1] = __arg4
                      __frame1[2] = {
                        nil,
                        nil
                      }
                      __frame1[2]["0"] = function()
                        return __arg2()
                      end
                      __frame1[2]["1"] = function()
                        local __e2 = __frame1[1]["arg1"]
                        return __arg3()(__e2)
                      end
                      __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                      if __frame1[3] then
                        __frame1[4] = __frame1[3]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame1[4]
                    end)()
                end
            end
        end
    end
end
idris["Text.Parser.many"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil
              }
              __frame1[1] = {}
              __frame1[1]["tag"] = "0"
              return idris["Text.Parser.option"](nil)(nil)(0)(__frame1[1])(idris["Text.Parser.some"](nil)(nil)(__arg2))
            end)()
        end
    end
end
idris["Text.Parser.sepBy1"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return (function()
                          local __frame1 = {
                            nil,
                            nil,
                            nil
                          }
                          __frame1[1] = {}
                          __frame1[1]["tag"] = "0"
                          __frame1[1]["arg1"] = function(__eta0)
                            return function(__eta1)
                                local __frame3 = {
                                  nil
                                }
                                __frame3[1] = {}
                                __frame3[1]["tag"] = "1"
                                __frame3[1]["arg1"] = __eta0
                                __frame3[1]["arg2"] = __eta1
                                return __frame3[1]
                              end
                          end
                          __frame1[2] = {}
                          __frame1[2]["tag"] = "9"
                          __frame1[2]["arg1"] = 1
                          __frame1[2]["arg2"] = __arg3
                          __frame1[2]["arg3"] = __frame1[1]
                          __frame1[2]["arg4"] = function(f)
                            return idris["Text.Parser.Core.map_Functor__((Grammar $tok) $c)"](nil)(nil)(nil)(__arg3)(f)(__arg5)
                          end
                          __frame1[3] = {}
                          __frame1[3]["tag"] = "9"
                          __frame1[3]["arg1"] = idris["Prelude.Basics.||"](1)(function()
                            return __arg3
                          end)
                          __frame1[3]["arg2"] = 1
                          __frame1[3]["arg3"] = __frame1[2]
                          __frame1[3]["arg4"] = function(f)
                            local __frame2 = {
                              nil
                            }
                            __frame2[1] = {}
                            __frame2[1]["tag"] = "9"
                            __frame2[1]["arg1"] = 0
                            __frame2[1]["arg2"] = __arg3
                            __frame2[1]["arg3"] = idris["Text.Parser.Core.map_Functor__((Grammar $tok) $c)"](nil)(nil)(nil)(0)(function(__eta0)
                              return function(__eta1)
                                  return __eta1
                                end
                            end)(__arg4)
                            __frame2[1]["arg4"] = function(__f0)
                              return idris["Text.Parser.Core.map_Functor__((Grammar $tok) $c)"](nil)(nil)(nil)(__arg3)(__f0)(__arg5)
                            end
                            return idris["Text.Parser.Core.map_Functor__((Grammar $tok) $c)"](nil)(nil)(nil)(1)(f)(idris["Text.Parser.many"](nil)(nil)(__frame2[1]))
                          end
                          return __frame1[3]
                        end)()
                    end
                end
            end
        end
    end
end
idris["Text.Parser.sepBy"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return (function()
                          local __frame1 = {
                            nil
                          }
                          __frame1[1] = {}
                          __frame1[1]["tag"] = "0"
                          return idris["Text.Parser.option"](nil)(nil)(__arg3)(__frame1[1])(idris["Text.Parser.sepBy1"](nil)(nil)(nil)(__arg3)(__arg4)(__arg5))
                        end)()
                    end
                end
            end
        end
    end
end
idris["Prelude.Types.Strings.length"] = function(__arg0)
  return (function()
      return idris["Prelude.Types.fromInteger_Num__Nat"](bigint:new(utf8.len(__arg0)))
    end)()
end
idris["Prelude.Types.unpack"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      return idris["Prelude.Types.3950:4045:unpack'"](__arg0)(idris["Prelude.Num.-_Neg__Int"](bigint.tonumber(idris["Prelude.Types.Strings.length"](__arg0)))(1))(__arg0)(__frame1[1])
    end)()
end
idris["Prelude.Types.substr"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              return idris["Prelude.Types.case[3999]substr"](__arg2)(__arg1)(__arg0)(idris["Prelude.EqOrd.<_Ord__Integer"](__arg0)(idris["Prelude.Types.Strings.length"](__arg2)))
            end)()
        end
    end
end
idris["Utils.String.stripQuotes"] = function(__arg0)
  return (function()
      return idris["Prelude.Types.substr"](bigint:new("1") + bigint:new("0"))(idris["Prelude.Types.minus"](idris["Prelude.Types.Strings.length"](__arg0))(bigint:new("1") + bigint:new("1") + bigint:new("0")))(__arg0)
    end)()
end
idris["Prelude.Types.List.length"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil,
            nil
          }
          __frame1[2]["0"] = function()
            return bigint:new("0")
          end
          __frame1[2]["1"] = function()
            local __e3 = __frame1[1]["arg2"]
            return bigint:new("1") + idris["Prelude.Types.List.length"](nil)(__e3)
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Text.Lexer.Core.case[1449]tokenise,getCols"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return function(__arg9)
                                      return (function()
                                          local __frame1 = {
                                            nil,
                                            nil,
                                            nil,
                                            nil
                                          }
                                          __frame1[1] = __arg9
                                          __frame1[2] = {
                                            nil
                                          }
                                          __frame1[2]["0"] = function()
                                            local __frame2 = {
                                              nil,
                                              nil,
                                              nil,
                                              nil
                                            }
                                            local __e2 = __frame1[1]["arg1"]
                                            local __e3 = __frame1[1]["arg2"]
                                            __frame2[1] = __e3
                                            __frame2[2] = {
                                              nil
                                            }
                                            __frame2[2]["0"] = function()
                                              return __arg7 + idris["Prelude.Types.cast_Cast__Nat_Int"](idris["Prelude.Types.List.length"](nil)(__e2))
                                            end
                                            __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                                            if __frame2[3] then
                                              __frame2[4] = __frame2[3]()
                                            else
                                              __frame2[4] = idris["Prelude.Types.cast_Cast__Nat_Int"](idris["Prelude.Types.List.length"](nil)(__e2))
                                            end
                                            return __frame2[4]
                                          end
                                          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                                          if __frame1[3] then
                                            __frame1[4] = __frame1[3]()
                                          else
                                            idris["error"]("Impossible else branch")
                                          end
                                          return __frame1[4]
                                        end)()
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Text.Lexer.Core.2895:1424:getCols"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return (function()
                                      return idris["Text.Lexer.Core.case[1449]tokenise,getCols"](nil)(__arg1)(__arg2)(__arg3)(__arg4)(__arg5)(__arg6)(__arg8)(__arg7)(idris["Data.List.span"](nil)(function(__arg9)
                                          return idris["Prelude.EqOrd./=_Eq__Char"](__arg9)("\n")
                                        end)(idris["Data.List.reverse"](nil)(__arg7)))
                                    end)()
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Data.Nat.isSucc"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil
      }
      __frame1[2]["0"] = function()
        return 1
      end
      __frame1[3] = __frame1[2][bigint.tostring(__frame1[1])]
      if __frame1[3] then
        __frame1[4] = __frame1[3]()
      else
        __frame1[4] = 0
      end
      return __frame1[4]
    end)()
end
idris["Prelude.Types.isSpace"] = function(__arg0)
  return (function()
      return idris["Prelude.Basics.||"](idris["Prelude.EqOrd.==_Eq__Char"](__arg0)(" "))(function()
          return idris["Prelude.Basics.||"](idris["Prelude.EqOrd.==_Eq__Char"](__arg0)(utf8.char(idris.unpack({9})) --[[ \t--]]))(function()
              return idris["Prelude.Basics.||"](idris["Prelude.EqOrd.==_Eq__Char"](__arg0)("\r"))(function()
                  return idris["Prelude.Basics.||"](idris["Prelude.EqOrd.==_Eq__Char"](__arg0)("\n"))(function()
                      return idris["Prelude.Basics.||"](idris["Prelude.EqOrd.==_Eq__Char"](__arg0)(utf8.char(idris.unpack({12})) --[[ \f--]]))(function()
                          return idris["Prelude.Basics.||"](idris["Prelude.EqOrd.==_Eq__Char"](__arg0)(utf8.char(idris.unpack({11})) --[[ \v--]]))(function()
                              return idris["Prelude.EqOrd.==_Eq__Char"](__arg0)(utf8.char(idris.unpack({160})) --[[ \160--]])
                            end)
                        end)
                    end)
                end)
            end)
        end)
    end)()
end
idris["Data.Strings.case[1354]ltrim,ltrimChars"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg3
                  __frame1[2] = {
                    nil,
                    nil
                  }
                  __frame1[2][0] = function()
                    return idris["Data.Strings.2265:1344:ltrimChars"](__arg0)(__arg2)
                  end
                  __frame1[2][1] = function()
                    local __frame2 = {
                      nil
                    }
                    __frame2[1] = {}
                    __frame2[1]["tag"] = "1"
                    __frame2[1]["arg1"] = __arg1
                    __frame2[1]["arg2"] = __arg2
                    return __frame2[1]
                  end
                  __frame1[3] = __frame1[2][__frame1[1]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[4]
                end)()
            end
        end
    end
end
idris["Data.Strings.2265:1344:ltrimChars"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil,
            nil
          }
          __frame1[2]["0"] = function()
            local __frame2 = {
              nil
            }
            __frame2[1] = {}
            __frame2[1]["tag"] = "0"
            return __frame2[1]
          end
          __frame1[2]["1"] = function()
            local __e2 = __frame1[1]["arg1"]
            local __e3 = __frame1[1]["arg2"]
            return idris["Data.Strings.case[1354]ltrim,ltrimChars"](__arg0)(__e2)(__e3)(idris["Prelude.Types.isSpace"](__e2))
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Text.Lexer.space"] = (function()
  return idris["Text.Lexer.Core.pred"](function(__eta0)
      return idris["Prelude.Types.isSpace"](__eta0)
    end)
end)()
idris["Data.Strings.ltrim"] = function(__arg0)
  return (function()
      return idris["Prelude.Types.pack"](idris["Data.Strings.2265:1344:ltrimChars"](__arg0)(idris["Prelude.Types.unpack"](__arg0)))
    end)()
end
idris["Data.Strings.trim"] = function(__ext0)
  return (function()
      return idris["Data.Strings.ltrim"](idris["Prelude.Types.reverse"](idris["Data.Strings.ltrim"](idris["Prelude.Types.reverse"](__ext0))))
    end)()
end
idris["Data.Maybe.isJust"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil,
            nil
          }
          __frame1[2]["0"] = function()
            return 1
          end
          __frame1[2]["1"] = function()
            return 0
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Text.Lexer.Core.scan"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg1
                  __frame1[2] = {
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[2]["0"] = function()
                    local __frame2 = {
                      nil
                    }
                    __frame2[1] = {}
                    __frame2[1]["tag"] = "0"
                    __frame2[1]["arg1"] = __arg2
                    __frame2[1]["arg2"] = __arg3
                    return idris["Prelude.Types.pure_Applicative__Maybe"](nil)(__frame2[1])
                  end
                  __frame1[2]["1"] = function()
                    local __frame2 = {
                      nil
                    }
                    __frame2[1] = {}
                    __frame2[1]["tag"] = "0"
                    return __frame2[1]
                  end
                  __frame1[2]["2"] = function()
                    local __e2 = __frame1[1]["arg1"]
                    local __e3 = __frame1[1]["arg2"]
                    return idris["Text.Lexer.Core.case[1221]scan"](nil)(__e3)(__e2)(__arg3)(__arg2)(nil)(idris["Prelude.EqOrd.==_Eq__Bool"](idris["Data.Maybe.isJust"](nil)(idris["Text.Lexer.Core.scan"](nil)(__e3)(__arg2)(__arg3)))(__e2))
                  end
                  __frame1[2]["3"] = function()
                    local __frame2 = {
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    local __e4 = __frame1[1]["arg1"]
                    __frame2[1] = __arg3
                    __frame2[2] = {
                      nil,
                      nil
                    }
                    __frame2[2]["0"] = function()
                      local __frame3 = {
                        nil
                      }
                      __frame3[1] = {}
                      __frame3[1]["tag"] = "0"
                      return __frame3[1]
                    end
                    __frame2[2]["1"] = function()
                      local __e21 = __frame2[1]["arg1"]
                      local __e22 = __frame2[1]["arg2"]
                      return idris["Text.Lexer.Core.case[1270]scan"](__e4)(__e21)(__e22)(__arg2)(__e4(__e21))
                    end
                    __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                    if __frame2[3] then
                      __frame2[4] = __frame2[3]()
                    else
                      idris["error"]("Impossible else branch")
                    end
                    return __frame2[4]
                  end
                  __frame1[2]["4"] = function()
                    local __e6 = __frame1[1]["arg1"]
                    local __e7 = __frame1[1]["arg2"]
                    return idris["Prelude.Types.>>=_Monad__Maybe"](nil)(nil)(idris["Text.Lexer.Core.scan"](nil)(__e6)(__arg2)(__arg3))(function(___0)
                        local __frame3 = {
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        __frame3[1] = ___0
                        __frame3[2] = {
                          nil
                        }
                        __frame3[2]["0"] = function()
                          local __e2 = __frame3[1]["arg1"]
                          local __e3 = __frame3[1]["arg2"]
                          return idris["Text.Lexer.Core.scan"](nil)(__e7())(__e2)(__e3)
                        end
                        __frame3[3] = __frame3[2][__frame3[1]["tag"]]
                        if __frame3[3] then
                          __frame3[4] = __frame3[3]()
                        else
                          idris["error"]("Impossible else branch")
                        end
                        return __frame3[4]
                      end)
                  end
                  __frame1[2]["5"] = function()
                    local __e10 = __frame1[1]["arg1"]
                    local __e11 = __frame1[1]["arg2"]
                    return idris["Prelude.Types.>>=_Monad__Maybe"](nil)(nil)(idris["Text.Lexer.Core.scan"](nil)(__e10)(__arg2)(__arg3))(function(___0)
                        local __frame3 = {
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        __frame3[1] = ___0
                        __frame3[2] = {
                          nil
                        }
                        __frame3[2]["0"] = function()
                          local __e2 = __frame3[1]["arg1"]
                          local __e3 = __frame3[1]["arg2"]
                          return idris["Text.Lexer.Core.scan"](nil)(__e11)(__e2)(__e3)
                        end
                        __frame3[3] = __frame3[2][__frame3[1]["tag"]]
                        if __frame3[3] then
                          __frame3[4] = __frame3[3]()
                        else
                          idris["error"]("Impossible else branch")
                        end
                        return __frame3[4]
                      end)
                  end
                  __frame1[2]["6"] = function()
                    local __e13 = __frame1[1]["arg1"]
                    local __e14 = __frame1[1]["arg2"]
                    return idris["Prelude.Types.>>=_Monad__Maybe"](nil)(nil)(idris["Text.Lexer.Core.scan"](nil)(__e13)(__arg2)(__arg3))(function(___0)
                        local __frame3 = {
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        __frame3[1] = ___0
                        __frame3[2] = {
                          nil
                        }
                        __frame3[2]["0"] = function()
                          local __e2 = __frame3[1]["arg1"]
                          local __e3 = __frame3[1]["arg2"]
                          return idris["Text.Lexer.Core.scan"](nil)(__e14)(__e2)(__e3)
                        end
                        __frame3[3] = __frame3[2][__frame3[1]["tag"]]
                        if __frame3[3] then
                          __frame3[4] = __frame3[3]()
                        else
                          idris["error"]("Impossible else branch")
                        end
                        return __frame3[4]
                      end)
                  end
                  __frame1[2]["7"] = function()
                    local __e17 = __frame1[1]["arg1"]
                    local __e18 = __frame1[1]["arg2"]
                    return idris["Prelude.Types.maybe"](nil)(nil)(function()
                        return idris["Text.Lexer.Core.scan"](nil)(__e18)(__arg2)(__arg3)
                      end)(function()
                        return function(__eta0)
                            local __frame4 = {
                              nil
                            }
                            __frame4[1] = {}
                            __frame4[1]["tag"] = "1"
                            __frame4[1]["arg1"] = __eta0
                            return __frame4[1]
                          end
                      end)(idris["Text.Lexer.Core.scan"](nil)(__e17)(__arg2)(__arg3))
                  end
                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[4]
                end)()
            end
        end
    end
end
idris["Foreign.isBufferModified"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil
          }
          __frame1[2]["0"] = function()
            local __e2 = __frame1[1]["arg2"]
            return __e2(nil)(function(__eta0)
                return idris["Foreign.prim__isBufferModified"](__eta0)
              end)
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Text.Lexer.is"] = function(__arg0)
  return (function()
      return idris["Text.Lexer.Core.pred"](function(__arg1)
          return idris["Prelude.EqOrd.==_Eq__Char"](__arg1)(__arg0)
        end)
    end)()
end
idris["Text.Bounded.irrelevantBounds"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil
          }
          __frame1[1] = {}
          __frame1[1]["tag"] = "0"
          __frame1[1]["arg1"] = __arg1
          __frame1[1]["arg2"] = 0
          __frame1[1]["arg3"] = idris["Prelude.Num.negate_Neg__Int"](bigint.tonumber(bigint:new("1")))
          __frame1[1]["arg4"] = idris["Prelude.Num.negate_Neg__Int"](bigint.tonumber(bigint:new("1")))
          __frame1[1]["arg5"] = idris["Prelude.Num.negate_Neg__Int"](bigint.tonumber(bigint:new("1")))
          __frame1[1]["arg6"] = idris["Prelude.Num.negate_Neg__Int"](bigint.tonumber(bigint:new("1")))
          return __frame1[1]
        end)()
    end
end
idris["Parser.Rule.Source.intLit"] = (function()
  local __frame1 = {
    nil
  }
  __frame1[1] = {}
  __frame1[1]["tag"] = "1"
  __frame1[1]["arg1"] = "Expected integer literal"
  __frame1[1]["arg2"] = function(x)
    local __frame2 = {
      nil,
      nil,
      nil,
      nil
    }
    __frame2[1] = x
    __frame2[2] = {
      nil
    }
    __frame2[2]["0"] = function()
      local __e1 = __frame2[1]["arg1"]
      return __e1
    end
    __frame2[3] = __frame2[2][__frame2[1]["tag"]]
    if __frame2[3] then
      __frame2[4] = __frame2[3]()
    else
      idris["error"]("Impossible else branch")
    end
    return idris["Parser.Rule.Source.case[2565]intLit"](x)(__frame2[4])
  end
  return __frame1[1]
end)()
idris["Builtin.idris_crash"] = function(__arg0)
  return function(__ext0)
      return (function()
          return (function()
              idris["print"](("ERROR: ") .. (__ext0))
              idris["os.exit"](1)
            end)()
        end)()
    end
end
idris["Prelude.Num.case[440]div"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg2
              __frame1[2] = {
                nil
              }
              __frame1[2][1] = function()
                return idris.div(__arg1, __arg0)
              end
              __frame1[3] = __frame1[2][__frame1[1]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                __frame1[4] = idris["Builtin.idris_crash"](nil)("Unhandled input for Prelude.Num.case block in div at Prelude/Num.idr:113:3--115:40")
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["Prelude.Num.div_Integral__Int"] = function(__arg0)
  return function(__arg1)
      return (function()
          return idris["Prelude.Num.case[440]div"](__arg1)(__arg0)(idris["Prelude.EqOrd.==_Eq__Int"](__arg1)(bigint.tonumber(bigint:new("0"))))
        end)()
    end
end
idris["Data.Primitives.Views.IntV.case[429]divides"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg2
              __frame1[2] = {
                nil,
                nil
              }
              __frame1[2][0] = function()
                return idris["Prelude.Num.negate_Neg__Int"](idris["Prelude.Num.div_Integral__Int"](__arg1)(idris["Prelude.Num.abs_Abs__Int"](__arg0)))
              end
              __frame1[2][1] = function()
                return idris["Prelude.Num.div_Integral__Int"](__arg1)(__arg0)
              end
              __frame1[3] = __frame1[2][__frame1[1]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["Parser.Rule.Source.identPart"] = (function()
  local __frame1 = {
    nil
  }
  __frame1[1] = {}
  __frame1[1]["tag"] = "1"
  __frame1[1]["arg1"] = "Expected name"
  __frame1[1]["arg2"] = function(x)
    local __frame2 = {
      nil,
      nil,
      nil,
      nil
    }
    __frame2[1] = x
    __frame2[2] = {
      nil
    }
    __frame2[2]["0"] = function()
      local __e1 = __frame2[1]["arg1"]
      return __e1
    end
    __frame2[3] = __frame2[2][__frame2[1]["tag"]]
    if __frame2[3] then
      __frame2[4] = __frame2[3]()
    else
      idris["error"]("Impossible else branch")
    end
    return idris["Parser.Rule.Source.case[2907]identPart"](x)(__frame2[4])
  end
  return __frame1[1]
end)()
idris["Parser.Rule.Source.unqualifiedName"] = (function()
  return idris["Parser.Rule.Source.identPart"]
end)()
idris["Utils.Hex.hexDigit"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[2][0] = function()
        return "0"
      end
      __frame1[2][1] = function()
        return "1"
      end
      __frame1[2][2] = function()
        return "2"
      end
      __frame1[2][3] = function()
        return "3"
      end
      __frame1[2][4] = function()
        return "4"
      end
      __frame1[2][5] = function()
        return "5"
      end
      __frame1[2][6] = function()
        return "6"
      end
      __frame1[2][7] = function()
        return "7"
      end
      __frame1[2][8] = function()
        return "8"
      end
      __frame1[2][9] = function()
        return "9"
      end
      __frame1[2][10] = function()
        return "a"
      end
      __frame1[2][11] = function()
        return "b"
      end
      __frame1[2][12] = function()
        return "c"
      end
      __frame1[2][13] = function()
        return "d"
      end
      __frame1[2][14] = function()
        return "e"
      end
      __frame1[2][15] = function()
        return "f"
      end
      __frame1[3] = __frame1[2][__frame1[1]]
      if __frame1[3] then
        __frame1[4] = __frame1[3]()
      else
        __frame1[4] = "X"
      end
      return __frame1[4]
    end)()
end
idris["Parser.Support.hex"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[2]["0"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 0
        return __frame2[1]
      end
      __frame1[2]["1"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 1
        return __frame2[1]
      end
      __frame1[2]["2"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 2
        return __frame2[1]
      end
      __frame1[2]["3"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 3
        return __frame2[1]
      end
      __frame1[2]["4"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 4
        return __frame2[1]
      end
      __frame1[2]["5"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 5
        return __frame2[1]
      end
      __frame1[2]["6"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 6
        return __frame2[1]
      end
      __frame1[2]["7"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 7
        return __frame2[1]
      end
      __frame1[2]["8"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 8
        return __frame2[1]
      end
      __frame1[2]["9"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 9
        return __frame2[1]
      end
      __frame1[2]["a"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 10
        return __frame2[1]
      end
      __frame1[2]["b"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 11
        return __frame2[1]
      end
      __frame1[2]["c"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 12
        return __frame2[1]
      end
      __frame1[2]["d"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 13
        return __frame2[1]
      end
      __frame1[2]["e"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 14
        return __frame2[1]
      end
      __frame1[2]["f"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 15
        return __frame2[1]
      end
      __frame1[4] = __frame1[2][__frame1[1]]
      if __frame1[4] then
        __frame1[5] = __frame1[4]()
      else
        __frame1[3] = {}
        __frame1[3]["tag"] = "0"
        __frame1[5] = __frame1[3]
      end
      return __frame1[5]
    end)()
end
idris["Foreign.getSelection"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil
          }
          __frame1[2]["0"] = function()
            local __e2 = __frame1[1]["arg2"]
            return __e2(nil)(function(__eta0)
                return idris["Foreign.prim__getSelection"](__eta0)
              end)
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Commands.getResult"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil
      }
      __frame1[2]["0"] = function()
        local __frame2 = {
          nil,
          nil,
          nil,
          nil,
          nil
        }
        local __e0 = __frame1[1]["arg1"]
        __frame2[1] = __e0
        __frame2[2] = {
          nil
        }
        __frame2[2]["1"] = function()
          local __frame3 = {
            nil,
            nil,
            nil,
            nil,
            nil
          }
          local __e2 = __frame2[1]["arg1"]
          local __e3 = __frame2[1]["arg2"]
          __frame3[1] = __e2
          __frame3[2] = {
            nil
          }
          __frame3[2]["4"] = function()
            local __frame4 = {
              nil,
              nil,
              nil,
              nil,
              nil
            }
            local __e4 = __frame3[1]["arg1"]
            __frame4[1] = __e4
            __frame4[2] = {
              nil,
              nil,
              nil,
              nil,
              nil
            }
            __frame4[2]["return"] = function()
              local __frame5 = {
                nil,
                nil,
                nil,
                nil,
                nil
              }
              __frame5[1] = __e3
              __frame5[2] = {
                nil
              }
              __frame5[2]["1"] = function()
                local __frame6 = {
                  nil,
                  nil,
                  nil,
                  nil,
                  nil
                }
                local __e6 = __frame5[1]["arg1"]
                local __e7 = __frame5[1]["arg2"]
                __frame6[1] = __e6
                __frame6[2] = {
                  nil
                }
                __frame6[2]["0"] = function()
                  local __frame7 = {
                    nil,
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  local __e8 = __frame6[1]["arg1"]
                  __frame7[1] = __e8
                  __frame7[2] = {
                    nil
                  }
                  __frame7[2]["1"] = function()
                    local __frame8 = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    local __e10 = __frame7[1]["arg1"]
                    local __e11 = __frame7[1]["arg2"]
                    __frame8[1] = __e10
                    __frame8[2] = {
                      nil
                    }
                    __frame8[2]["4"] = function()
                      local __frame9 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      local __e12 = __frame8[1]["arg1"]
                      __frame9[1] = __e12
                      __frame9[2] = {
                        nil,
                        nil,
                        nil
                      }
                      __frame9[2]["ok"] = function()
                        local __frame10 = {
                          nil,
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        __frame10[1] = __e7
                        __frame10[2] = {
                          nil
                        }
                        __frame10[2]["1"] = function()
                          local __frame11 = {
                            nil,
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          local __e14 = __frame10[1]["arg1"]
                          local __e15 = __frame10[1]["arg2"]
                          __frame11[1] = __e14
                          __frame11[2] = {
                            nil
                          }
                          __frame11[2]["3"] = function()
                            local __frame12 = {
                              nil,
                              nil,
                              nil,
                              nil,
                              nil
                            }
                            local __e16 = __frame11[1]["arg1"]
                            __frame12[1] = __e15
                            __frame12[2] = {
                              nil
                            }
                            __frame12[2]["0"] = function()
                              local __frame13 = {
                                nil,
                                nil,
                                nil
                              }
                              __frame13[1] = {}
                              __frame13[1]["tag"] = "0"
                              __frame13[1]["arg1"] = __e11
                              __frame13[2] = {}
                              __frame13[2]["tag"] = "0"
                              __frame13[2]["arg1"] = idris["Prelude.Types.cast_Cast__Integer_Int"](__e16)
                              __frame13[2]["arg2"] = __frame13[1]
                              __frame13[3] = {}
                              __frame13[3]["tag"] = "1"
                              __frame13[3]["arg1"] = __frame13[2]
                              return __frame13[3]
                            end
                            __frame12[4] = __frame12[2][__frame12[1]["tag"]]
                            if __frame12[4] then
                              __frame12[5] = __frame12[4]()
                            else
                              __frame12[3] = {}
                              __frame12[3]["tag"] = "0"
                              __frame12[5] = __frame12[3]
                            end
                            return __frame12[5]
                          end
                          __frame11[4] = __frame11[2][__frame11[1]["tag"]]
                          if __frame11[4] then
                            __frame11[5] = __frame11[4]()
                          else
                            __frame11[3] = {}
                            __frame11[3]["tag"] = "0"
                            __frame11[5] = __frame11[3]
                          end
                          return __frame11[5]
                        end
                        __frame10[4] = __frame10[2][__frame10[1]["tag"]]
                        if __frame10[4] then
                          __frame10[5] = __frame10[4]()
                        else
                          __frame10[3] = {}
                          __frame10[3]["tag"] = "0"
                          __frame10[5] = __frame10[3]
                        end
                        return __frame10[5]
                      end
                      __frame9[2]["warning"] = function()
                        local __frame10 = {
                          nil,
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        __frame10[1] = __e7
                        __frame10[2] = {
                          nil
                        }
                        __frame10[2]["1"] = function()
                          local __frame11 = {
                            nil,
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          local __e19 = __frame10[1]["arg1"]
                          local __e20 = __frame10[1]["arg2"]
                          __frame11[1] = __e19
                          __frame11[2] = {
                            nil
                          }
                          __frame11[2]["3"] = function()
                            local __frame12 = {
                              nil,
                              nil,
                              nil,
                              nil,
                              nil
                            }
                            local __e21 = __frame11[1]["arg1"]
                            __frame12[1] = __e20
                            __frame12[2] = {
                              nil
                            }
                            __frame12[2]["0"] = function()
                              local __frame13 = {
                                nil,
                                nil,
                                nil
                              }
                              __frame13[1] = {}
                              __frame13[1]["tag"] = "0"
                              __frame13[1]["arg1"] = __e11
                              __frame13[2] = {}
                              __frame13[2]["tag"] = "1"
                              __frame13[2]["arg1"] = idris["Prelude.Types.cast_Cast__Integer_Int"](__e21)
                              __frame13[2]["arg2"] = __frame13[1]
                              __frame13[3] = {}
                              __frame13[3]["tag"] = "1"
                              __frame13[3]["arg1"] = __frame13[2]
                              return __frame13[3]
                            end
                            __frame12[4] = __frame12[2][__frame12[1]["tag"]]
                            if __frame12[4] then
                              __frame12[5] = __frame12[4]()
                            else
                              __frame12[3] = {}
                              __frame12[3]["tag"] = "0"
                              __frame12[5] = __frame12[3]
                            end
                            return __frame12[5]
                          end
                          __frame11[4] = __frame11[2][__frame11[1]["tag"]]
                          if __frame11[4] then
                            __frame11[5] = __frame11[4]()
                          else
                            __frame11[3] = {}
                            __frame11[3]["tag"] = "0"
                            __frame11[5] = __frame11[3]
                          end
                          return __frame11[5]
                        end
                        __frame10[4] = __frame10[2][__frame10[1]["tag"]]
                        if __frame10[4] then
                          __frame10[5] = __frame10[4]()
                        else
                          __frame10[3] = {}
                          __frame10[3]["tag"] = "0"
                          __frame10[5] = __frame10[3]
                        end
                        return __frame10[5]
                      end
                      __frame9[2]["error"] = function()
                        local __frame10 = {
                          nil,
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        __frame10[1] = __e7
                        __frame10[2] = {
                          nil
                        }
                        __frame10[2]["1"] = function()
                          local __frame11 = {
                            nil,
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          local __e24 = __frame10[1]["arg1"]
                          local __e25 = __frame10[1]["arg2"]
                          __frame11[1] = __e24
                          __frame11[2] = {
                            nil
                          }
                          __frame11[2]["3"] = function()
                            local __frame12 = {
                              nil,
                              nil,
                              nil,
                              nil,
                              nil
                            }
                            local __e26 = __frame11[1]["arg1"]
                            __frame12[1] = __e25
                            __frame12[2] = {
                              nil
                            }
                            __frame12[2]["0"] = function()
                              local __frame13 = {
                                nil,
                                nil,
                                nil
                              }
                              __frame13[1] = {}
                              __frame13[1]["tag"] = "0"
                              __frame13[1]["arg1"] = __e11
                              __frame13[2] = {}
                              __frame13[2]["tag"] = "2"
                              __frame13[2]["arg1"] = idris["Prelude.Types.cast_Cast__Integer_Int"](__e26)
                              __frame13[2]["arg2"] = __frame13[1]
                              __frame13[3] = {}
                              __frame13[3]["tag"] = "1"
                              __frame13[3]["arg1"] = __frame13[2]
                              return __frame13[3]
                            end
                            __frame12[4] = __frame12[2][__frame12[1]["tag"]]
                            if __frame12[4] then
                              __frame12[5] = __frame12[4]()
                            else
                              __frame12[3] = {}
                              __frame12[3]["tag"] = "0"
                              __frame12[5] = __frame12[3]
                            end
                            return __frame12[5]
                          end
                          __frame11[4] = __frame11[2][__frame11[1]["tag"]]
                          if __frame11[4] then
                            __frame11[5] = __frame11[4]()
                          else
                            __frame11[3] = {}
                            __frame11[3]["tag"] = "0"
                            __frame11[5] = __frame11[3]
                          end
                          return __frame11[5]
                        end
                        __frame10[4] = __frame10[2][__frame10[1]["tag"]]
                        if __frame10[4] then
                          __frame10[5] = __frame10[4]()
                        else
                          __frame10[3] = {}
                          __frame10[3]["tag"] = "0"
                          __frame10[5] = __frame10[3]
                        end
                        return __frame10[5]
                      end
                      __frame9[4] = __frame9[2][__frame9[1]]
                      if __frame9[4] then
                        __frame9[5] = __frame9[4]()
                      else
                        __frame9[3] = {}
                        __frame9[3]["tag"] = "0"
                        __frame9[5] = __frame9[3]
                      end
                      return __frame9[5]
                    end
                    __frame8[4] = __frame8[2][__frame8[1]["tag"]]
                    if __frame8[4] then
                      __frame8[5] = __frame8[4]()
                    else
                      __frame8[3] = {}
                      __frame8[3]["tag"] = "0"
                      __frame8[5] = __frame8[3]
                    end
                    return __frame8[5]
                  end
                  __frame7[4] = __frame7[2][__frame7[1]["tag"]]
                  if __frame7[4] then
                    __frame7[5] = __frame7[4]()
                  else
                    __frame7[3] = {}
                    __frame7[3]["tag"] = "0"
                    __frame7[5] = __frame7[3]
                  end
                  return __frame7[5]
                end
                __frame6[4] = __frame6[2][__frame6[1]["tag"]]
                if __frame6[4] then
                  __frame6[5] = __frame6[4]()
                else
                  __frame6[3] = {}
                  __frame6[3]["tag"] = "0"
                  __frame6[5] = __frame6[3]
                end
                return __frame6[5]
              end
              __frame5[4] = __frame5[2][__frame5[1]["tag"]]
              if __frame5[4] then
                __frame5[5] = __frame5[4]()
              else
                __frame5[3] = {}
                __frame5[3]["tag"] = "0"
                __frame5[5] = __frame5[3]
              end
              return __frame5[5]
            end
            __frame4[2]["warning"] = function()
              local __frame5 = {
                nil,
                nil,
                nil,
                nil,
                nil
              }
              __frame5[1] = __e3
              __frame5[2] = {
                nil
              }
              __frame5[2]["1"] = function()
                local __frame6 = {
                  nil,
                  nil,
                  nil,
                  nil,
                  nil
                }
                local __e29 = __frame5[1]["arg1"]
                local __e30 = __frame5[1]["arg2"]
                __frame6[1] = __e30
                __frame6[2] = {
                  nil
                }
                __frame6[2]["1"] = function()
                  local __frame7 = {
                    nil,
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  local __e32 = __frame6[1]["arg1"]
                  local __e33 = __frame6[1]["arg2"]
                  __frame7[1] = __e32
                  __frame7[2] = {
                    nil
                  }
                  __frame7[2]["3"] = function()
                    local __frame8 = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    local __e34 = __frame7[1]["arg1"]
                    __frame8[1] = __e33
                    __frame8[2] = {
                      nil
                    }
                    __frame8[2]["0"] = function()
                      local __frame9 = {
                        nil,
                        nil
                      }
                      __frame9[1] = {}
                      __frame9[1]["tag"] = "1"
                      __frame9[1]["arg1"] = idris["Prelude.Types.cast_Cast__Integer_Int"](__e34)
                      __frame9[1]["arg2"] = __e29
                      __frame9[2] = {}
                      __frame9[2]["tag"] = "1"
                      __frame9[2]["arg1"] = __frame9[1]
                      return __frame9[2]
                    end
                    __frame8[4] = __frame8[2][__frame8[1]["tag"]]
                    if __frame8[4] then
                      __frame8[5] = __frame8[4]()
                    else
                      __frame8[3] = {}
                      __frame8[3]["tag"] = "0"
                      __frame8[5] = __frame8[3]
                    end
                    return __frame8[5]
                  end
                  __frame7[4] = __frame7[2][__frame7[1]["tag"]]
                  if __frame7[4] then
                    __frame7[5] = __frame7[4]()
                  else
                    __frame7[3] = {}
                    __frame7[3]["tag"] = "0"
                    __frame7[5] = __frame7[3]
                  end
                  return __frame7[5]
                end
                __frame6[4] = __frame6[2][__frame6[1]["tag"]]
                if __frame6[4] then
                  __frame6[5] = __frame6[4]()
                else
                  __frame6[3] = {}
                  __frame6[3]["tag"] = "0"
                  __frame6[5] = __frame6[3]
                end
                return __frame6[5]
              end
              __frame5[4] = __frame5[2][__frame5[1]["tag"]]
              if __frame5[4] then
                __frame5[5] = __frame5[4]()
              else
                __frame5[3] = {}
                __frame5[3]["tag"] = "0"
                __frame5[5] = __frame5[3]
              end
              return __frame5[5]
            end
            __frame4[2]["write-string"] = function()
              local __frame5 = {
                nil,
                nil,
                nil,
                nil,
                nil
              }
              __frame5[1] = __e3
              __frame5[2] = {
                nil
              }
              __frame5[2]["1"] = function()
                local __frame6 = {
                  nil,
                  nil,
                  nil,
                  nil,
                  nil
                }
                local __e37 = __frame5[1]["arg1"]
                local __e38 = __frame5[1]["arg2"]
                __frame6[1] = __e37
                __frame6[2] = {
                  nil
                }
                __frame6[2]["1"] = function()
                  local __frame7 = {
                    nil,
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  local __e39 = __frame6[1]["arg1"]
                  __frame7[1] = __e38
                  __frame7[2] = {
                    nil
                  }
                  __frame7[2]["1"] = function()
                    local __frame8 = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    local __e41 = __frame7[1]["arg1"]
                    local __e42 = __frame7[1]["arg2"]
                    __frame8[1] = __e41
                    __frame8[2] = {
                      nil
                    }
                    __frame8[2]["3"] = function()
                      local __frame9 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      local __e43 = __frame8[1]["arg1"]
                      __frame9[1] = __e42
                      __frame9[2] = {
                        nil
                      }
                      __frame9[2]["0"] = function()
                        local __frame10 = {
                          nil,
                          nil
                        }
                        __frame10[1] = {}
                        __frame10[1]["tag"] = "3"
                        __frame10[1]["arg1"] = idris["Prelude.Types.cast_Cast__Integer_Int"](__e43)
                        __frame10[1]["arg2"] = __e39
                        __frame10[2] = {}
                        __frame10[2]["tag"] = "1"
                        __frame10[2]["arg1"] = __frame10[1]
                        return __frame10[2]
                      end
                      __frame9[4] = __frame9[2][__frame9[1]["tag"]]
                      if __frame9[4] then
                        __frame9[5] = __frame9[4]()
                      else
                        __frame9[3] = {}
                        __frame9[3]["tag"] = "0"
                        __frame9[5] = __frame9[3]
                      end
                      return __frame9[5]
                    end
                    __frame8[4] = __frame8[2][__frame8[1]["tag"]]
                    if __frame8[4] then
                      __frame8[5] = __frame8[4]()
                    else
                      __frame8[3] = {}
                      __frame8[3]["tag"] = "0"
                      __frame8[5] = __frame8[3]
                    end
                    return __frame8[5]
                  end
                  __frame7[4] = __frame7[2][__frame7[1]["tag"]]
                  if __frame7[4] then
                    __frame7[5] = __frame7[4]()
                  else
                    __frame7[3] = {}
                    __frame7[3]["tag"] = "0"
                    __frame7[5] = __frame7[3]
                  end
                  return __frame7[5]
                end
                __frame6[4] = __frame6[2][__frame6[1]["tag"]]
                if __frame6[4] then
                  __frame6[5] = __frame6[4]()
                else
                  __frame6[3] = {}
                  __frame6[3]["tag"] = "0"
                  __frame6[5] = __frame6[3]
                end
                return __frame6[5]
              end
              __frame5[4] = __frame5[2][__frame5[1]["tag"]]
              if __frame5[4] then
                __frame5[5] = __frame5[4]()
              else
                __frame5[3] = {}
                __frame5[3]["tag"] = "0"
                __frame5[5] = __frame5[3]
              end
              return __frame5[5]
            end
            __frame4[2]["output"] = function()
              local __frame5 = {
                nil,
                nil,
                nil,
                nil,
                nil
              }
              __frame5[1] = __e3
              __frame5[2] = {
                nil
              }
              __frame5[2]["1"] = function()
                local __frame6 = {
                  nil,
                  nil,
                  nil,
                  nil,
                  nil
                }
                local __e46 = __frame5[1]["arg1"]
                local __e47 = __frame5[1]["arg2"]
                __frame6[1] = __e47
                __frame6[2] = {
                  nil
                }
                __frame6[2]["1"] = function()
                  local __frame7 = {
                    nil,
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  local __e49 = __frame6[1]["arg1"]
                  local __e50 = __frame6[1]["arg2"]
                  __frame7[1] = __e49
                  __frame7[2] = {
                    nil
                  }
                  __frame7[2]["3"] = function()
                    local __frame8 = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    local __e51 = __frame7[1]["arg1"]
                    __frame8[1] = __e50
                    __frame8[2] = {
                      nil
                    }
                    __frame8[2]["0"] = function()
                      local __frame9 = {
                        nil,
                        nil
                      }
                      __frame9[1] = {}
                      __frame9[1]["tag"] = "4"
                      __frame9[1]["arg1"] = idris["Prelude.Types.cast_Cast__Integer_Int"](__e51)
                      __frame9[1]["arg2"] = __e46
                      __frame9[2] = {}
                      __frame9[2]["tag"] = "1"
                      __frame9[2]["arg1"] = __frame9[1]
                      return __frame9[2]
                    end
                    __frame8[4] = __frame8[2][__frame8[1]["tag"]]
                    if __frame8[4] then
                      __frame8[5] = __frame8[4]()
                    else
                      __frame8[3] = {}
                      __frame8[3]["tag"] = "0"
                      __frame8[5] = __frame8[3]
                    end
                    return __frame8[5]
                  end
                  __frame7[4] = __frame7[2][__frame7[1]["tag"]]
                  if __frame7[4] then
                    __frame7[5] = __frame7[4]()
                  else
                    __frame7[3] = {}
                    __frame7[3]["tag"] = "0"
                    __frame7[5] = __frame7[3]
                  end
                  return __frame7[5]
                end
                __frame6[4] = __frame6[2][__frame6[1]["tag"]]
                if __frame6[4] then
                  __frame6[5] = __frame6[4]()
                else
                  __frame6[3] = {}
                  __frame6[3]["tag"] = "0"
                  __frame6[5] = __frame6[3]
                end
                return __frame6[5]
              end
              __frame5[4] = __frame5[2][__frame5[1]["tag"]]
              if __frame5[4] then
                __frame5[5] = __frame5[4]()
              else
                __frame5[3] = {}
                __frame5[3]["tag"] = "0"
                __frame5[5] = __frame5[3]
              end
              return __frame5[5]
            end
            __frame4[2]["protocol-version"] = function()
              local __frame5 = {
                nil,
                nil,
                nil
              }
              __frame5[1] = {}
              __frame5[1]["tag"] = "0"
              __frame5[1]["arg1"] = __e3
              __frame5[2] = {}
              __frame5[2]["tag"] = "5"
              __frame5[2]["arg1"] = __frame5[1]
              __frame5[3] = {}
              __frame5[3]["tag"] = "1"
              __frame5[3]["arg1"] = __frame5[2]
              return __frame5[3]
            end
            __frame4[4] = __frame4[2][__frame4[1]]
            if __frame4[4] then
              __frame4[5] = __frame4[4]()
            else
              __frame4[3] = {}
              __frame4[3]["tag"] = "0"
              __frame4[5] = __frame4[3]
            end
            return __frame4[5]
          end
          __frame3[4] = __frame3[2][__frame3[1]["tag"]]
          if __frame3[4] then
            __frame3[5] = __frame3[4]()
          else
            __frame3[3] = {}
            __frame3[3]["tag"] = "0"
            __frame3[5] = __frame3[3]
          end
          return __frame3[5]
        end
        __frame2[4] = __frame2[2][__frame2[1]["tag"]]
        if __frame2[4] then
          __frame2[5] = __frame2[4]()
        else
          __frame2[3] = {}
          __frame2[3]["tag"] = "0"
          __frame2[5] = __frame2[3]
        end
        return __frame2[5]
      end
      __frame1[4] = __frame1[2][__frame1[1]["tag"]]
      if __frame1[4] then
        __frame1[5] = __frame1[4]()
      else
        __frame1[3] = {}
        __frame1[3]["tag"] = "0"
        __frame1[5] = __frame1[3]
      end
      return __frame1[5]
    end)()
end
idris["Parser.Support.getEsc"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[2]["NUL"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = "\0"
        return __frame2[1]
      end
      __frame1[2]["SOH"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = utf8.char(idris.unpack({1})) --[[ \SOH--]]
        return __frame2[1]
      end
      __frame1[2]["STX"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = utf8.char(idris.unpack({2})) --[[ \STX--]]
        return __frame2[1]
      end
      __frame1[2]["ETX"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = utf8.char(idris.unpack({3})) --[[ \ETX--]]
        return __frame2[1]
      end
      __frame1[2]["EOT"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = utf8.char(idris.unpack({4})) --[[ \EOT--]]
        return __frame2[1]
      end
      __frame1[2]["ENQ"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = utf8.char(idris.unpack({5})) --[[ \ENQ--]]
        return __frame2[1]
      end
      __frame1[2]["ACK"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = utf8.char(idris.unpack({6})) --[[ \ACK--]]
        return __frame2[1]
      end
      __frame1[2]["BEL"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = utf8.char(idris.unpack({7})) --[[ \a--]]
        return __frame2[1]
      end
      __frame1[2]["BS"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = utf8.char(idris.unpack({8})) --[[ \b--]]
        return __frame2[1]
      end
      __frame1[2]["HT"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = utf8.char(idris.unpack({9})) --[[ \t--]]
        return __frame2[1]
      end
      __frame1[2]["LF"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = "\n"
        return __frame2[1]
      end
      __frame1[2]["VT"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = utf8.char(idris.unpack({11})) --[[ \v--]]
        return __frame2[1]
      end
      __frame1[2]["FF"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = utf8.char(idris.unpack({12})) --[[ \f--]]
        return __frame2[1]
      end
      __frame1[2]["CR"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = "\r"
        return __frame2[1]
      end
      __frame1[2]["SO"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = utf8.char(idris.unpack({14})) --[[ \SO--]]
        return __frame2[1]
      end
      __frame1[2]["SI"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = utf8.char(idris.unpack({15})) --[[ \SI--]]
        return __frame2[1]
      end
      __frame1[2]["DLE"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = utf8.char(idris.unpack({16})) --[[ \DLE--]]
        return __frame2[1]
      end
      __frame1[2]["DC1"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = utf8.char(idris.unpack({17})) --[[ \DC1--]]
        return __frame2[1]
      end
      __frame1[2]["DC2"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = utf8.char(idris.unpack({18})) --[[ \DC2--]]
        return __frame2[1]
      end
      __frame1[2]["DC3"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = utf8.char(idris.unpack({19})) --[[ \DC3--]]
        return __frame2[1]
      end
      __frame1[2]["DC4"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = utf8.char(idris.unpack({20})) --[[ \DC4--]]
        return __frame2[1]
      end
      __frame1[2]["NAK"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = utf8.char(idris.unpack({21})) --[[ \NAK--]]
        return __frame2[1]
      end
      __frame1[2]["SYN"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = utf8.char(idris.unpack({22})) --[[ \SYN--]]
        return __frame2[1]
      end
      __frame1[2]["ETB"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = utf8.char(idris.unpack({23})) --[[ \ETB--]]
        return __frame2[1]
      end
      __frame1[2]["CAN"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = utf8.char(idris.unpack({24})) --[[ \CAN--]]
        return __frame2[1]
      end
      __frame1[2]["EM"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = utf8.char(idris.unpack({25})) --[[ \EM--]]
        return __frame2[1]
      end
      __frame1[2]["SUB"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = utf8.char(idris.unpack({26})) --[[ \SUB--]]
        return __frame2[1]
      end
      __frame1[2]["ESC"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = utf8.char(idris.unpack({27})) --[[ \ESC--]]
        return __frame2[1]
      end
      __frame1[2]["FS"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = utf8.char(idris.unpack({28})) --[[ \FS--]]
        return __frame2[1]
      end
      __frame1[2]["GS"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = utf8.char(idris.unpack({29})) --[[ \GS--]]
        return __frame2[1]
      end
      __frame1[2]["RS"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = utf8.char(idris.unpack({30})) --[[ \RS--]]
        return __frame2[1]
      end
      __frame1[2]["US"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = utf8.char(idris.unpack({31})) --[[ \US--]]
        return __frame2[1]
      end
      __frame1[2]["SP"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = " "
        return __frame2[1]
      end
      __frame1[2]["DEL"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = utf8.char(idris.unpack({127})) --[[ \DEL--]]
        return __frame2[1]
      end
      __frame1[4] = __frame1[2][__frame1[1]]
      if __frame1[4] then
        __frame1[5] = __frame1[4]()
      else
        __frame1[3] = {}
        __frame1[3]["tag"] = "0"
        __frame1[5] = __frame1[3]
      end
      return __frame1[5]
    end)()
end
idris["Builtin.fst"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg2
              __frame1[2] = {
                nil
              }
              __frame1[2]["0"] = function()
                local __e2 = __frame1[1]["arg1"]
                return __e2
              end
              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["Prelude.Interfaces.sequence"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = idris["Builtin.fst"](nil)(nil)(__arg3)
                  __frame1[2] = {
                    nil
                  }
                  __frame1[2]["0"] = function()
                    local __e3 = __frame1[1]["arg3"]
                    return function(__arg4)
                        return __e3(nil)(nil)(nil)(idris["Builtin.snd"](nil)(nil)(__arg3))(function(__eta0)
                            return __eta0
                          end)(__arg4)
                      end
                  end
                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[4]
                end)()
            end
        end
    end
end
idris["Prelude.IO.printLn"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = idris["Builtin.snd"](nil)(nil)(__arg2)
                  __frame1[2] = {
                    nil
                  }
                  __frame1[2]["0"] = function()
                    local __e1 = __frame1[1]["arg1"]
                    return __e1(__arg3)
                  end
                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return idris["Prelude.IO.putStrLn"](nil)(idris["Builtin.fst"](nil)(nil)(__arg2))(__frame1[4])
                end)()
            end
        end
    end
end
idris["Text.Parser.match"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil
              }
              __frame1[1] = {}
              __frame1[1]["tag"] = "1"
              __frame1[1]["arg1"] = "Unrecognised input"
              __frame1[1]["arg2"] = function(t)
                local __frame2 = {
                  nil,
                  nil,
                  nil,
                  nil
                }
                __frame2[1] = idris["Builtin.fst"](nil)(nil)(__arg1)
                __frame2[2] = {
                  nil
                }
                __frame2[2]["0"] = function()
                  local __frame3 = {
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  local __e1 = __frame2[1]["arg1"]
                  __frame3[1] = t
                  __frame3[2] = {
                    nil
                  }
                  __frame3[2]["0"] = function()
                    local __e8 = __frame3[1]["arg1"]
                    return __e8
                  end
                  __frame3[3] = __frame3[2][__frame3[1]["tag"]]
                  if __frame3[3] then
                    __frame3[4] = __frame3[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  __frame3[5] = __frame3[4]
                  __frame3[6] = {
                    nil
                  }
                  __frame3[6]["0"] = function()
                    local __e4 = __frame3[5]["arg1"]
                    return __e4
                  end
                  __frame3[7] = __frame3[6][__frame3[5]["tag"]]
                  if __frame3[7] then
                    __frame3[8] = __frame3[7]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __e1(__frame3[8])(__arg2)
                end
                __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                if __frame2[3] then
                  __frame2[4] = __frame2[3]()
                else
                  idris["error"]("Impossible else branch")
                end
                return idris["Text.Parser.case[379]match"](nil)(__arg1)(__arg2)(t)(__frame2[4])
              end
              return __frame1[1]
            end)()
        end
    end
end
idris["Utils.Path.parseBody"] = (function()
  local __frame1 = {
    nil,
    nil,
    nil,
    nil,
    nil
  }
  __frame1[1] = {}
  __frame1[1]["tag"] = "0"
  __frame1[1]["arg1"] = function(__arg2)
    return function(__arg3)
        return idris["Utils.Path.==_Eq__PathTokenKind"](__arg2)(__arg3)
      end
  end
  __frame1[1]["arg2"] = function(__arg4)
    return function(__arg5)
        return idris["Utils.Path./=_Eq__PathTokenKind"](__arg4)(__arg5)
      end
  end
  __frame1[2] = {}
  __frame1[2]["tag"] = "0"
  __frame1[2]["arg1"] = function(__arg272)
    return idris["Utils.Path.TokType_TokenKind__PathTokenKind"](__arg272)
  end
  __frame1[2]["arg2"] = function(kind)
    return function(__arg273)
        return idris["Utils.Path.tokValue_TokenKind__PathTokenKind"](kind)(__arg273)
      end
  end
  __frame1[3] = {}
  __frame1[3]["tag"] = "0"
  __frame1[3]["arg1"] = __frame1[1]
  __frame1[3]["arg2"] = __frame1[2]
  __frame1[4] = {}
  __frame1[4]["tag"] = "0"
  __frame1[5] = {}
  __frame1[5]["tag"] = "8"
  __frame1[5]["arg1"] = 1
  __frame1[5]["arg2"] = idris["Text.Parser.match"](nil)(__frame1[3])(__frame1[4])
  __frame1[5]["arg3"] = function()
    return function(text)
        local __frame3 = {
          nil,
          nil,
          nil,
          nil,
          nil,
          nil
        }
        __frame3[1] = text
        __frame3[2] = {
          nil,
          nil
        }
        __frame3[2][".."] = function()
          local __frame4 = {
            nil,
            nil
          }
          __frame4[1] = {}
          __frame4[1]["tag"] = "1"
          __frame4[2] = {}
          __frame4[2]["tag"] = "0"
          __frame4[2]["arg1"] = __frame4[1]
          return __frame4[2]
        end
        __frame3[2]["."] = function()
          local __frame4 = {
            nil,
            nil
          }
          __frame4[1] = {}
          __frame4[1]["tag"] = "0"
          __frame4[2] = {}
          __frame4[2]["tag"] = "0"
          __frame4[2]["arg1"] = __frame4[1]
          return __frame4[2]
        end
        __frame3[5] = __frame3[2][__frame3[1]]
        if __frame3[5] then
          __frame3[6] = __frame3[5]()
        else
          __frame3[3] = {}
          __frame3[3]["tag"] = "2"
          __frame3[3]["arg1"] = text
          __frame3[4] = {}
          __frame3[4]["tag"] = "0"
          __frame3[4]["arg1"] = __frame3[3]
          __frame3[6] = __frame3[4]
        end
        return __frame3[6]
      end
  end
  return __frame1[5]
end)()
idris["Data.Maybe.fromMaybe"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg2
              __frame1[2] = {
                nil,
                nil
              }
              __frame1[2]["0"] = function()
                return __arg1()
              end
              __frame1[2]["1"] = function()
                local __e2 = __frame1[1]["arg1"]
                return __e2
              end
              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["Foreign.getGlobalStringVar"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg1
                  __frame1[2] = {
                    nil
                  }
                  __frame1[2]["0"] = function()
                    local __e1 = __frame1[1]["arg1"]
                    return __e1
                  end
                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  __frame1[5] = __frame1[4]
                  __frame1[6] = {
                    nil
                  }
                  __frame1[6]["0"] = function()
                    local __frame2 = {
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    local __e2 = __frame1[5]["arg2"]
                    __frame2[1] = __arg1
                    __frame2[2] = {
                      nil
                    }
                    __frame2[2]["0"] = function()
                      local __e4 = __frame2[1]["arg2"]
                      return __e4(nil)(function(__eta0)
                          return idris["Foreign.prim__getGlobalStringVar"](__arg2)(__eta0)
                        end)
                    end
                    __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                    if __frame2[3] then
                      __frame2[4] = __frame2[3]()
                    else
                      idris["error"]("Impossible else branch")
                    end
                    return __e2(nil)(nil)(__frame2[4])(function(val)
                        local __frame3 = {
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        __frame3[1] = __arg1
                        __frame3[2] = {
                          nil
                        }
                        __frame3[2]["0"] = function()
                          local __e5 = __frame3[1]["arg1"]
                          return __e5
                        end
                        __frame3[3] = __frame3[2][__frame3[1]["tag"]]
                        if __frame3[3] then
                          __frame3[4] = __frame3[3]()
                        else
                          idris["error"]("Impossible else branch")
                        end
                        __frame3[5] = __frame3[4]
                        __frame3[6] = {
                          nil
                        }
                        __frame3[6]["0"] = function()
                          local __e6 = __frame3[5]["arg1"]
                          return __e6
                        end
                        __frame3[7] = __frame3[6][__frame3[5]["tag"]]
                        if __frame3[7] then
                          __frame3[8] = __frame3[7]()
                        else
                          idris["error"]("Impossible else branch")
                        end
                        __frame3[9] = __frame3[8]
                        __frame3[10] = {
                          nil
                        }
                        __frame3[10]["0"] = function()
                          local __e5 = __frame3[9]["arg2"]
                          return __e5(nil)(idris["Data.Maybe.fromMaybe"](nil)(__arg3)(val))
                        end
                        __frame3[11] = __frame3[10][__frame3[9]["tag"]]
                        if __frame3[11] then
                          __frame3[12] = __frame3[11]()
                        else
                          idris["error"]("Impossible else branch")
                        end
                        return __frame3[12]
                      end)
                  end
                  __frame1[7] = __frame1[6][__frame1[5]["tag"]]
                  if __frame1[7] then
                    __frame1[8] = __frame1[7]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[8]
                end)()
            end
        end
    end
end
idris["Foreign.getGlobalIntVar"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg1
                  __frame1[2] = {
                    nil
                  }
                  __frame1[2]["0"] = function()
                    local __e1 = __frame1[1]["arg1"]
                    return __e1
                  end
                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  __frame1[5] = __frame1[4]
                  __frame1[6] = {
                    nil
                  }
                  __frame1[6]["0"] = function()
                    local __frame2 = {
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    local __e2 = __frame1[5]["arg2"]
                    __frame2[1] = __arg1
                    __frame2[2] = {
                      nil
                    }
                    __frame2[2]["0"] = function()
                      local __e4 = __frame2[1]["arg2"]
                      return __e4(nil)(function(__eta0)
                          return idris["Foreign.prim__getGlobalIntVar"](__arg2)(__eta0)
                        end)
                    end
                    __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                    if __frame2[3] then
                      __frame2[4] = __frame2[3]()
                    else
                      idris["error"]("Impossible else branch")
                    end
                    return __e2(nil)(nil)(__frame2[4])(function(val)
                        local __frame3 = {
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        __frame3[1] = __arg1
                        __frame3[2] = {
                          nil
                        }
                        __frame3[2]["0"] = function()
                          local __e5 = __frame3[1]["arg1"]
                          return __e5
                        end
                        __frame3[3] = __frame3[2][__frame3[1]["tag"]]
                        if __frame3[3] then
                          __frame3[4] = __frame3[3]()
                        else
                          idris["error"]("Impossible else branch")
                        end
                        __frame3[5] = __frame3[4]
                        __frame3[6] = {
                          nil
                        }
                        __frame3[6]["0"] = function()
                          local __e6 = __frame3[5]["arg1"]
                          return __e6
                        end
                        __frame3[7] = __frame3[6][__frame3[5]["tag"]]
                        if __frame3[7] then
                          __frame3[8] = __frame3[7]()
                        else
                          idris["error"]("Impossible else branch")
                        end
                        __frame3[9] = __frame3[8]
                        __frame3[10] = {
                          nil
                        }
                        __frame3[10]["0"] = function()
                          local __e5 = __frame3[9]["arg2"]
                          return __e5(nil)(idris["Data.Maybe.fromMaybe"](nil)(__arg3)(val))
                        end
                        __frame3[11] = __frame3[10][__frame3[9]["tag"]]
                        if __frame3[11] then
                          __frame3[12] = __frame3[11]()
                        else
                          idris["error"]("Impossible else branch")
                        end
                        return __frame3[12]
                      end)
                  end
                  __frame1[7] = __frame1[6][__frame1[5]["tag"]]
                  if __frame1[7] then
                    __frame1[8] = __frame1[7]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[8]
                end)()
            end
        end
    end
end
idris["Foreign.getGlobalBoolVar"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg1
                  __frame1[2] = {
                    nil
                  }
                  __frame1[2]["0"] = function()
                    local __e1 = __frame1[1]["arg1"]
                    return __e1
                  end
                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  __frame1[5] = __frame1[4]
                  __frame1[6] = {
                    nil
                  }
                  __frame1[6]["0"] = function()
                    local __frame2 = {
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    local __e2 = __frame1[5]["arg2"]
                    __frame2[1] = __arg1
                    __frame2[2] = {
                      nil
                    }
                    __frame2[2]["0"] = function()
                      local __e4 = __frame2[1]["arg2"]
                      return __e4(nil)(function(__eta0)
                          return idris["Foreign.prim__getGlobalBoolVar"](__arg2)(__eta0)
                        end)
                    end
                    __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                    if __frame2[3] then
                      __frame2[4] = __frame2[3]()
                    else
                      idris["error"]("Impossible else branch")
                    end
                    return __e2(nil)(nil)(__frame2[4])(function(val)
                        local __frame3 = {
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        __frame3[1] = __arg1
                        __frame3[2] = {
                          nil
                        }
                        __frame3[2]["0"] = function()
                          local __e5 = __frame3[1]["arg1"]
                          return __e5
                        end
                        __frame3[3] = __frame3[2][__frame3[1]["tag"]]
                        if __frame3[3] then
                          __frame3[4] = __frame3[3]()
                        else
                          idris["error"]("Impossible else branch")
                        end
                        __frame3[5] = __frame3[4]
                        __frame3[6] = {
                          nil
                        }
                        __frame3[6]["0"] = function()
                          local __e6 = __frame3[5]["arg1"]
                          return __e6
                        end
                        __frame3[7] = __frame3[6][__frame3[5]["tag"]]
                        if __frame3[7] then
                          __frame3[8] = __frame3[7]()
                        else
                          idris["error"]("Impossible else branch")
                        end
                        __frame3[9] = __frame3[8]
                        __frame3[10] = {
                          nil
                        }
                        __frame3[10]["0"] = function()
                          local __e5 = __frame3[9]["arg2"]
                          return __e5(nil)(idris["Data.Maybe.fromMaybe"](nil)(__arg3)(val))
                        end
                        __frame3[11] = __frame3[10][__frame3[9]["tag"]]
                        if __frame3[11] then
                          __frame3[12] = __frame3[11]()
                        else
                          idris["error"]("Impossible else branch")
                        end
                        return __frame3[12]
                      end)
                  end
                  __frame1[7] = __frame1[6][__frame1[5]["tag"]]
                  if __frame1[7] then
                    __frame1[8] = __frame1[7]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[8]
                end)()
            end
        end
    end
end
idris["Utils.Hex.fromHexDigit"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[2]["0"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 0
        return __frame2[1]
      end
      __frame1[2]["1"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 1
        return __frame2[1]
      end
      __frame1[2]["2"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 2
        return __frame2[1]
      end
      __frame1[2]["3"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 3
        return __frame2[1]
      end
      __frame1[2]["4"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 4
        return __frame2[1]
      end
      __frame1[2]["5"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 5
        return __frame2[1]
      end
      __frame1[2]["6"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 6
        return __frame2[1]
      end
      __frame1[2]["7"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 7
        return __frame2[1]
      end
      __frame1[2]["8"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 8
        return __frame2[1]
      end
      __frame1[2]["9"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 9
        return __frame2[1]
      end
      __frame1[2]["a"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 10
        return __frame2[1]
      end
      __frame1[2]["b"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 11
        return __frame2[1]
      end
      __frame1[2]["c"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 12
        return __frame2[1]
      end
      __frame1[2]["d"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 13
        return __frame2[1]
      end
      __frame1[2]["e"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 14
        return __frame2[1]
      end
      __frame1[2]["f"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "1"
        __frame2[1]["arg1"] = 15
        return __frame2[1]
      end
      __frame1[4] = __frame1[2][__frame1[1]]
      if __frame1[4] then
        __frame1[5] = __frame1[4]()
      else
        __frame1[3] = {}
        __frame1[3]["tag"] = "0"
        __frame1[5] = __frame1[3]
      end
      return __frame1[5]
    end)()
end
idris["Data.List1.forget"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil
          }
          __frame1[2]["0"] = function()
            local __frame2 = {
              nil
            }
            local __e1 = __frame1[1]["arg1"]
            local __e2 = __frame1[1]["arg2"]
            __frame2[1] = {}
            __frame2[1]["tag"] = "1"
            __frame2[1]["arg1"] = __e1
            __frame2[1]["arg2"] = __e2
            return __frame2[1]
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Prelude.Basics.flip"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return (function()
                          return __arg3(__arg5)(__arg4)
                        end)()
                    end
                end
            end
        end
    end
end
idris["Prelude.Show.firstCharIs"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil
          }
          __frame1[2][""] = function()
            return 1
          end
          __frame1[3] = __frame1[2][__frame1[1]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            __frame1[4] = __arg0(utf8.sub(__arg1, 1, 1))
          end
          return __frame1[4]
        end)()
    end
end
idris["Data.List.find"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg2
              __frame1[2] = {
                nil,
                nil
              }
              __frame1[2]["0"] = function()
                local __frame2 = {
                  nil
                }
                __frame2[1] = {}
                __frame2[1]["tag"] = "0"
                return __frame2[1]
              end
              __frame1[2]["1"] = function()
                local __e2 = __frame1[1]["arg1"]
                local __e3 = __frame1[1]["arg2"]
                return idris["Data.List.case[1578]find"](nil)(__e2)(__e3)(__arg1)(__arg1(__e2))
              end
              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["Data.List.filter"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg2
              __frame1[2] = {
                nil,
                nil
              }
              __frame1[2]["0"] = function()
                local __frame2 = {
                  nil
                }
                __frame2[1] = {}
                __frame2[1]["tag"] = "0"
                return __frame2[1]
              end
              __frame1[2]["1"] = function()
                local __e2 = __frame1[1]["arg1"]
                local __e3 = __frame1[1]["arg2"]
                return idris["Data.List.case[1523]filter"](nil)(__e2)(__e3)(__arg1)(__arg1(__e2))
              end
              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["Text.Lexer.Core.2895:1423:countNLs"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return (function()
                                  return idris["Prelude.Types.List.length"](nil)(idris["Data.List.filter"](nil)(function(__arg8)
                                      return idris["Prelude.EqOrd.==_Eq__Char"](__arg8)("\n")
                                    end)(__arg7))
                                end)()
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Foreign.filePath"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil
          }
          __frame1[2]["0"] = function()
            local __e2 = __frame1[1]["arg2"]
            return __e2(nil)(function(__eta0)
                return idris["Foreign.prim__filePath"](__eta0)
              end)
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Text.Lexer.Core.case[1766]lex"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg3
                  __frame1[2] = {
                    nil
                  }
                  __frame1[2]["0"] = function()
                    local __frame2 = {
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    local __e2 = __frame1[1]["arg1"]
                    local __e3 = __frame1[1]["arg2"]
                    __frame2[1] = __e3
                    __frame2[2] = {
                      nil
                    }
                    __frame2[2]["0"] = function()
                      local __frame3 = {
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      local __e6 = __frame2[1]["arg1"]
                      local __e7 = __frame2[1]["arg2"]
                      __frame3[1] = __e7
                      __frame3[2] = {
                        nil
                      }
                      __frame3[2]["0"] = function()
                        local __frame4 = {
                          nil,
                          nil,
                          nil
                        }
                        local __e10 = __frame3[1]["arg1"]
                        local __e11 = __frame3[1]["arg2"]
                        __frame4[1] = {}
                        __frame4[1]["tag"] = "0"
                        __frame4[1]["arg1"] = __e10
                        __frame4[1]["arg2"] = idris["Prelude.Types.fastPack"](__e11)
                        __frame4[2] = {}
                        __frame4[2]["tag"] = "0"
                        __frame4[2]["arg1"] = __e6
                        __frame4[2]["arg2"] = __frame4[1]
                        __frame4[3] = {}
                        __frame4[3]["tag"] = "0"
                        __frame4[3]["arg1"] = __e2
                        __frame4[3]["arg2"] = __frame4[2]
                        return __frame4[3]
                      end
                      __frame3[3] = __frame3[2][__frame3[1]["tag"]]
                      if __frame3[3] then
                        __frame3[4] = __frame3[3]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame3[4]
                    end
                    __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                    if __frame2[3] then
                      __frame2[4] = __frame2[3]()
                    else
                      idris["error"]("Impossible else branch")
                    end
                    return __frame2[4]
                  end
                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[4]
                end)()
            end
        end
    end
end
idris["Text.Lexer.Core.case[1529]tokenise,getFirstToken"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return function(__arg9)
                                      return function(__arg10)
                                          return function(__arg11)
                                              return (function()
                                                  local __frame1 = {
                                                    nil,
                                                    nil,
                                                    nil,
                                                    nil
                                                  }
                                                  __frame1[1] = __arg11
                                                  __frame1[2] = {
                                                    nil,
                                                    nil
                                                  }
                                                  __frame1[2]["1"] = function()
                                                    local __frame2 = {
                                                      nil,
                                                      nil,
                                                      nil,
                                                      nil
                                                    }
                                                    local __e1 = __frame1[1]["arg1"]
                                                    __frame2[1] = __e1
                                                    __frame2[2] = {
                                                      nil
                                                    }
                                                    __frame2[2]["0"] = function()
                                                      local __frame3 = {
                                                        nil,
                                                        nil,
                                                        nil,
                                                        nil,
                                                        nil
                                                      }
                                                      local __e5 = __frame2[1]["arg1"]
                                                      local __e6 = __frame2[1]["arg2"]
                                                      local line_prime_ = __arg5 + idris["Prelude.Types.cast_Cast__Nat_Int"](idris["Text.Lexer.Core.2895:1423:countNLs"](nil)(__arg1)(__arg2)(__arg3)(__arg4)(__arg5)(__arg6)(__e5))
                                                      local col_prime_ = idris["Text.Lexer.Core.2895:1424:getCols"](nil)(__arg1)(__arg2)(__arg3)(__arg4)(__arg5)(__arg6)(__e5)(__arg4)
                                                      __frame3[1] = {}
                                                      __frame3[1]["tag"] = "0"
                                                      __frame3[1]["arg1"] = __arg8(idris["Prelude.Types.fastPack"](idris["Data.List.reverse"](nil)(__e5)))
                                                      __frame3[1]["arg2"] = 1
                                                      __frame3[1]["arg3"] = __arg5
                                                      __frame3[1]["arg4"] = __arg4
                                                      __frame3[1]["arg5"] = line_prime_
                                                      __frame3[1]["arg6"] = col_prime_
                                                      __frame3[2] = {}
                                                      __frame3[2]["tag"] = "0"
                                                      __frame3[2]["arg1"] = col_prime_
                                                      __frame3[2]["arg2"] = __e6
                                                      __frame3[3] = {}
                                                      __frame3[3]["tag"] = "0"
                                                      __frame3[3]["arg1"] = line_prime_
                                                      __frame3[3]["arg2"] = __frame3[2]
                                                      __frame3[4] = {}
                                                      __frame3[4]["tag"] = "0"
                                                      __frame3[4]["arg1"] = __frame3[1]
                                                      __frame3[4]["arg2"] = __frame3[3]
                                                      __frame3[5] = {}
                                                      __frame3[5]["tag"] = "1"
                                                      __frame3[5]["arg1"] = __frame3[4]
                                                      return __frame3[5]
                                                    end
                                                    __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                                                    if __frame2[3] then
                                                      __frame2[4] = __frame2[3]()
                                                    else
                                                      idris["error"]("Impossible else branch")
                                                    end
                                                    return __frame2[4]
                                                  end
                                                  __frame1[2]["0"] = function()
                                                    return idris["Text.Lexer.Core.2895:1425:getFirstToken"](nil)(__arg1)(__arg2)(__arg3)(__arg4)(__arg5)(__arg6)(__arg9)(__arg10)
                                                  end
                                                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                                                  if __frame1[3] then
                                                    __frame1[4] = __frame1[3]()
                                                  else
                                                    idris["error"]("Impossible else branch")
                                                  end
                                                  return __frame1[4]
                                                end)()
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Text.Lexer.Core.2895:1425:getFirstToken"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return (function()
                                      local __frame1 = {
                                        nil,
                                        nil,
                                        nil,
                                        nil
                                      }
                                      __frame1[1] = __arg7
                                      __frame1[2] = {
                                        nil,
                                        nil
                                      }
                                      __frame1[2]["0"] = function()
                                        local __frame2 = {
                                          nil
                                        }
                                        __frame2[1] = {}
                                        __frame2[1]["tag"] = "0"
                                        return __frame2[1]
                                      end
                                      __frame1[2]["1"] = function()
                                        local __frame2 = {
                                          nil,
                                          nil,
                                          nil,
                                          nil
                                        }
                                        local __e2 = __frame1[1]["arg1"]
                                        local __e3 = __frame1[1]["arg2"]
                                        __frame2[1] = __e2
                                        __frame2[2] = {
                                          nil
                                        }
                                        __frame2[2]["0"] = function()
                                          local __frame3 = {
                                            nil
                                          }
                                          local __e6 = __frame2[1]["arg1"]
                                          local __e7 = __frame2[1]["arg2"]
                                          __frame3[1] = {}
                                          __frame3[1]["tag"] = "0"
                                          return idris["Text.Lexer.Core.case[1529]tokenise,getFirstToken"](nil)(__arg1)(__arg2)(__arg3)(__arg4)(__arg5)(__arg6)(__e6)(__e7)(__e3)(__arg8)(idris["Text.Lexer.Core.scan"](nil)(__e6)(__frame3[1])(__arg8))
                                        end
                                        __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                                        if __frame2[3] then
                                          __frame2[4] = __frame2[3]()
                                        else
                                          idris["error"]("Impossible else branch")
                                        end
                                        return __frame2[4]
                                      end
                                      __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                                      if __frame1[3] then
                                        __frame1[4] = __frame1[3]()
                                      else
                                        idris["error"]("Impossible else branch")
                                      end
                                      return __frame1[4]
                                    end)()
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Text.Lexer.Core.case[1648]case block in tokenise"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return function(__arg9)
                                      return function(__arg10)
                                          return function(__arg11)
                                              return (function()
                                                  local __frame1 = {
                                                    nil,
                                                    nil,
                                                    nil,
                                                    nil
                                                  }
                                                  __frame1[1] = __arg11
                                                  __frame1[2] = {
                                                    nil,
                                                    nil
                                                  }
                                                  __frame1[2][0] = function()
                                                    local __frame2 = {
                                                      nil,
                                                      nil,
                                                      nil,
                                                      nil
                                                    }
                                                    __frame2[1] = {}
                                                    __frame2[1]["tag"] = "0"
                                                    __frame2[2] = {}
                                                    __frame2[2]["tag"] = "0"
                                                    __frame2[2]["arg1"] = __arg4
                                                    __frame2[2]["arg2"] = __frame2[1]
                                                    __frame2[3] = {}
                                                    __frame2[3]["tag"] = "0"
                                                    __frame2[3]["arg1"] = __arg5
                                                    __frame2[3]["arg2"] = __frame2[2]
                                                    __frame2[4] = {}
                                                    __frame2[4]["tag"] = "0"
                                                    __frame2[4]["arg1"] = idris["Data.List.reverse"](nil)(__arg3)
                                                    __frame2[4]["arg2"] = __frame2[3]
                                                    return __frame2[4]
                                                  end
                                                  __frame1[2][1] = function()
                                                    local __frame2 = {
                                                      nil
                                                    }
                                                    __frame2[1] = {}
                                                    __frame2[1]["tag"] = "1"
                                                    __frame2[1]["arg1"] = __arg7
                                                    __frame2[1]["arg2"] = __arg3
                                                    return idris["Text.Lexer.Core.tokenise"](nil)(__arg6)(__arg8)(__arg9)(__frame2[1])(__arg2)(__arg10)
                                                  end
                                                  __frame1[3] = __frame1[2][__frame1[1]]
                                                  if __frame1[3] then
                                                    __frame1[4] = __frame1[3]()
                                                  else
                                                    idris["error"]("Impossible else branch")
                                                  end
                                                  return __frame1[4]
                                                end)()
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Text.Lexer.Core.case[1615]tokenise"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return (function()
                                  local __frame1 = {
                                    nil,
                                    nil,
                                    nil,
                                    nil
                                  }
                                  __frame1[1] = __arg7
                                  __frame1[2] = {
                                    nil,
                                    nil
                                  }
                                  __frame1[2]["1"] = function()
                                    local __frame2 = {
                                      nil,
                                      nil,
                                      nil,
                                      nil
                                    }
                                    local __e1 = __frame1[1]["arg1"]
                                    __frame2[1] = __e1
                                    __frame2[2] = {
                                      nil
                                    }
                                    __frame2[2]["0"] = function()
                                      local __frame3 = {
                                        nil,
                                        nil,
                                        nil,
                                        nil
                                      }
                                      local __e5 = __frame2[1]["arg1"]
                                      local __e6 = __frame2[1]["arg2"]
                                      __frame3[1] = __e6
                                      __frame3[2] = {
                                        nil
                                      }
                                      __frame3[2]["0"] = function()
                                        local __frame4 = {
                                          nil,
                                          nil,
                                          nil,
                                          nil
                                        }
                                        local __e9 = __frame3[1]["arg1"]
                                        local __e10 = __frame3[1]["arg2"]
                                        __frame4[1] = __e10
                                        __frame4[2] = {
                                          nil
                                        }
                                        __frame4[2]["0"] = function()
                                          local __e13 = __frame4[1]["arg1"]
                                          local __e14 = __frame4[1]["arg2"]
                                          return idris["Text.Lexer.Core.case[1648]case block in tokenise"](nil)(__arg1)(__arg2)(__arg3)(__arg4)(__arg5)(__arg6)(__e5)(__e9)(__e13)(__e14)(__arg6(__e5))
                                        end
                                        __frame4[3] = __frame4[2][__frame4[1]["tag"]]
                                        if __frame4[3] then
                                          __frame4[4] = __frame4[3]()
                                        else
                                          idris["error"]("Impossible else branch")
                                        end
                                        return __frame4[4]
                                      end
                                      __frame3[3] = __frame3[2][__frame3[1]["tag"]]
                                      if __frame3[3] then
                                        __frame3[4] = __frame3[3]()
                                      else
                                        idris["error"]("Impossible else branch")
                                      end
                                      return __frame3[4]
                                    end
                                    __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                                    if __frame2[3] then
                                      __frame2[4] = __frame2[3]()
                                    else
                                      idris["error"]("Impossible else branch")
                                    end
                                    return __frame2[4]
                                  end
                                  __frame1[2]["0"] = function()
                                    local __frame2 = {
                                      nil,
                                      nil,
                                      nil
                                    }
                                    __frame2[1] = {}
                                    __frame2[1]["tag"] = "0"
                                    __frame2[1]["arg1"] = __arg4
                                    __frame2[1]["arg2"] = __arg1
                                    __frame2[2] = {}
                                    __frame2[2]["tag"] = "0"
                                    __frame2[2]["arg1"] = __arg5
                                    __frame2[2]["arg2"] = __frame2[1]
                                    __frame2[3] = {}
                                    __frame2[3]["tag"] = "0"
                                    __frame2[3]["arg1"] = idris["Data.List.reverse"](nil)(__arg3)
                                    __frame2[3]["arg2"] = __frame2[2]
                                    return __frame2[3]
                                  end
                                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                                  if __frame1[3] then
                                    __frame1[4] = __frame1[3]()
                                  else
                                    idris["error"]("Impossible else branch")
                                  end
                                  return __frame1[4]
                                end)()
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Text.Lexer.Core.tokenise"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return (function()
                              return idris["Text.Lexer.Core.case[1615]tokenise"](nil)(__arg6)(__arg5)(__arg4)(__arg3)(__arg2)(__arg1)(idris["Text.Lexer.Core.2895:1425:getFirstToken"](nil)(__arg6)(__arg5)(__arg4)(__arg3)(__arg2)(__arg1)(__arg5)(__arg6))
                            end)()
                        end
                    end
                end
            end
        end
    end
end
idris["Text.Lexer.Core.lex"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil
              }
              __frame1[1] = {}
              __frame1[1]["tag"] = "0"
              return idris["Text.Lexer.Core.case[1766]lex"](nil)(__arg2)(__arg1)(idris["Text.Lexer.Core.tokenise"](nil)(function(__eta0)
                  return 1
                end)(0)(0)(__frame1[1])(__arg1)(idris["Data.Strings.fastUnpack"](__arg2)))
            end)()
        end
    end
end
idris["Text.Lexer.Core.fail"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "1"
      return __frame1[1]
    end)()
end
idris["Text.Quantity.exactly"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "1"
      __frame1[1]["arg1"] = __arg0
      __frame1[2] = {}
      __frame1[2]["tag"] = "0"
      __frame1[2]["arg1"] = __arg0
      __frame1[2]["arg2"] = __frame1[1]
      return __frame1[2]
    end)()
end
idris["Text.Lexer.escape"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil
          }
          __frame1[1] = {}
          __frame1[1]["tag"] = "4"
          __frame1[1]["arg1"] = idris["Text.Lexer.is"](__arg0)
          __frame1[1]["arg2"] = function()
            return __arg1
          end
          return __frame1[1]
        end)()
    end
end
idris["Parser.Rule.Source.eoi"] = (function()
  local __frame1 = {
    nil,
    nil
  }
  __frame1[1] = {}
  __frame1[1]["tag"] = "2"
  __frame1[1]["arg1"] = "Expected end of input"
  __frame1[1]["arg2"] = function(__eta0)
    local __frame2 = {
      nil,
      nil,
      nil,
      nil
    }
    __frame2[1] = __eta0
    __frame2[2] = {
      nil
    }
    __frame2[2]["0"] = function()
      local __e1 = __frame2[1]["arg1"]
      return __e1
    end
    __frame2[3] = __frame2[2][__frame2[1]["tag"]]
    if __frame2[3] then
      __frame2[4] = __frame2[3]()
    else
      idris["error"]("Impossible else branch")
    end
    return idris["Parser.Rule.Source.4124:2355:isEOI"](__frame2[4])
  end
  __frame1[2] = {}
  __frame1[2]["tag"] = "9"
  __frame1[2]["arg1"] = 1
  __frame1[2]["arg2"] = 1
  __frame1[2]["arg3"] = __frame1[1]
  __frame1[2]["arg4"] = function(___2376)
    local __frame2 = {
      nil,
      nil
    }
    __frame2[1] = {}
    __frame2[1]["tag"] = "0"
    __frame2[2] = {}
    __frame2[2]["tag"] = "0"
    __frame2[2]["arg1"] = __frame2[1]
    return __frame2[2]
  end
  return __frame1[2]
end)()
idris["Text.Bounded.end"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil,
            nil,
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil
          }
          __frame1[2]["0"] = function()
            local __e5 = __frame1[1]["arg5"]
            return __e5
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          __frame1[5] = __arg1
          __frame1[6] = {
            nil
          }
          __frame1[6]["0"] = function()
            local __e6 = __frame1[5]["arg6"]
            return __e6
          end
          __frame1[7] = __frame1[6][__frame1[5]["tag"]]
          if __frame1[7] then
            __frame1[8] = __frame1[7]()
          else
            idris["error"]("Impossible else branch")
          end
          __frame1[9] = {}
          __frame1[9]["tag"] = "0"
          __frame1[9]["arg1"] = __frame1[4]
          __frame1[9]["arg2"] = __frame1[8]
          return __frame1[9]
        end)()
    end
end
idris["Text.Bounded.case[995]mergeBounds"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return (function()
                      local __frame1 = {
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame1[1] = __arg4
                      __frame1[2] = {
                        nil
                      }
                      __frame1[2]["0"] = function()
                        local __frame2 = {
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        local __e2 = __frame1[1]["arg1"]
                        local __e3 = __frame1[1]["arg2"]
                        __frame2[1] = {}
                        __frame2[1]["tag"] = "0"
                        __frame2[1]["arg1"] = function(__arg5)
                          return function(__arg6)
                              return idris["Prelude.EqOrd.==_Eq__Int"](__arg5)(__arg6)
                            end
                        end
                        __frame2[1]["arg2"] = function(__arg5)
                          return function(__arg6)
                              return idris["Prelude.EqOrd./=_Eq__Int"](__arg5)(__arg6)
                            end
                        end
                        __frame2[2] = {}
                        __frame2[2]["tag"] = "0"
                        __frame2[2]["arg1"] = __frame2[1]
                        __frame2[2]["arg2"] = function(__arg369)
                          return function(__arg370)
                              return idris["Prelude.EqOrd.compare_Ord__Int"](__arg369)(__arg370)
                            end
                        end
                        __frame2[2]["arg3"] = function(__arg371)
                          return function(__arg372)
                              return idris["Prelude.EqOrd.<_Ord__Int"](__arg371)(__arg372)
                            end
                        end
                        __frame2[2]["arg4"] = function(__arg373)
                          return function(__arg374)
                              return idris["Prelude.EqOrd.>_Ord__Int"](__arg373)(__arg374)
                            end
                        end
                        __frame2[2]["arg5"] = function(__arg375)
                          return function(__arg376)
                              return idris["Prelude.EqOrd.<=_Ord__Int"](__arg375)(__arg376)
                            end
                        end
                        __frame2[2]["arg6"] = function(__arg377)
                          return function(__arg378)
                              return idris["Prelude.EqOrd.>=_Ord__Int"](__arg377)(__arg378)
                            end
                        end
                        __frame2[2]["arg7"] = function(__arg379)
                          return function(__arg380)
                              return idris["Prelude.EqOrd.max_Ord__Int"](__arg379)(__arg380)
                            end
                        end
                        __frame2[2]["arg8"] = function(__arg381)
                          return function(__arg382)
                              return idris["Prelude.EqOrd.min_Ord__Int"](__arg381)(__arg382)
                            end
                        end
                        __frame2[3] = {}
                        __frame2[3]["tag"] = "0"
                        __frame2[3]["arg1"] = function(__arg5)
                          return function(__arg6)
                              return idris["Prelude.EqOrd.==_Eq__Int"](__arg5)(__arg6)
                            end
                        end
                        __frame2[3]["arg2"] = function(__arg5)
                          return function(__arg6)
                              return idris["Prelude.EqOrd./=_Eq__Int"](__arg5)(__arg6)
                            end
                        end
                        __frame2[4] = {}
                        __frame2[4]["tag"] = "0"
                        __frame2[4]["arg1"] = __frame2[3]
                        __frame2[4]["arg2"] = function(__arg369)
                          return function(__arg370)
                              return idris["Prelude.EqOrd.compare_Ord__Int"](__arg369)(__arg370)
                            end
                        end
                        __frame2[4]["arg3"] = function(__arg371)
                          return function(__arg372)
                              return idris["Prelude.EqOrd.<_Ord__Int"](__arg371)(__arg372)
                            end
                        end
                        __frame2[4]["arg4"] = function(__arg373)
                          return function(__arg374)
                              return idris["Prelude.EqOrd.>_Ord__Int"](__arg373)(__arg374)
                            end
                        end
                        __frame2[4]["arg5"] = function(__arg375)
                          return function(__arg376)
                              return idris["Prelude.EqOrd.<=_Ord__Int"](__arg375)(__arg376)
                            end
                        end
                        __frame2[4]["arg6"] = function(__arg377)
                          return function(__arg378)
                              return idris["Prelude.EqOrd.>=_Ord__Int"](__arg377)(__arg378)
                            end
                        end
                        __frame2[4]["arg7"] = function(__arg379)
                          return function(__arg380)
                              return idris["Prelude.EqOrd.max_Ord__Int"](__arg379)(__arg380)
                            end
                        end
                        __frame2[4]["arg8"] = function(__arg381)
                          return function(__arg382)
                              return idris["Prelude.EqOrd.min_Ord__Int"](__arg381)(__arg382)
                            end
                        end
                        return idris["Text.Bounded.case[1020]case block in mergeBounds"](nil)(nil)(__arg2)(__arg3)(__e2)(__e3)(idris["Prelude.EqOrd.max_Ord__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)"](nil)(nil)(__frame2[2])(__frame2[4])(idris["Text.Bounded.end"](nil)(__arg3))(idris["Text.Bounded.end"](nil)(__arg2)))
                      end
                      __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                      if __frame1[3] then
                        __frame1[4] = __frame1[3]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame1[4]
                    end)()
                end
            end
        end
    end
end
idris["Utils.Path.emptyPath"] = (function()
  local __frame1 = {
    nil,
    nil,
    nil
  }
  __frame1[1] = {}
  __frame1[1]["tag"] = "0"
  __frame1[2] = {}
  __frame1[2]["tag"] = "0"
  __frame1[3] = {}
  __frame1[3]["tag"] = "0"
  __frame1[3]["arg1"] = __frame1[1]
  __frame1[3]["arg2"] = 1
  __frame1[3]["arg3"] = __frame1[2]
  __frame1[3]["arg4"] = 1
  return __frame1[3]
end)()
idris["Utils.Path.case[3801]parse"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil
          }
          __frame1[2]["1"] = function()
            local __frame2 = {
              nil,
              nil,
              nil,
              nil
            }
            local __e2 = __frame1[1]["arg1"]
            __frame2[1] = __e2
            __frame2[2] = {
              nil
            }
            __frame2[2]["0"] = function()
              local __e5 = __frame2[1]["arg1"]
              return __e5
            end
            __frame2[3] = __frame2[2][__frame2[1]["tag"]]
            if __frame2[3] then
              __frame2[4] = __frame2[3]()
            else
              __frame2[4] = idris["Utils.Path.emptyPath"]
            end
            return __frame2[4]
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            __frame1[4] = idris["Utils.Path.emptyPath"]
          end
          return __frame1[4]
        end)()
    end
end
idris["Text.Lexer.Core.empty"] = (function()
  local __frame1 = {
    nil
  }
  __frame1[1] = {}
  __frame1[1]["tag"] = "0"
  return __frame1[1]
end)()
idris["Prelude.Types.elem"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg3
                  __frame1[2] = {
                    nil,
                    nil
                  }
                  __frame1[2]["0"] = function()
                    return 1
                  end
                  __frame1[2]["1"] = function()
                    local __frame2 = {
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    local __e2 = __frame1[1]["arg1"]
                    local __e3 = __frame1[1]["arg2"]
                    __frame2[1] = __arg1
                    __frame2[2] = {
                      nil
                    }
                    __frame2[2]["0"] = function()
                      local __e1 = __frame2[1]["arg1"]
                      return __e1(__arg2)(__e2)
                    end
                    __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                    if __frame2[3] then
                      __frame2[4] = __frame2[3]()
                    else
                      idris["error"]("Impossible else branch")
                    end
                    return idris["Prelude.Basics.||"](__frame2[4])(function()
                        return idris["Prelude.Types.elem"](nil)(__arg1)(__arg2)(__e3)
                      end)
                  end
                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[4]
                end)()
            end
        end
    end
end
idris["Text.Lexer.oneOf"] = function(__arg0)
  return (function()
      return idris["Text.Lexer.Core.pred"](function(x)
          local __frame2 = {
            nil
          }
          __frame2[1] = {}
          __frame2[1]["tag"] = "0"
          __frame2[1]["arg1"] = function(__arg2)
            return function(__arg3)
                return idris["Prelude.EqOrd.==_Eq__Char"](__arg2)(__arg3)
              end
          end
          __frame2[1]["arg2"] = function(__arg4)
            return function(__arg5)
                return idris["Prelude.EqOrd./=_Eq__Char"](__arg4)(__arg5)
              end
          end
          return idris["Prelude.Types.elem"](nil)(__frame2[1])(x)(idris["Prelude.Types.unpack"](__arg0))
        end)
    end)()
end
idris["System.Info.isWindows"] = (function()
  local __frame1 = {
    nil,
    nil,
    nil,
    nil,
    nil
  }
  __frame1[1] = {}
  __frame1[1]["tag"] = "0"
  __frame1[1]["arg1"] = function(__arg2)
    return function(__arg3)
        return idris["Prelude.EqOrd.==_Eq__String"](__arg2)(__arg3)
      end
  end
  __frame1[1]["arg2"] = function(__arg4)
    return function(__arg5)
        return idris["Prelude.EqOrd./=_Eq__String"](__arg4)(__arg5)
      end
  end
  __frame1[2] = {}
  __frame1[2]["tag"] = "0"
  __frame1[3] = {}
  __frame1[3]["tag"] = "1"
  __frame1[3]["arg1"] = "cygwin32"
  __frame1[3]["arg2"] = __frame1[2]
  __frame1[4] = {}
  __frame1[4]["tag"] = "1"
  __frame1[4]["arg1"] = "mingw32"
  __frame1[4]["arg2"] = __frame1[3]
  __frame1[5] = {}
  __frame1[5]["tag"] = "1"
  __frame1[5]["arg1"] = "windows"
  __frame1[5]["arg2"] = __frame1[4]
  return idris["Prelude.Types.elem"](nil)(__frame1[1])(idris["System.Info.os"])(__frame1[5])
end)()
idris["System.File.modeStr"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[2]["0"] = function()
        return idris["System.File.case[400]modeStr"](idris["System.Info.isWindows"])
      end
      __frame1[2]["1"] = function()
        return idris["System.File.case[410]modeStr"](idris["System.Info.isWindows"])
      end
      __frame1[2]["2"] = function()
        return idris["System.File.case[420]modeStr"](idris["System.Info.isWindows"])
      end
      __frame1[2]["3"] = function()
        return idris["System.File.case[430]modeStr"](idris["System.Info.isWindows"])
      end
      __frame1[2]["4"] = function()
        return idris["System.File.case[440]modeStr"](idris["System.Info.isWindows"])
      end
      __frame1[2]["5"] = function()
        return idris["System.File.case[450]modeStr"](idris["System.Info.isWindows"])
      end
      __frame1[3] = __frame1[2][__frame1[1]["tag"]]
      if __frame1[3] then
        __frame1[4] = __frame1[3]()
      else
        idris["error"]("Impossible else branch")
      end
      return __frame1[4]
    end)()
end
idris["System.File.popen"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg1
                  __frame1[2] = {
                    nil
                  }
                  __frame1[2]["0"] = function()
                    local __e1 = __frame1[1]["arg1"]
                    return __e1
                  end
                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  __frame1[5] = __frame1[4]
                  __frame1[6] = {
                    nil
                  }
                  __frame1[6]["0"] = function()
                    local __frame2 = {
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    local __e2 = __frame1[5]["arg2"]
                    __frame2[1] = __arg1
                    __frame2[2] = {
                      nil
                    }
                    __frame2[2]["0"] = function()
                      local __e4 = __frame2[1]["arg2"]
                      return __e4(nil)(function(__eta0)
                          return idris["System.File.prim__popen"](__arg2)(idris["System.File.modeStr"](__arg3))(__eta0)
                        end)
                    end
                    __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                    if __frame2[3] then
                      __frame2[4] = __frame2[3]()
                    else
                      idris["error"]("Impossible else branch")
                    end
                    return __e2(nil)(nil)(__frame2[4])(function(ptr)
                        return idris["System.File.case[1262]popen"](nil)(__arg1)(__arg3)(__arg2)(ptr)(idris["Prelude.EqOrd./=_Eq__Int"](idris["PrimIO.prim__nullAnyPtr"](ptr))(bigint.tonumber(bigint:new("0"))))
                      end)
                  end
                  __frame1[7] = __frame1[6][__frame1[5]["tag"]]
                  if __frame1[7] then
                    __frame1[8] = __frame1[7]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[8]
                end)()
            end
        end
    end
end
idris["Utils.Path.isAbsolute'"] = function(__arg0)
  return (function()
      return idris["Utils.Path.case[3821]isAbsolute'"](__arg0)(idris["System.Info.isWindows"])
    end)()
end
idris["Prelude.Types.either"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return (function()
                          local __frame1 = {
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          __frame1[1] = __arg5
                          __frame1[2] = {
                            nil,
                            nil
                          }
                          __frame1[2]["0"] = function()
                            local __e2 = __frame1[1]["arg1"]
                            return __arg3()(__e2)
                          end
                          __frame1[2]["1"] = function()
                            local __e5 = __frame1[1]["arg1"]
                            return __arg4()(__e5)
                          end
                          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                          if __frame1[3] then
                            __frame1[4] = __frame1[3]()
                          else
                            idris["error"]("Impossible else branch")
                          end
                          return __frame1[4]
                        end)()
                    end
                end
            end
        end
    end
end
idris["Utils.Either.mapError"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return (function()
                      return idris["Prelude.Types.either"](nil)(nil)(nil)(function()
                          return function(__eta0)
                              local __frame3 = {
                                nil
                              }
                              __frame3[1] = {}
                              __frame3[1]["tag"] = "0"
                              __frame3[1]["arg1"] = __arg3(__eta0)
                              return __frame3[1]
                            end
                        end)(function()
                          return function(__eta0)
                              local __frame3 = {
                                nil
                              }
                              __frame3[1] = {}
                              __frame3[1]["tag"] = "1"
                              __frame3[1]["arg1"] = __eta0
                              return __frame3[1]
                            end
                        end)(__arg4)
                    end)()
                end
            end
        end
    end
end
idris["Data.List.dropWhile"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg2
              __frame1[2] = {
                nil,
                nil
              }
              __frame1[2]["0"] = function()
                local __frame2 = {
                  nil
                }
                __frame2[1] = {}
                __frame2[1]["tag"] = "0"
                return __frame2[1]
              end
              __frame1[2]["1"] = function()
                local __e2 = __frame1[1]["arg1"]
                local __e3 = __frame1[1]["arg2"]
                return idris["Data.List.case[1469]dropWhile"](nil)(__e2)(__e3)(__arg1)(__arg1(__e2))
              end
              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["Plugin.trimNewLineAtEnd"] = function(__arg0)
  return (function()
      return idris["Prelude.Types.fastPack"](idris["Data.List.reverse"](nil)(idris["Data.List.dropWhile"](nil)(function(__arg1)
          return idris["Prelude.EqOrd.==_Eq__Char"](__arg1)("\n")
        end)(idris["Data.List.reverse"](nil)(idris["Data.Strings.fastUnpack"](__arg0)))))
    end)()
end
idris["Data.List.deleteBy"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg3
                  __frame1[2] = {
                    nil,
                    nil
                  }
                  __frame1[2]["0"] = function()
                    local __frame2 = {
                      nil
                    }
                    __frame2[1] = {}
                    __frame2[1]["tag"] = "0"
                    return __frame2[1]
                  end
                  __frame1[2]["1"] = function()
                    local __e2 = __frame1[1]["arg1"]
                    local __e3 = __frame1[1]["arg2"]
                    return idris["Data.List.case[1851]deleteBy"](nil)(__arg2)(__e2)(__e3)(__arg1)(__arg1(__arg2)(__e2))
                  end
                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[4]
                end)()
            end
        end
    end
end
idris["Data.List.delete"] = function(__arg0)
  return function(__arg1)
      return function(__ext0)
          return function(__ext1)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg1
                  __frame1[2] = {
                    nil
                  }
                  __frame1[2]["0"] = function()
                    local __e1 = __frame1[1]["arg1"]
                    return function(__arg2)
                        return function(__arg3)
                            return __e1(__arg2)(__arg3)
                          end
                      end
                  end
                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return idris["Data.List.deleteBy"](nil)(__frame1[4])(__ext0)(__ext1)
                end)()
            end
        end
    end
end
idris["Foreign.cursorWord'"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil
          }
          __frame1[2]["0"] = function()
            local __e2 = __frame1[1]["arg2"]
            return __e2(nil)(function(__eta0)
                return idris["Foreign.prim__cursorWord'"](__eta0)
              end)
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Foreign.cursorWord"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil
          }
          __frame1[2]["0"] = function()
            local __e2 = __frame1[1]["arg2"]
            return __e2(nil)(function(__eta0)
                return idris["Foreign.prim__cursorWord"](__eta0)
              end)
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Foreign.cursorLine"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil
          }
          __frame1[2]["0"] = function()
            local __e2 = __frame1[1]["arg2"]
            return __e2(nil)(function(__eta0)
                return idris["Foreign.prim__cursorLine"](__eta0)
              end)
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Foreign.cursorColumn"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil
          }
          __frame1[2]["0"] = function()
            local __e2 = __frame1[1]["arg2"]
            return __e2(nil)(function(__eta0)
                return idris["Foreign.prim__cursorColumn"](__eta0)
              end)
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Prelude.Types.countFrom"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil
              }
              __frame1[1] = {}
              __frame1[1]["tag"] = "0"
              __frame1[1]["arg1"] = __arg1
              __frame1[1]["arg2"] = function()
                return idris["Prelude.Types.countFrom"](nil)(__arg2(__arg1))(__arg2)
              end
              return __frame1[1]
            end)()
        end
    end
end
idris["Prelude.Types.case[4988]case block in rangeFromTo"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg2
              __frame1[2] = {
                nil,
                nil
              }
              __frame1[2][0] = function()
                return idris["Prelude.Types.takeUntil"](nil)(function(__arg3)
                    return idris["Prelude.Types.<=_Ord__Nat"](__arg3)(__arg0)
                  end)(idris["Prelude.Types.countFrom"](nil)(__arg1)(function(n)
                    return idris["Prelude.Types.minus"](n)(bigint:new("1") + bigint:new("0"))
                  end))
              end
              __frame1[2][1] = function()
                local __frame2 = {
                  nil,
                  nil
                }
                __frame2[1] = {}
                __frame2[1]["tag"] = "0"
                __frame2[2] = {}
                __frame2[2]["tag"] = "1"
                __frame2[2]["arg1"] = __arg1
                __frame2[2]["arg2"] = __frame2[1]
                return __frame2[2]
              end
              __frame1[3] = __frame1[2][__frame1[1]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["Prelude.Types.case[4960]rangeFromTo"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg2
              __frame1[2] = {
                nil,
                nil
              }
              __frame1[2][0] = function()
                return idris["Prelude.Types.takeUntil"](nil)(function(__arg3)
                    return idris["Prelude.Types.>=_Ord__Nat"](__arg3)(__arg0)
                  end)(idris["Prelude.Types.countFrom"](nil)(__arg1)(function(__eta0)
                    return bigint:new("1") + __eta0
                  end))
              end
              __frame1[2][1] = function()
                return idris["Prelude.Types.case[4988]case block in rangeFromTo"](__arg0)(__arg1)(idris["Prelude.Types.>_Ord__Nat"](__arg1)(__arg0))
              end
              __frame1[3] = __frame1[2][__frame1[1]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["Prelude.Types.rangeFromTo_Range__Nat"] = function(__arg0)
  return function(__arg1)
      return (function()
          return idris["Prelude.Types.case[4960]rangeFromTo"](__arg1)(__arg0)(idris["Prelude.Types.>_Ord__Nat"](__arg1)(__arg0))
        end)()
    end
end
idris["Plugin.zipWithIndex"] = function(__arg0)
  return function(__arg1)
      return (function()
          return idris["Data.List.zip"](nil)(nil)(__arg1)(idris["Prelude.Types.rangeFromTo_Range__Nat"](bigint:new("0"))(idris["Prelude.Types.minus"](idris["Prelude.Types.List.length"](nil)(__arg1))(bigint:new("1") + bigint:new("0"))))
        end)()
    end
end
idris["Data.List1.cons"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil
              }
              __frame1[1] = {}
              __frame1[1]["tag"] = "0"
              __frame1[1]["arg1"] = __arg1
              __frame1[1]["arg2"] = idris["Data.List1.forget"](nil)(__arg2)
              return __frame1[1]
            end)()
        end
    end
end
idris["Foreign.connect"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return (function()
                              local __frame1 = {
                                nil,
                                nil,
                                nil,
                                nil
                              }
                              __frame1[1] = __arg1
                              __frame1[2] = {
                                nil
                              }
                              __frame1[2]["0"] = function()
                                local __e2 = __frame1[1]["arg2"]
                                return __e2(nil)(function(__eta0)
                                    return idris["Foreign.prim__connect"](__arg2)(__arg3)(__arg4)(__arg5)(function(s)
                                        return __arg6(s)
                                      end)(__eta0)
                                  end)
                              end
                              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                              if __frame1[3] then
                                __frame1[4] = __frame1[3]()
                              else
                                idris["error"]("Impossible else branch")
                              end
                              return __frame1[4]
                            end)()
                        end
                    end
                end
            end
        end
    end
end
idris["Prelude.Interfaces.concatMap"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return (function()
                      local __frame1 = {
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame1[1] = idris["Builtin.fst"](nil)(nil)(__arg3)
                      __frame1[2] = {
                        nil
                      }
                      __frame1[2]["0"] = function()
                        local __e1 = __frame1[1]["arg1"]
                        return function(__arg5)
                            local __frame3 = {
                              nil,
                              nil,
                              nil,
                              nil
                            }
                            __frame3[1] = idris["Builtin.snd"](nil)(nil)(__arg3)
                            __frame3[2] = {
                              nil
                            }
                            __frame3[2]["0"] = function()
                              local __e3 = __frame3[1]["arg2"]
                              return __e3
                            end
                            __frame3[3] = __frame3[2][__frame3[1]["tag"]]
                            if __frame3[3] then
                              __frame3[4] = __frame3[3]()
                            else
                              idris["error"]("Impossible else branch")
                            end
                            return __e1(nil)(nil)(function(__eta0)
                                return function(__arg6)
                                    local __frame5 = {
                                      nil,
                                      nil,
                                      nil,
                                      nil
                                    }
                                    __frame5[1] = idris["Builtin.snd"](nil)(nil)(__arg3)
                                    __frame5[2] = {
                                      nil
                                    }
                                    __frame5[2]["0"] = function()
                                      local __e4 = __frame5[1]["arg1"]
                                      return __e4(__arg4(__eta0))(__arg6)
                                    end
                                    __frame5[3] = __frame5[2][__frame5[1]["tag"]]
                                    if __frame5[3] then
                                      __frame5[4] = __frame5[3]()
                                    else
                                      idris["error"]("Impossible else branch")
                                    end
                                    return __frame5[4]
                                  end
                              end)(__frame3[4])(__arg5)
                          end
                      end
                      __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                      if __frame1[3] then
                        __frame1[4] = __frame1[3]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame1[4]
                    end)()
                end
            end
        end
    end
end
idris["Text.Lexer.Core.concatMap"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg3
                  __frame1[2] = {
                    nil,
                    nil
                  }
                  __frame1[2]["0"] = function()
                    local __frame2 = {
                      nil
                    }
                    __frame2[1] = {}
                    __frame2[1]["tag"] = "0"
                    return __frame2[1]
                  end
                  __frame1[2]["1"] = function()
                    local __frame2 = {
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    local __e2 = __frame1[1]["arg1"]
                    local __e3 = __frame1[1]["arg2"]
                    __frame2[1] = __e3
                    __frame2[2] = {
                      nil,
                      nil
                    }
                    __frame2[2]["0"] = function()
                      return __arg2(__e2)
                    end
                    __frame2[2]["1"] = function()
                      local __frame3 = {
                        nil
                      }
                      __frame3[1] = {}
                      __frame3[1]["tag"] = "6"
                      __frame3[1]["arg1"] = __arg2(__e2)
                      __frame3[1]["arg2"] = idris["Text.Lexer.Core.concatMap"](nil)(nil)(__arg2)(__e3)
                      return __frame3[1]
                    end
                    __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                    if __frame2[3] then
                      __frame2[4] = __frame2[3]()
                    else
                      idris["error"]("Impossible else branch")
                    end
                    return __frame2[4]
                  end
                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[4]
                end)()
            end
        end
    end
end
idris["Text.Lexer.case[484]exact"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil,
            nil
          }
          __frame1[2]["0"] = function()
            return idris["Text.Lexer.Core.fail"](nil)
          end
          __frame1[2]["1"] = function()
            local __frame2 = {
              nil
            }
            local __e2 = __frame1[1]["arg1"]
            local __e3 = __frame1[1]["arg2"]
            __frame2[1] = {}
            __frame2[1]["tag"] = "1"
            __frame2[1]["arg1"] = __e2
            __frame2[1]["arg2"] = __e3
            return idris["Text.Lexer.Core.concatMap"](nil)(nil)(function(__eta0)
                return idris["Text.Lexer.is"](__eta0)
              end)(__frame2[1])
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Text.Lexer.exact"] = function(__arg0)
  return (function()
      return idris["Text.Lexer.case[484]exact"](__arg0)(idris["Prelude.Types.unpack"](__arg0))
    end)()
end
idris["Prelude.Types.chr"] = function(__ext0)
  return (function()
      return utf8.char(__ext0)
    end)()
end
idris["Foreign.bufexists"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg1
              __frame1[2] = {
                nil
              }
              __frame1[2]["0"] = function()
                local __e1 = __frame1[1]["arg1"]
                return __e1
              end
              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              __frame1[5] = __frame1[4]
              __frame1[6] = {
                nil
              }
              __frame1[6]["0"] = function()
                local __frame2 = {
                  nil,
                  nil,
                  nil,
                  nil
                }
                local __e2 = __frame1[5]["arg2"]
                __frame2[1] = __arg1
                __frame2[2] = {
                  nil
                }
                __frame2[2]["0"] = function()
                  local __e4 = __frame2[1]["arg2"]
                  return __e4(nil)(function(__eta0)
                      return idris["Foreign.prim__bufexists"](__arg2)(__eta0)
                    end)
                end
                __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                if __frame2[3] then
                  __frame2[4] = __frame2[3]()
                else
                  idris["error"]("Impossible else branch")
                end
                return __e2(nil)(nil)(__frame2[4])(function(__bind0)
                    local __frame3 = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    __frame3[1] = __bind0
                    __frame3[2] = {
                      nil
                    }
                    __frame3[2][0] = function()
                      local __frame4 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame4[1] = __arg1
                      __frame4[2] = {
                        nil
                      }
                      __frame4[2]["0"] = function()
                        local __e5 = __frame4[1]["arg1"]
                        return __e5
                      end
                      __frame4[3] = __frame4[2][__frame4[1]["tag"]]
                      if __frame4[3] then
                        __frame4[4] = __frame4[3]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      __frame4[5] = __frame4[4]
                      __frame4[6] = {
                        nil
                      }
                      __frame4[6]["0"] = function()
                        local __e6 = __frame4[5]["arg1"]
                        return __e6
                      end
                      __frame4[7] = __frame4[6][__frame4[5]["tag"]]
                      if __frame4[7] then
                        __frame4[8] = __frame4[7]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      __frame4[9] = __frame4[8]
                      __frame4[10] = {
                        nil
                      }
                      __frame4[10]["0"] = function()
                        local __e5 = __frame4[9]["arg2"]
                        return __e5(nil)(1)
                      end
                      __frame4[11] = __frame4[10][__frame4[9]["tag"]]
                      if __frame4[11] then
                        __frame4[12] = __frame4[11]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame4[12]
                    end
                    __frame3[15] = __frame3[2][__frame3[1]]
                    if __frame3[15] then
                      __frame3[16] = __frame3[15]()
                    else
                      __frame3[3] = __arg1
                      __frame3[4] = {
                        nil
                      }
                      __frame3[4]["0"] = function()
                        local __e5 = __frame3[3]["arg1"]
                        return __e5
                      end
                      __frame3[5] = __frame3[4][__frame3[3]["tag"]]
                      if __frame3[5] then
                        __frame3[6] = __frame3[5]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      __frame3[7] = __frame3[6]
                      __frame3[8] = {
                        nil
                      }
                      __frame3[8]["0"] = function()
                        local __e6 = __frame3[7]["arg1"]
                        return __e6
                      end
                      __frame3[9] = __frame3[8][__frame3[7]["tag"]]
                      if __frame3[9] then
                        __frame3[10] = __frame3[9]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      __frame3[11] = __frame3[10]
                      __frame3[12] = {
                        nil
                      }
                      __frame3[12]["0"] = function()
                        local __e5 = __frame3[11]["arg2"]
                        return __e5(nil)(0)
                      end
                      __frame3[13] = __frame3[12][__frame3[11]["tag"]]
                      if __frame3[13] then
                        __frame3[14] = __frame3[13]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      __frame3[16] = __frame3[14]
                    end
                    return __frame3[16]
                  end)
              end
              __frame1[7] = __frame1[6][__frame1[5]["tag"]]
              if __frame1[7] then
                __frame1[8] = __frame1[7]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[8]
            end)()
        end
    end
end
idris["Data.List.break"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              return idris["Data.List.span"](nil)(function(__eta0)
                  return idris["Prelude.Basics.not"](__arg1(__eta0))
                end)(__arg2)
            end)()
        end
    end
end
idris["Data.List.case[2177]split"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg3
                  __frame1[2] = {
                    nil
                  }
                  __frame1[2]["0"] = function()
                    local __frame2 = {
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    local __e2 = __frame1[1]["arg1"]
                    local __e3 = __frame1[1]["arg2"]
                    __frame2[1] = __e3
                    __frame2[2] = {
                      nil,
                      nil
                    }
                    __frame2[2]["0"] = function()
                      return idris["Data.List1.singleton"](nil)(__e2)
                    end
                    __frame2[2]["1"] = function()
                      local __e7 = __frame2[1]["arg2"]
                      return idris["Data.List1.cons"](nil)(__e2)(idris["Data.List.split"](nil)(__arg2)(__e7))
                    end
                    __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                    if __frame2[3] then
                      __frame2[4] = __frame2[3]()
                    else
                      idris["error"]("Impossible else branch")
                    end
                    return __frame2[4]
                  end
                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[4]
                end)()
            end
        end
    end
end
idris["Data.List.split"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              return idris["Data.List.case[2177]split"](nil)(__arg2)(__arg1)(idris["Data.List.break"](nil)(__arg1)(__arg2))
            end)()
        end
    end
end
idris["Data.Strings.split"] = function(__arg0)
  return function(__arg1)
      return (function()
          return idris["Data.List1.map_Functor__List1"](nil)(nil)(function(__eta0)
              return idris["Prelude.Types.pack"](__eta0)
            end)(idris["Data.List.split"](nil)(__arg0)(idris["Prelude.Types.unpack"](__arg1)))
        end)()
    end
end
idris["Utils.Path.bodySeparator"] = (function()
  local __frame1 = {
    nil,
    nil,
    nil,
    nil,
    nil
  }
  __frame1[1] = {}
  __frame1[1]["tag"] = "0"
  __frame1[1]["arg1"] = function(__arg2)
    return function(__arg3)
        return idris["Utils.Path.==_Eq__PathTokenKind"](__arg2)(__arg3)
      end
  end
  __frame1[1]["arg2"] = function(__arg4)
    return function(__arg5)
        return idris["Utils.Path./=_Eq__PathTokenKind"](__arg4)(__arg5)
      end
  end
  __frame1[2] = {}
  __frame1[2]["tag"] = "0"
  __frame1[2]["arg1"] = function(__arg272)
    return idris["Utils.Path.TokType_TokenKind__PathTokenKind"](__arg272)
  end
  __frame1[2]["arg2"] = function(kind)
    return function(__arg273)
        return idris["Utils.Path.tokValue_TokenKind__PathTokenKind"](kind)(__arg273)
      end
  end
  __frame1[3] = {}
  __frame1[3]["tag"] = "0"
  __frame1[3]["arg1"] = __frame1[1]
  __frame1[3]["arg2"] = __frame1[2]
  __frame1[4] = {}
  __frame1[4]["tag"] = "1"
  __frame1[4]["arg1"] = "\\"
  __frame1[5] = {}
  __frame1[5]["tag"] = "10"
  __frame1[5]["arg1"] = 0
  __frame1[5]["arg2"] = 0
  __frame1[5]["arg3"] = idris["Text.Parser.match"](nil)(__frame1[3])(__frame1[4])
  __frame1[5]["arg4"] = function()
    local __frame2 = {
      nil,
      nil,
      nil,
      nil
    }
    __frame2[1] = {}
    __frame2[1]["tag"] = "0"
    __frame2[1]["arg1"] = function(__arg2)
      return function(__arg3)
          return idris["Utils.Path.==_Eq__PathTokenKind"](__arg2)(__arg3)
        end
    end
    __frame2[1]["arg2"] = function(__arg4)
      return function(__arg5)
          return idris["Utils.Path./=_Eq__PathTokenKind"](__arg4)(__arg5)
        end
    end
    __frame2[2] = {}
    __frame2[2]["tag"] = "0"
    __frame2[2]["arg1"] = function(__arg272)
      return idris["Utils.Path.TokType_TokenKind__PathTokenKind"](__arg272)
    end
    __frame2[2]["arg2"] = function(kind)
      return function(__arg273)
          return idris["Utils.Path.tokValue_TokenKind__PathTokenKind"](kind)(__arg273)
        end
    end
    __frame2[3] = {}
    __frame2[3]["tag"] = "0"
    __frame2[3]["arg1"] = __frame2[1]
    __frame2[3]["arg2"] = __frame2[2]
    __frame2[4] = {}
    __frame2[4]["tag"] = "1"
    __frame2[4]["arg1"] = "/"
    return idris["Text.Parser.match"](nil)(__frame2[3])(__frame2[4])
  end
  return __frame1[5]
end)()
idris["Text.Quantity.between"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil
          }
          __frame1[1] = {}
          __frame1[1]["tag"] = "1"
          __frame1[1]["arg1"] = __arg1
          __frame1[2] = {}
          __frame1[2]["tag"] = "0"
          __frame1[2]["arg1"] = __arg0
          __frame1[2]["arg2"] = __frame1[1]
          return __frame1[2]
        end)()
    end
end
idris["Builtin.believe_me"] = function(__arg0)
  return function(__arg1)
      return function(__ext0)
          return (function()
              return __ext0
            end)()
        end
    end
end
idris["Data.Strings.strM"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil
      }
      __frame1[2][""] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "0"
        return __frame2[1]
      end
      __frame1[4] = __frame1[2][__frame1[1]]
      if __frame1[4] then
        __frame1[5] = __frame1[4]()
      else
        __frame1[3] = {}
        __frame1[3]["tag"] = "1"
        __frame1[3]["arg1"] = utf8.sub(__arg0, 1, 1)
        __frame1[3]["arg2"] = utf8.sub(__arg0, 2)
        __frame1[5] = idris["Builtin.believe_me"](nil)(nil)(__frame1[3])
      end
      return __frame1[5]
    end)()
end
idris["PrimIO.prim__forgetPtr"] = function(__arg0)
  return function(__ext0)
      return (function()
          return idris["Builtin.believe_me"](nil)(nil)(__ext0)
        end)()
    end
end
idris["System.File.fGetLine"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg1
              __frame1[2] = {
                nil
              }
              __frame1[2]["0"] = function()
                local __e1 = __frame1[1]["arg1"]
                return __e1
              end
              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              __frame1[5] = __frame1[4]
              __frame1[6] = {
                nil
              }
              __frame1[6]["0"] = function()
                local __frame2 = {
                  nil,
                  nil,
                  nil,
                  nil
                }
                local __e2 = __frame1[5]["arg2"]
                __frame2[1] = __arg1
                __frame2[2] = {
                  nil
                }
                __frame2[2]["0"] = function()
                  local __e4 = __frame2[1]["arg2"]
                  return __e4(nil)(function(__eta0)
                      return idris["System.File.prim__readLine"](__arg2)(__eta0)
                    end)
                end
                __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                if __frame2[3] then
                  __frame2[4] = __frame2[3]()
                else
                  idris["error"]("Impossible else branch")
                end
                return __e2(nil)(nil)(__frame2[4])(function(res)
                    return idris["System.File.case[934]fGetLine"](nil)(__arg1)(__arg2)(res)(idris["Prelude.EqOrd./=_Eq__Int"](idris["PrimIO.prim__nullAnyPtr"](idris["PrimIO.prim__forgetPtr"](nil)(res)))(bigint.tonumber(bigint:new("0"))))
                  end)
              end
              __frame1[7] = __frame1[6][__frame1[5]["tag"]]
              if __frame1[7] then
                __frame1[8] = __frame1[7]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[8]
            end)()
        end
    end
end
idris["Commands.extractName"] = function(__arg0)
  return (function()
      return idris["Commands.case[4945]extractName"](__arg0)(idris["Data.Strings.strM"](__arg0))
    end)()
end
idris["System.exitWith"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg3
                  __frame1[2] = {
                    nil,
                    nil
                  }
                  __frame1[2]["0"] = function()
                    local __frame2 = {
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    __frame2[1] = __arg2
                    __frame2[2] = {
                      nil
                    }
                    __frame2[2]["0"] = function()
                      local __e2 = __frame2[1]["arg2"]
                      return __e2(nil)(idris["Builtin.believe_me"](nil)(nil)(function(__eta0)
                          return idris["System.prim__exit"](0)(__eta0)
                        end))
                    end
                    __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                    if __frame2[3] then
                      __frame2[4] = __frame2[3]()
                    else
                      idris["error"]("Impossible else branch")
                    end
                    return __frame2[4]
                  end
                  __frame1[2]["1"] = function()
                    local __frame2 = {
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    local __e0 = __frame1[1]["arg1"]
                    __frame2[1] = __arg2
                    __frame2[2] = {
                      nil
                    }
                    __frame2[2]["0"] = function()
                      local __e2 = __frame2[1]["arg2"]
                      return __e2(nil)(idris["Builtin.believe_me"](nil)(nil)(function(__eta0)
                          return idris["System.prim__exit"](__e0)(__eta0)
                        end))
                    end
                    __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                    if __frame2[3] then
                      __frame2[4] = __frame2[3]()
                    else
                      idris["error"]("Impossible else branch")
                    end
                    return __frame2[4]
                  end
                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[4]
                end)()
            end
        end
    end
end
idris["System.exitFailure"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil
              }
              __frame1[1] = {}
              __frame1[1]["tag"] = "0"
              __frame1[2] = {}
              __frame1[2]["tag"] = "1"
              __frame1[2]["arg1"] = 1
              __frame1[2]["arg2"] = __frame1[1]
              return idris["System.exitWith"](nil)(nil)(__arg2)(__frame1[2])
            end)()
        end
    end
end
idris["Data.Primitives.Views.IntV.divides"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil
          }
          __frame1[2][0] = function()
            local __frame2 = {
              nil
            }
            __frame2[1] = {}
            __frame2[1]["tag"] = "0"
            return __frame2[1]
          end
          __frame1[5] = __frame1[2][__frame1[1]]
          if __frame1[5] then
            __frame1[6] = __frame1[5]()
          else
            local dividend = idris["Data.Primitives.Views.IntV.case[429]divides"](__arg1)(__arg0)(idris["Prelude.EqOrd.<_Ord__Int"](__arg1)(bigint.tonumber(bigint:new("0"))))
            local remainder = idris["Prelude.Num.abs_Abs__Int"](idris["Prelude.Num.-_Neg__Int"](__arg0)(dividend * __arg1))
            __frame1[3] = {}
            __frame1[3]["tag"] = "0"
            __frame1[4] = {}
            __frame1[4]["tag"] = "1"
            __frame1[4]["arg1"] = dividend
            __frame1[4]["arg2"] = remainder
            __frame1[4]["arg3"] = idris["Builtin.believe_me"](nil)(nil)(__frame1[3])
            __frame1[6] = idris["Builtin.believe_me"](nil)(nil)(__frame1[4])
          end
          return __frame1[6]
        end)()
    end
end
idris["Utils.Hex.with[577]asHex,asHex'"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg2
                  __frame1[2] = {
                    nil
                  }
                  __frame1[2]["1"] = function()
                    local __frame2 = {
                      nil
                    }
                    local __e1 = __frame1[1]["arg1"]
                    local __e2 = __frame1[1]["arg2"]
                    __frame2[1] = {}
                    __frame2[1]["tag"] = "1"
                    __frame2[1]["arg1"] = idris["Utils.Hex.hexDigit"](__e2)
                    __frame2[1]["arg2"] = __arg3
                    return idris["Utils.Hex.2041:568:asHex'"](__arg0)(__e1)(__frame2[1])
                  end
                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[4]
                end)()
            end
        end
    end
end
idris["Utils.Hex.2041:568:asHex'"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg1
              __frame1[2] = {
                nil
              }
              __frame1[2][0] = function()
                return __arg2
              end
              __frame1[3] = __frame1[2][__frame1[1]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                __frame1[4] = idris["Utils.Hex.with[577]asHex,asHex'"](__arg1)(__arg1)(idris["Data.Primitives.Views.IntV.divides"](__arg1)(16))(__arg2)
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["Utils.Hex.case[606]asHex"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil,
            nil
          }
          __frame1[2][0] = function()
            local __frame2 = {
              nil
            }
            __frame2[1] = {}
            __frame2[1]["tag"] = "0"
            return idris["Prelude.Types.pack"](idris["Utils.Hex.2041:568:asHex'"](__arg0)(__arg0)(__frame2[1]))
          end
          __frame1[2][1] = function()
            return "0"
          end
          __frame1[3] = __frame1[2][__frame1[1]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Text.Quantity.atMost"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "1"
      __frame1[1]["arg1"] = __arg0
      __frame1[2] = {}
      __frame1[2]["tag"] = "0"
      __frame1[2]["arg1"] = bigint:new("0")
      __frame1[2]["arg2"] = __frame1[1]
      return __frame1[2]
    end)()
end
idris["Text.Quantity.atLeast"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      __frame1[2] = {}
      __frame1[2]["tag"] = "0"
      __frame1[2]["arg1"] = __arg0
      __frame1[2]["arg2"] = __frame1[1]
      return __frame1[2]
    end)()
end
idris["Text.Parser.count1"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg2
                  __frame1[2] = {
                    nil
                  }
                  __frame1[2]["0"] = function()
                    local __e0 = __frame1[1]["arg1"]
                    return __e0
                  end
                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  __frame1[5] = {}
                  __frame1[5]["tag"] = "8"
                  __frame1[5]["arg1"] = idris["Prelude.Basics.||"](idris["Data.Nat.isSucc"](__frame1[4]))(function()
                    return 1
                  end)
                  __frame1[5]["arg2"] = __arg3
                  __frame1[5]["arg3"] = function()
                    return function(x)
                        local __frame3 = {
                          nil,
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        __frame3[1] = __arg2
                        __frame3[2] = {
                          nil
                        }
                        __frame3[2]["0"] = function()
                          local __e0 = __frame3[1]["arg1"]
                          return __e0
                        end
                        __frame3[3] = __frame3[2][__frame3[1]["tag"]]
                        if __frame3[3] then
                          __frame3[4] = __frame3[3]()
                        else
                          idris["error"]("Impossible else branch")
                        end
                        __frame3[5] = {}
                        __frame3[5]["tag"] = "9"
                        __frame3[5]["arg1"] = idris["Data.Nat.isSucc"](__frame3[4])
                        __frame3[5]["arg2"] = 1
                        __frame3[5]["arg3"] = idris["Text.Parser.count"](nil)(nil)(__arg2)(__arg3)
                        __frame3[5]["arg4"] = function(xs)
                          local __frame4 = {
                            nil,
                            nil
                          }
                          __frame4[1] = {}
                          __frame4[1]["tag"] = "1"
                          __frame4[1]["arg1"] = x
                          __frame4[1]["arg2"] = xs
                          __frame4[2] = {}
                          __frame4[2]["tag"] = "0"
                          __frame4[2]["arg1"] = __frame4[1]
                          return __frame4[2]
                        end
                        return __frame3[5]
                      end
                  end
                  return __frame1[5]
                end)()
            end
        end
    end
end
idris["Text.Parser.count"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg2
                  __frame1[2] = {
                    nil
                  }
                  __frame1[2]["0"] = function()
                    local __frame2 = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    local __e0 = __frame1[1]["arg1"]
                    local __e1 = __frame1[1]["arg2"]
                    __frame2[1] = __e0
                    __frame2[2] = {
                      nil
                    }
                    __frame2[2]["0"] = function()
                      local __frame3 = {
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame3[1] = __e1
                      __frame3[2] = {
                        nil,
                        nil
                      }
                      __frame3[2]["0"] = function()
                        return idris["Text.Parser.many"](nil)(nil)(__arg3)
                      end
                      __frame3[2]["1"] = function()
                        local __frame4 = {
                          nil,
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        local __e5 = __frame3[1]["arg1"]
                        __frame4[1] = __e5
                        __frame4[2] = {
                          nil
                        }
                        __frame4[2]["0"] = function()
                          local __frame5 = {
                            nil,
                            nil
                          }
                          __frame5[1] = {}
                          __frame5[1]["tag"] = "0"
                          __frame5[2] = {}
                          __frame5[2]["tag"] = "0"
                          __frame5[2]["arg1"] = __frame5[1]
                          return __frame5[2]
                        end
                        __frame4[4] = __frame4[2][bigint.tostring(__frame4[1])]
                        if __frame4[4] then
                          __frame4[5] = __frame4[4]()
                        else
                          local __e6 = __e5 - bigint:new("1")
                          __frame4[3] = {}
                          __frame4[3]["tag"] = "0"
                          __frame4[5] = idris["Text.Parser.option"](nil)(nil)(0)(__frame4[3])(idris["Text.Parser.count1"](nil)(nil)(idris["Text.Quantity.atMost"](__e6))(__arg3))
                        end
                        return __frame4[5]
                      end
                      __frame3[3] = __frame3[2][__frame3[1]["tag"]]
                      if __frame3[3] then
                        __frame3[4] = __frame3[3]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame3[4]
                    end
                    __frame2[7] = __frame2[2][bigint.tostring(__frame2[1])]
                    if __frame2[7] then
                      __frame2[8] = __frame2[7]()
                    else
                      local __e2 = __e0 - bigint:new("1")
                      __frame2[3] = __e1
                      __frame2[4] = {
                        nil,
                        nil
                      }
                      __frame2[4]["0"] = function()
                        return idris["Text.Parser.count1"](nil)(nil)(idris["Text.Quantity.atLeast"](__e2))(__arg3)
                      end
                      __frame2[4]["1"] = function()
                        local __frame3 = {
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        local __e9 = __frame2[3]["arg1"]
                        __frame3[1] = __e9
                        __frame3[2] = {
                          nil
                        }
                        __frame3[2]["0"] = function()
                          local __frame4 = {
                            nil
                          }
                          __frame4[1] = {}
                          __frame4[1]["tag"] = "4"
                          __frame4[1]["arg1"] = 1
                          __frame4[1]["arg2"] = "Quantity out of order"
                          return __frame4[1]
                        end
                        __frame3[3] = __frame3[2][bigint.tostring(__frame3[1])]
                        if __frame3[3] then
                          __frame3[4] = __frame3[3]()
                        else
                          local __e10 = __e9 - bigint:new("1")
                          __frame3[4] = idris["Text.Parser.count1"](nil)(nil)(idris["Text.Quantity.between"](bigint:new("1") + __e2)(__e10))(__arg3)
                        end
                        return __frame3[4]
                      end
                      __frame2[5] = __frame2[4][__frame2[3]["tag"]]
                      if __frame2[5] then
                        __frame2[6] = __frame2[5]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      __frame2[8] = __frame2[6]
                    end
                    return __frame2[8]
                  end
                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[4]
                end)()
            end
        end
    end
end
idris["Utils.Path.verbatim"] = (function()
  local __frame1 = {
    nil,
    nil,
    nil,
    nil,
    nil
  }
  __frame1[1] = {}
  __frame1[1]["tag"] = "0"
  __frame1[1]["arg1"] = function(__arg2)
    return function(__arg3)
        return idris["Utils.Path.==_Eq__PathTokenKind"](__arg2)(__arg3)
      end
  end
  __frame1[1]["arg2"] = function(__arg4)
    return function(__arg5)
        return idris["Utils.Path./=_Eq__PathTokenKind"](__arg4)(__arg5)
      end
  end
  __frame1[2] = {}
  __frame1[2]["tag"] = "0"
  __frame1[2]["arg1"] = function(__arg272)
    return idris["Utils.Path.TokType_TokenKind__PathTokenKind"](__arg272)
  end
  __frame1[2]["arg2"] = function(kind)
    return function(__arg273)
        return idris["Utils.Path.tokValue_TokenKind__PathTokenKind"](kind)(__arg273)
      end
  end
  __frame1[3] = {}
  __frame1[3]["tag"] = "0"
  __frame1[3]["arg1"] = __frame1[1]
  __frame1[3]["arg2"] = __frame1[2]
  __frame1[4] = {}
  __frame1[4]["tag"] = "1"
  __frame1[4]["arg1"] = "\\"
  __frame1[5] = {}
  __frame1[5]["tag"] = "8"
  __frame1[5]["arg1"] = 0
  __frame1[5]["arg2"] = idris["Text.Parser.count"](nil)(nil)(idris["Text.Quantity.exactly"](bigint:new("1") + bigint:new("1") + bigint:new("0")))(idris["Text.Parser.match"](nil)(__frame1[3])(__frame1[4]))
  __frame1[5]["arg3"] = function()
    return function(___3341)
        local __frame3 = {
          nil,
          nil,
          nil,
          nil,
          nil
        }
        __frame3[1] = {}
        __frame3[1]["tag"] = "0"
        __frame3[1]["arg1"] = function(__arg2)
          return function(__arg3)
              return idris["Utils.Path.==_Eq__PathTokenKind"](__arg2)(__arg3)
            end
        end
        __frame3[1]["arg2"] = function(__arg4)
          return function(__arg5)
              return idris["Utils.Path./=_Eq__PathTokenKind"](__arg4)(__arg5)
            end
        end
        __frame3[2] = {}
        __frame3[2]["tag"] = "0"
        __frame3[2]["arg1"] = function(__arg272)
          return idris["Utils.Path.TokType_TokenKind__PathTokenKind"](__arg272)
        end
        __frame3[2]["arg2"] = function(kind)
          return function(__arg273)
              return idris["Utils.Path.tokValue_TokenKind__PathTokenKind"](kind)(__arg273)
            end
        end
        __frame3[3] = {}
        __frame3[3]["tag"] = "0"
        __frame3[3]["arg1"] = __frame3[1]
        __frame3[3]["arg2"] = __frame3[2]
        __frame3[4] = {}
        __frame3[4]["tag"] = "1"
        __frame3[4]["arg1"] = "?"
        __frame3[5] = {}
        __frame3[5]["tag"] = "8"
        __frame3[5]["arg1"] = 0
        __frame3[5]["arg2"] = idris["Text.Parser.match"](nil)(__frame3[3])(__frame3[4])
        __frame3[5]["arg3"] = function()
          return function(___3371)
              local __frame5 = {
                nil,
                nil,
                nil,
                nil,
                nil
              }
              __frame5[1] = {}
              __frame5[1]["tag"] = "0"
              __frame5[1]["arg1"] = function(__arg2)
                return function(__arg3)
                    return idris["Utils.Path.==_Eq__PathTokenKind"](__arg2)(__arg3)
                  end
              end
              __frame5[1]["arg2"] = function(__arg4)
                return function(__arg5)
                    return idris["Utils.Path./=_Eq__PathTokenKind"](__arg4)(__arg5)
                  end
              end
              __frame5[2] = {}
              __frame5[2]["tag"] = "0"
              __frame5[2]["arg1"] = function(__arg272)
                return idris["Utils.Path.TokType_TokenKind__PathTokenKind"](__arg272)
              end
              __frame5[2]["arg2"] = function(kind)
                return function(__arg273)
                    return idris["Utils.Path.tokValue_TokenKind__PathTokenKind"](kind)(__arg273)
                  end
              end
              __frame5[3] = {}
              __frame5[3]["tag"] = "0"
              __frame5[3]["arg1"] = __frame5[1]
              __frame5[3]["arg2"] = __frame5[2]
              __frame5[4] = {}
              __frame5[4]["tag"] = "1"
              __frame5[4]["arg1"] = "\\"
              __frame5[5] = {}
              __frame5[5]["tag"] = "8"
              __frame5[5]["arg1"] = 1
              __frame5[5]["arg2"] = idris["Text.Parser.match"](nil)(__frame5[3])(__frame5[4])
              __frame5[5]["arg3"] = function()
                return function(___3389)
                    local __frame7 = {
                      nil,
                      nil
                    }
                    __frame7[1] = {}
                    __frame7[1]["tag"] = "0"
                    __frame7[2] = {}
                    __frame7[2]["tag"] = "0"
                    __frame7[2]["arg1"] = __frame7[1]
                    return __frame7[2]
                  end
              end
              return __frame5[5]
            end
        end
        return __frame3[5]
      end
  end
  return __frame1[5]
end)()
idris["Utils.Path.verbatimUnc"] = (function()
  local __frame1 = {
    nil
  }
  __frame1[1] = {}
  __frame1[1]["tag"] = "8"
  __frame1[1]["arg1"] = 0
  __frame1[1]["arg2"] = idris["Utils.Path.verbatim"]
  __frame1[1]["arg3"] = function()
    return function(___3473)
        local __frame3 = {
          nil,
          nil,
          nil,
          nil,
          nil
        }
        __frame3[1] = {}
        __frame3[1]["tag"] = "0"
        __frame3[1]["arg1"] = function(__arg2)
          return function(__arg3)
              return idris["Utils.Path.==_Eq__PathTokenKind"](__arg2)(__arg3)
            end
        end
        __frame3[1]["arg2"] = function(__arg4)
          return function(__arg5)
              return idris["Utils.Path./=_Eq__PathTokenKind"](__arg4)(__arg5)
            end
        end
        __frame3[2] = {}
        __frame3[2]["tag"] = "0"
        __frame3[2]["arg1"] = function(__arg272)
          return idris["Utils.Path.TokType_TokenKind__PathTokenKind"](__arg272)
        end
        __frame3[2]["arg2"] = function(kind)
          return function(__arg273)
              return idris["Utils.Path.tokValue_TokenKind__PathTokenKind"](kind)(__arg273)
            end
        end
        __frame3[3] = {}
        __frame3[3]["tag"] = "0"
        __frame3[3]["arg1"] = __frame3[1]
        __frame3[3]["arg2"] = __frame3[2]
        __frame3[4] = {}
        __frame3[4]["tag"] = "0"
        __frame3[5] = {}
        __frame3[5]["tag"] = "8"
        __frame3[5]["arg1"] = 0
        __frame3[5]["arg2"] = idris["Text.Parser.match"](nil)(__frame3[3])(__frame3[4])
        __frame3[5]["arg3"] = function()
          return function(server)
              local __frame5 = {
                nil
              }
              __frame5[1] = {}
              __frame5[1]["tag"] = "8"
              __frame5[1]["arg1"] = 0
              __frame5[1]["arg2"] = idris["Utils.Path.bodySeparator"]
              __frame5[1]["arg3"] = function()
                return function(___3501)
                    local __frame7 = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    __frame7[1] = {}
                    __frame7[1]["tag"] = "0"
                    __frame7[1]["arg1"] = function(__arg2)
                      return function(__arg3)
                          return idris["Utils.Path.==_Eq__PathTokenKind"](__arg2)(__arg3)
                        end
                    end
                    __frame7[1]["arg2"] = function(__arg4)
                      return function(__arg5)
                          return idris["Utils.Path./=_Eq__PathTokenKind"](__arg4)(__arg5)
                        end
                    end
                    __frame7[2] = {}
                    __frame7[2]["tag"] = "0"
                    __frame7[2]["arg1"] = function(__arg272)
                      return idris["Utils.Path.TokType_TokenKind__PathTokenKind"](__arg272)
                    end
                    __frame7[2]["arg2"] = function(kind)
                      return function(__arg273)
                          return idris["Utils.Path.tokValue_TokenKind__PathTokenKind"](kind)(__arg273)
                        end
                    end
                    __frame7[3] = {}
                    __frame7[3]["tag"] = "0"
                    __frame7[3]["arg1"] = __frame7[1]
                    __frame7[3]["arg2"] = __frame7[2]
                    __frame7[4] = {}
                    __frame7[4]["tag"] = "0"
                    __frame7[5] = {}
                    __frame7[5]["tag"] = "8"
                    __frame7[5]["arg1"] = 1
                    __frame7[5]["arg2"] = idris["Text.Parser.match"](nil)(__frame7[3])(__frame7[4])
                    __frame7[5]["arg3"] = function()
                      return function(share)
                          local __frame9 = {
                            nil,
                            nil
                          }
                          __frame9[1] = {}
                          __frame9[1]["tag"] = "0"
                          __frame9[1]["arg1"] = server
                          __frame9[1]["arg2"] = share
                          __frame9[2] = {}
                          __frame9[2]["tag"] = "0"
                          __frame9[2]["arg1"] = __frame9[1]
                          return __frame9[2]
                        end
                    end
                    return __frame7[5]
                  end
              end
              return __frame5[1]
            end
        end
        return __frame3[5]
      end
  end
  return __frame1[1]
end)()
idris["Utils.Path.unc"] = (function()
  local __frame1 = {
    nil,
    nil,
    nil,
    nil,
    nil
  }
  __frame1[1] = {}
  __frame1[1]["tag"] = "0"
  __frame1[1]["arg1"] = function(__arg2)
    return function(__arg3)
        return idris["Utils.Path.==_Eq__PathTokenKind"](__arg2)(__arg3)
      end
  end
  __frame1[1]["arg2"] = function(__arg4)
    return function(__arg5)
        return idris["Utils.Path./=_Eq__PathTokenKind"](__arg4)(__arg5)
      end
  end
  __frame1[2] = {}
  __frame1[2]["tag"] = "0"
  __frame1[2]["arg1"] = function(__arg272)
    return idris["Utils.Path.TokType_TokenKind__PathTokenKind"](__arg272)
  end
  __frame1[2]["arg2"] = function(kind)
    return function(__arg273)
        return idris["Utils.Path.tokValue_TokenKind__PathTokenKind"](kind)(__arg273)
      end
  end
  __frame1[3] = {}
  __frame1[3]["tag"] = "0"
  __frame1[3]["arg1"] = __frame1[1]
  __frame1[3]["arg2"] = __frame1[2]
  __frame1[4] = {}
  __frame1[4]["tag"] = "1"
  __frame1[4]["arg1"] = "\\"
  __frame1[5] = {}
  __frame1[5]["tag"] = "8"
  __frame1[5]["arg1"] = 0
  __frame1[5]["arg2"] = idris["Text.Parser.count"](nil)(nil)(idris["Text.Quantity.exactly"](bigint:new("1") + bigint:new("1") + bigint:new("0")))(idris["Text.Parser.match"](nil)(__frame1[3])(__frame1[4]))
  __frame1[5]["arg3"] = function()
    return function(___3405)
        local __frame3 = {
          nil,
          nil,
          nil,
          nil,
          nil
        }
        __frame3[1] = {}
        __frame3[1]["tag"] = "0"
        __frame3[1]["arg1"] = function(__arg2)
          return function(__arg3)
              return idris["Utils.Path.==_Eq__PathTokenKind"](__arg2)(__arg3)
            end
        end
        __frame3[1]["arg2"] = function(__arg4)
          return function(__arg5)
              return idris["Utils.Path./=_Eq__PathTokenKind"](__arg4)(__arg5)
            end
        end
        __frame3[2] = {}
        __frame3[2]["tag"] = "0"
        __frame3[2]["arg1"] = function(__arg272)
          return idris["Utils.Path.TokType_TokenKind__PathTokenKind"](__arg272)
        end
        __frame3[2]["arg2"] = function(kind)
          return function(__arg273)
              return idris["Utils.Path.tokValue_TokenKind__PathTokenKind"](kind)(__arg273)
            end
        end
        __frame3[3] = {}
        __frame3[3]["tag"] = "0"
        __frame3[3]["arg1"] = __frame3[1]
        __frame3[3]["arg2"] = __frame3[2]
        __frame3[4] = {}
        __frame3[4]["tag"] = "0"
        __frame3[5] = {}
        __frame3[5]["tag"] = "8"
        __frame3[5]["arg1"] = 0
        __frame3[5]["arg2"] = idris["Text.Parser.match"](nil)(__frame3[3])(__frame3[4])
        __frame3[5]["arg3"] = function()
          return function(server)
              local __frame5 = {
                nil
              }
              __frame5[1] = {}
              __frame5[1]["tag"] = "8"
              __frame5[1]["arg1"] = 0
              __frame5[1]["arg2"] = idris["Utils.Path.bodySeparator"]
              __frame5[1]["arg3"] = function()
                return function(___3445)
                    local __frame7 = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    __frame7[1] = {}
                    __frame7[1]["tag"] = "0"
                    __frame7[1]["arg1"] = function(__arg2)
                      return function(__arg3)
                          return idris["Utils.Path.==_Eq__PathTokenKind"](__arg2)(__arg3)
                        end
                    end
                    __frame7[1]["arg2"] = function(__arg4)
                      return function(__arg5)
                          return idris["Utils.Path./=_Eq__PathTokenKind"](__arg4)(__arg5)
                        end
                    end
                    __frame7[2] = {}
                    __frame7[2]["tag"] = "0"
                    __frame7[2]["arg1"] = function(__arg272)
                      return idris["Utils.Path.TokType_TokenKind__PathTokenKind"](__arg272)
                    end
                    __frame7[2]["arg2"] = function(kind)
                      return function(__arg273)
                          return idris["Utils.Path.tokValue_TokenKind__PathTokenKind"](kind)(__arg273)
                        end
                    end
                    __frame7[3] = {}
                    __frame7[3]["tag"] = "0"
                    __frame7[3]["arg1"] = __frame7[1]
                    __frame7[3]["arg2"] = __frame7[2]
                    __frame7[4] = {}
                    __frame7[4]["tag"] = "0"
                    __frame7[5] = {}
                    __frame7[5]["tag"] = "8"
                    __frame7[5]["arg1"] = 1
                    __frame7[5]["arg2"] = idris["Text.Parser.match"](nil)(__frame7[3])(__frame7[4])
                    __frame7[5]["arg3"] = function()
                      return function(share)
                          local __frame9 = {
                            nil,
                            nil
                          }
                          __frame9[1] = {}
                          __frame9[1]["tag"] = "0"
                          __frame9[1]["arg1"] = server
                          __frame9[1]["arg2"] = share
                          __frame9[2] = {}
                          __frame9[2]["tag"] = "0"
                          __frame9[2]["arg1"] = __frame9[1]
                          return __frame9[2]
                        end
                    end
                    return __frame7[5]
                  end
              end
              return __frame5[1]
            end
        end
        return __frame3[5]
      end
  end
  return __frame1[5]
end)()
idris["Utils.Hex.asHex"] = function(__arg0)
  return (function()
      return idris["Utils.Hex.case[606]asHex"](__arg0)(idris["Prelude.EqOrd.>_Ord__Int"](__arg0)(bigint.tonumber(bigint:new("0"))))
    end)()
end
idris["Text.Lexer.any"] = (function()
  return idris["Text.Lexer.Core.pred"](function(__eta0)
      return 0
    end)
end)()
idris["Text.Lexer.non"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "5"
      __frame1[1]["arg1"] = idris["Text.Lexer.Core.reject"](nil)(__arg0)
      __frame1[1]["arg2"] = idris["Text.Lexer.any"]
      return __frame1[1]
    end)()
end
idris["Text.Lexer.Core.<|>"] = function(__arg0)
  return function(__arg1)
      return function(__ext0)
          return function(__ext1)
              return (function()
                  local __frame1 = {
                    nil
                  }
                  __frame1[1] = {}
                  __frame1[1]["tag"] = "7"
                  __frame1[1]["arg1"] = __ext0
                  __frame1[1]["arg2"] = __ext1
                  return __frame1[1]
                end)()
            end
        end
    end
end
idris["Text.Lexer.opt"] = function(__arg0)
  return (function()
      return idris["Text.Lexer.Core.<|>"](nil)(nil)(__arg0)(idris["Text.Lexer.Core.empty"])
    end)()
end
idris["Text.Lexer.some"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "4"
      __frame1[1]["arg1"] = __arg0
      __frame1[1]["arg2"] = function()
        return idris["Text.Lexer.many"](__arg0)
      end
      return __frame1[1]
    end)()
end
idris["Text.Lexer.many"] = function(__arg0)
  return (function()
      return idris["Text.Lexer.opt"](idris["Text.Lexer.some"](__arg0))
    end)()
end
idris["Utils.Path.pathTokenMap"] = (function()
  local __frame1 = {
    nil,
    nil,
    nil,
    nil,
    nil,
    nil,
    nil,
    nil,
    nil,
    nil,
    nil,
    nil,
    nil,
    nil,
    nil,
    nil
  }
  __frame1[1] = {}
  __frame1[1]["tag"] = "1"
  __frame1[1]["arg1"] = "/"
  __frame1[2] = {}
  __frame1[2]["tag"] = "0"
  __frame1[2]["arg1"] = idris["Text.Lexer.is"]("/")
  __frame1[2]["arg2"] = __frame1[1]
  __frame1[3] = {}
  __frame1[3]["tag"] = "1"
  __frame1[3]["arg1"] = "\\"
  __frame1[4] = {}
  __frame1[4]["tag"] = "0"
  __frame1[4]["arg1"] = idris["Text.Lexer.is"]("\\")
  __frame1[4]["arg2"] = __frame1[3]
  __frame1[5] = {}
  __frame1[5]["tag"] = "1"
  __frame1[5]["arg1"] = ":"
  __frame1[6] = {}
  __frame1[6]["tag"] = "0"
  __frame1[6]["arg1"] = idris["Text.Lexer.is"](":")
  __frame1[6]["arg2"] = __frame1[5]
  __frame1[7] = {}
  __frame1[7]["tag"] = "1"
  __frame1[7]["arg1"] = "?"
  __frame1[8] = {}
  __frame1[8]["tag"] = "0"
  __frame1[8]["arg1"] = idris["Text.Lexer.is"]("?")
  __frame1[8]["arg2"] = __frame1[7]
  __frame1[9] = {}
  __frame1[9]["tag"] = "0"
  __frame1[10] = {}
  __frame1[10]["tag"] = "0"
  __frame1[10]["arg1"] = idris["Text.Lexer.some"](idris["Text.Lexer.non"](idris["Text.Lexer.oneOf"]("/\\:?")))
  __frame1[10]["arg2"] = __frame1[9]
  __frame1[11] = {}
  __frame1[11]["tag"] = "0"
  __frame1[12] = {}
  __frame1[12]["tag"] = "1"
  __frame1[12]["arg1"] = __frame1[10]
  __frame1[12]["arg2"] = __frame1[11]
  __frame1[13] = {}
  __frame1[13]["tag"] = "1"
  __frame1[13]["arg1"] = __frame1[8]
  __frame1[13]["arg2"] = __frame1[12]
  __frame1[14] = {}
  __frame1[14]["tag"] = "1"
  __frame1[14]["arg1"] = __frame1[6]
  __frame1[14]["arg2"] = __frame1[13]
  __frame1[15] = {}
  __frame1[15]["tag"] = "1"
  __frame1[15]["arg1"] = __frame1[4]
  __frame1[15]["arg2"] = __frame1[14]
  __frame1[16] = {}
  __frame1[16]["tag"] = "1"
  __frame1[16]["arg1"] = __frame1[2]
  __frame1[16]["arg2"] = __frame1[15]
  return idris["Text.Lexer.toTokenMap"](nil)(__frame1[16])
end)()
idris["Text.Lexer.manyUntil"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil
              }
              __frame1[1] = {}
              __frame1[1]["tag"] = "5"
              __frame1[1]["arg1"] = idris["Text.Lexer.Core.reject"](nil)(__arg1)
              __frame1[1]["arg2"] = __arg2
              return idris["Text.Lexer.many"](__frame1[1])
            end)()
        end
    end
end
idris["Text.Lexer.manyThen"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil
              }
              __frame1[1] = {}
              __frame1[1]["tag"] = "5"
              __frame1[1]["arg1"] = idris["Text.Lexer.manyUntil"](nil)(__arg1)(__arg2)
              __frame1[1]["arg2"] = __arg1
              return __frame1[1]
            end)()
        end
    end
end
idris["Text.Lexer.surround"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil
              }
              __frame1[1] = {}
              __frame1[1]["tag"] = "4"
              __frame1[1]["arg1"] = __arg0
              __frame1[1]["arg2"] = function()
                return idris["Text.Lexer.manyThen"](nil)(__arg1)(__arg2)
              end
              return __frame1[1]
            end)()
        end
    end
end
idris["Text.Lexer.quote"] = function(__arg0)
  return function(__arg1)
      return (function()
          return idris["Text.Lexer.surround"](__arg0)(__arg0)(__arg1)
        end)()
    end
end
idris["Text.Lexer.stringLit"] = (function()
  return idris["Text.Lexer.quote"](idris["Text.Lexer.is"]("\""))(idris["Text.Lexer.Core.<|>"](nil)(nil)(idris["Text.Lexer.escape"]("\\")(idris["Text.Lexer.any"]))(idris["Text.Lexer.any"]))
end)()
idris["Utils.Path.lexPath"] = function(__arg0)
  return (function()
      return idris["Utils.Path.case[3292]lexPath"](__arg0)(idris["Text.Lexer.Core.lex"](nil)(idris["Utils.Path.pathTokenMap"])(__arg0))
    end)()
end
idris["Prelude.Interfaces.<$>"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return (function()
                          return __arg3(nil)(nil)(__arg4)(__arg5)
                        end)()
                    end
                end
            end
        end
    end
end
idris["Text.Parser.Core.case[2776]doParse"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return (function()
                                  local __frame1 = {
                                    nil,
                                    nil,
                                    nil,
                                    nil
                                  }
                                  __frame1[1] = __arg7
                                  __frame1[2] = {
                                    nil,
                                    nil
                                  }
                                  __frame1[2]["0"] = function()
                                    local __frame2 = {
                                      nil
                                    }
                                    local __e2 = __frame1[1]["arg1"]
                                    local __e3 = __frame1[1]["arg2"]
                                    local __e4 = __frame1[1]["arg3"]
                                    local __e5 = __frame1[1]["arg4"]
                                    __frame2[1] = {}
                                    __frame2[1]["tag"] = "0"
                                    __frame2[1]["arg1"] = __e2
                                    __frame2[1]["arg2"] = __e3
                                    __frame2[1]["arg3"] = __e4
                                    __frame2[1]["arg4"] = __e5
                                    return __frame2[1]
                                  end
                                  __frame1[2]["1"] = function()
                                    local __frame2 = {
                                      nil
                                    }
                                    local __e8 = __frame1[1]["arg1"]
                                    local __e9 = __frame1[1]["arg2"]
                                    local __e10 = __frame1[1]["arg3"]
                                    __frame2[1] = {}
                                    __frame2[1]["tag"] = "1"
                                    __frame2[1]["arg1"] = __e8
                                    __frame2[1]["arg2"] = idris["Prelude.Interfaces.<$>"](nil)(nil)(nil)(function(__eta0)
                                      return function(__eta1)
                                          return function(__eta2)
                                              return function(__eta3)
                                                  return idris["Text.Bounded.map_Functor__WithBounds"](nil)(nil)(__eta2)(__eta3)
                                                end
                                            end
                                        end
                                    end)(function(__eta0)
                                      return __e9
                                    end)(__e9)
                                    __frame2[1]["arg3"] = __e10
                                    return __frame2[1]
                                  end
                                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                                  if __frame1[3] then
                                    __frame1[4] = __frame1[3]()
                                  else
                                    idris["error"]("Impossible else branch")
                                  end
                                  return __frame1[4]
                                end)()
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Text.Parser.Core.case[2164]doParse"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return (function()
                                      local __frame1 = {
                                        nil,
                                        nil,
                                        nil,
                                        nil
                                      }
                                      __frame1[1] = __arg8
                                      __frame1[2] = {
                                        nil,
                                        nil
                                      }
                                      __frame1[2]["0"] = function()
                                        local __frame2 = {
                                          nil,
                                          nil
                                        }
                                        __frame2[1] = {}
                                        __frame2[1]["tag"] = "1"
                                        __frame2[1]["arg1"] = __arg4
                                        __frame2[1]["arg2"] = __arg5
                                        __frame2[2] = {}
                                        __frame2[2]["tag"] = "0"
                                        __frame2[2]["arg1"] = __arg6
                                        __frame2[2]["arg2"] = 1
                                        __frame2[2]["arg3"] = __arg3
                                        __frame2[2]["arg4"] = __frame2[1]
                                        return __frame2[2]
                                      end
                                      __frame1[2]["1"] = function()
                                        local __frame2 = {
                                          nil
                                        }
                                        local __e2 = __frame1[1]["arg1"]
                                        __frame2[1] = {}
                                        __frame2[1]["tag"] = "1"
                                        __frame2[1]["arg1"] = __arg6
                                        __frame2[1]["arg2"] = idris["Prelude.Interfaces.<$>"](nil)(nil)(nil)(function(__eta0)
                                          return function(__eta1)
                                              return function(__eta2)
                                                  return function(__eta3)
                                                      return idris["Text.Bounded.map_Functor__WithBounds"](nil)(nil)(__eta2)(__eta3)
                                                    end
                                                end
                                            end
                                        end)(function(__eta0)
                                          return __e2
                                        end)(__arg4)
                                        __frame2[1]["arg3"] = __arg5
                                        return __frame2[1]
                                      end
                                      __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                                      if __frame1[3] then
                                        __frame1[4] = __frame1[3]()
                                      else
                                        idris["error"]("Impossible else branch")
                                      end
                                      return __frame1[4]
                                    end)()
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Foreign.spawn"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return (function()
                      local __frame1 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame1[1] = __arg1
                      __frame1[2] = {
                        nil
                      }
                      __frame1[2]["0"] = function()
                        local __e1 = __frame1[1]["arg1"]
                        return __e1
                      end
                      __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                      if __frame1[3] then
                        __frame1[4] = __frame1[3]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      __frame1[5] = __frame1[4]
                      __frame1[6] = {
                        nil
                      }
                      __frame1[6]["0"] = function()
                        local __e1 = __frame1[5]["arg1"]
                        return __e1
                      end
                      __frame1[7] = __frame1[6][__frame1[5]["tag"]]
                      if __frame1[7] then
                        __frame1[8] = __frame1[7]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      __frame1[9] = __frame1[8]
                      __frame1[10] = {
                        nil
                      }
                      __frame1[10]["0"] = function()
                        local __e1 = __frame1[9]["arg1"]
                        return __e1
                      end
                      __frame1[11] = __frame1[10][__frame1[9]["tag"]]
                      if __frame1[11] then
                        __frame1[12] = __frame1[11]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      __frame1[13] = __arg1
                      __frame1[14] = {
                        nil
                      }
                      __frame1[14]["0"] = function()
                        local __e2 = __frame1[13]["arg2"]
                        return __e2(nil)(function(__eta0)
                            return idris["Foreign.prim__spawn"](__arg2)(__arg3)(function(x)
                                return function(y)
                                    return __arg4(x)(y)
                                  end
                              end)(__eta0)
                          end)
                      end
                      __frame1[15] = __frame1[14][__frame1[13]["tag"]]
                      if __frame1[15] then
                        __frame1[16] = __frame1[15]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return idris["Prelude.Interfaces.<$>"](nil)(nil)(nil)(__frame1[12])(function(__eta0)
                          return __eta0
                        end)(__frame1[16])
                    end)()
                end
            end
        end
    end
end
idris["Text.Bounded.mergeBounds"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg2
                  __frame1[2] = {
                    nil
                  }
                  __frame1[2]["0"] = function()
                    local __frame2 = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    local __e9 = __frame1[1]["arg2"]
                    __frame2[1] = __e9
                    __frame2[2] = {
                      nil
                    }
                    __frame2[2][0] = function()
                      local __frame3 = {
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame3[1] = __arg3
                      __frame3[2] = {
                        nil
                      }
                      __frame3[2]["0"] = function()
                        local __frame4 = {
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        local __e15 = __frame3[1]["arg1"]
                        local __e16 = __frame3[1]["arg2"]
                        __frame4[1] = __e16
                        __frame4[2] = {
                          nil
                        }
                        __frame4[2][0] = function()
                          return idris["Text.Bounded.irrelevantBounds"](nil)(__e15)
                        end
                        __frame4[3] = __frame4[2][__frame4[1]]
                        if __frame4[3] then
                          __frame4[4] = __frame4[3]()
                        else
                          __frame4[4] = __arg3
                        end
                        return __frame4[4]
                      end
                      __frame3[3] = __frame3[2][__frame3[1]["tag"]]
                      if __frame3[3] then
                        __frame3[4] = __frame3[3]()
                      else
                        __frame3[4] = __arg3
                      end
                      return __frame3[4]
                    end
                    __frame2[11] = __frame2[2][__frame2[1]]
                    if __frame2[11] then
                      __frame2[12] = __frame2[11]()
                    else
                      __frame2[3] = __arg3
                      __frame2[4] = {
                        nil
                      }
                      __frame2[4]["0"] = function()
                        local __frame3 = {
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        local __e1 = __frame2[3]["arg1"]
                        local __e2 = __frame2[3]["arg2"]
                        __frame3[1] = __e2
                        __frame3[2] = {
                          nil
                        }
                        __frame3[2][0] = function()
                          return idris["Prelude.Interfaces.<$>"](nil)(nil)(nil)(function(b)
                              return function(a)
                                  return function(func)
                                      return function(__arg149)
                                          return idris["Text.Bounded.map_Functor__WithBounds"](nil)(nil)(func)(__arg149)
                                        end
                                    end
                                end
                            end)(function(__eta0)
                              return __e1
                            end)(__arg2)
                        end
                        __frame3[7] = __frame3[2][__frame3[1]]
                        if __frame3[7] then
                          __frame3[8] = __frame3[7]()
                        else
                          __frame3[3] = {}
                          __frame3[3]["tag"] = "0"
                          __frame3[3]["arg1"] = function(__arg4)
                            return function(__arg5)
                                return idris["Prelude.EqOrd.==_Eq__Int"](__arg4)(__arg5)
                              end
                          end
                          __frame3[3]["arg2"] = function(__arg4)
                            return function(__arg5)
                                return idris["Prelude.EqOrd./=_Eq__Int"](__arg4)(__arg5)
                              end
                          end
                          __frame3[4] = {}
                          __frame3[4]["tag"] = "0"
                          __frame3[4]["arg1"] = __frame3[3]
                          __frame3[4]["arg2"] = function(__arg369)
                            return function(__arg370)
                                return idris["Prelude.EqOrd.compare_Ord__Int"](__arg369)(__arg370)
                              end
                          end
                          __frame3[4]["arg3"] = function(__arg371)
                            return function(__arg372)
                                return idris["Prelude.EqOrd.<_Ord__Int"](__arg371)(__arg372)
                              end
                          end
                          __frame3[4]["arg4"] = function(__arg373)
                            return function(__arg374)
                                return idris["Prelude.EqOrd.>_Ord__Int"](__arg373)(__arg374)
                              end
                          end
                          __frame3[4]["arg5"] = function(__arg375)
                            return function(__arg376)
                                return idris["Prelude.EqOrd.<=_Ord__Int"](__arg375)(__arg376)
                              end
                          end
                          __frame3[4]["arg6"] = function(__arg377)
                            return function(__arg378)
                                return idris["Prelude.EqOrd.>=_Ord__Int"](__arg377)(__arg378)
                              end
                          end
                          __frame3[4]["arg7"] = function(__arg379)
                            return function(__arg380)
                                return idris["Prelude.EqOrd.max_Ord__Int"](__arg379)(__arg380)
                              end
                          end
                          __frame3[4]["arg8"] = function(__arg381)
                            return function(__arg382)
                                return idris["Prelude.EqOrd.min_Ord__Int"](__arg381)(__arg382)
                              end
                          end
                          __frame3[5] = {}
                          __frame3[5]["tag"] = "0"
                          __frame3[5]["arg1"] = function(__arg4)
                            return function(__arg5)
                                return idris["Prelude.EqOrd.==_Eq__Int"](__arg4)(__arg5)
                              end
                          end
                          __frame3[5]["arg2"] = function(__arg4)
                            return function(__arg5)
                                return idris["Prelude.EqOrd./=_Eq__Int"](__arg4)(__arg5)
                              end
                          end
                          __frame3[6] = {}
                          __frame3[6]["tag"] = "0"
                          __frame3[6]["arg1"] = __frame3[5]
                          __frame3[6]["arg2"] = function(__arg369)
                            return function(__arg370)
                                return idris["Prelude.EqOrd.compare_Ord__Int"](__arg369)(__arg370)
                              end
                          end
                          __frame3[6]["arg3"] = function(__arg371)
                            return function(__arg372)
                                return idris["Prelude.EqOrd.<_Ord__Int"](__arg371)(__arg372)
                              end
                          end
                          __frame3[6]["arg4"] = function(__arg373)
                            return function(__arg374)
                                return idris["Prelude.EqOrd.>_Ord__Int"](__arg373)(__arg374)
                              end
                          end
                          __frame3[6]["arg5"] = function(__arg375)
                            return function(__arg376)
                                return idris["Prelude.EqOrd.<=_Ord__Int"](__arg375)(__arg376)
                              end
                          end
                          __frame3[6]["arg6"] = function(__arg377)
                            return function(__arg378)
                                return idris["Prelude.EqOrd.>=_Ord__Int"](__arg377)(__arg378)
                              end
                          end
                          __frame3[6]["arg7"] = function(__arg379)
                            return function(__arg380)
                                return idris["Prelude.EqOrd.max_Ord__Int"](__arg379)(__arg380)
                              end
                          end
                          __frame3[6]["arg8"] = function(__arg381)
                            return function(__arg382)
                                return idris["Prelude.EqOrd.min_Ord__Int"](__arg381)(__arg382)
                              end
                          end
                          __frame3[8] = idris["Text.Bounded.case[995]mergeBounds"](nil)(nil)(__arg3)(__arg2)(idris["Prelude.EqOrd.min_Ord__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)"](nil)(nil)(__frame3[4])(__frame3[6])(idris["Text.Bounded.start"](nil)(__arg2))(idris["Text.Bounded.start"](nil)(__arg3)))
                        end
                        return __frame3[8]
                      end
                      __frame2[9] = __frame2[4][__frame2[3]["tag"]]
                      if __frame2[9] then
                        __frame2[10] = __frame2[9]()
                      else
                        __frame2[5] = {}
                        __frame2[5]["tag"] = "0"
                        __frame2[5]["arg1"] = function(__arg4)
                          return function(__arg5)
                              return idris["Prelude.EqOrd.==_Eq__Int"](__arg4)(__arg5)
                            end
                        end
                        __frame2[5]["arg2"] = function(__arg4)
                          return function(__arg5)
                              return idris["Prelude.EqOrd./=_Eq__Int"](__arg4)(__arg5)
                            end
                        end
                        __frame2[6] = {}
                        __frame2[6]["tag"] = "0"
                        __frame2[6]["arg1"] = __frame2[5]
                        __frame2[6]["arg2"] = function(__arg369)
                          return function(__arg370)
                              return idris["Prelude.EqOrd.compare_Ord__Int"](__arg369)(__arg370)
                            end
                        end
                        __frame2[6]["arg3"] = function(__arg371)
                          return function(__arg372)
                              return idris["Prelude.EqOrd.<_Ord__Int"](__arg371)(__arg372)
                            end
                        end
                        __frame2[6]["arg4"] = function(__arg373)
                          return function(__arg374)
                              return idris["Prelude.EqOrd.>_Ord__Int"](__arg373)(__arg374)
                            end
                        end
                        __frame2[6]["arg5"] = function(__arg375)
                          return function(__arg376)
                              return idris["Prelude.EqOrd.<=_Ord__Int"](__arg375)(__arg376)
                            end
                        end
                        __frame2[6]["arg6"] = function(__arg377)
                          return function(__arg378)
                              return idris["Prelude.EqOrd.>=_Ord__Int"](__arg377)(__arg378)
                            end
                        end
                        __frame2[6]["arg7"] = function(__arg379)
                          return function(__arg380)
                              return idris["Prelude.EqOrd.max_Ord__Int"](__arg379)(__arg380)
                            end
                        end
                        __frame2[6]["arg8"] = function(__arg381)
                          return function(__arg382)
                              return idris["Prelude.EqOrd.min_Ord__Int"](__arg381)(__arg382)
                            end
                        end
                        __frame2[7] = {}
                        __frame2[7]["tag"] = "0"
                        __frame2[7]["arg1"] = function(__arg4)
                          return function(__arg5)
                              return idris["Prelude.EqOrd.==_Eq__Int"](__arg4)(__arg5)
                            end
                        end
                        __frame2[7]["arg2"] = function(__arg4)
                          return function(__arg5)
                              return idris["Prelude.EqOrd./=_Eq__Int"](__arg4)(__arg5)
                            end
                        end
                        __frame2[8] = {}
                        __frame2[8]["tag"] = "0"
                        __frame2[8]["arg1"] = __frame2[7]
                        __frame2[8]["arg2"] = function(__arg369)
                          return function(__arg370)
                              return idris["Prelude.EqOrd.compare_Ord__Int"](__arg369)(__arg370)
                            end
                        end
                        __frame2[8]["arg3"] = function(__arg371)
                          return function(__arg372)
                              return idris["Prelude.EqOrd.<_Ord__Int"](__arg371)(__arg372)
                            end
                        end
                        __frame2[8]["arg4"] = function(__arg373)
                          return function(__arg374)
                              return idris["Prelude.EqOrd.>_Ord__Int"](__arg373)(__arg374)
                            end
                        end
                        __frame2[8]["arg5"] = function(__arg375)
                          return function(__arg376)
                              return idris["Prelude.EqOrd.<=_Ord__Int"](__arg375)(__arg376)
                            end
                        end
                        __frame2[8]["arg6"] = function(__arg377)
                          return function(__arg378)
                              return idris["Prelude.EqOrd.>=_Ord__Int"](__arg377)(__arg378)
                            end
                        end
                        __frame2[8]["arg7"] = function(__arg379)
                          return function(__arg380)
                              return idris["Prelude.EqOrd.max_Ord__Int"](__arg379)(__arg380)
                            end
                        end
                        __frame2[8]["arg8"] = function(__arg381)
                          return function(__arg382)
                              return idris["Prelude.EqOrd.min_Ord__Int"](__arg381)(__arg382)
                            end
                        end
                        __frame2[10] = idris["Text.Bounded.case[995]mergeBounds"](nil)(nil)(__arg3)(__arg2)(idris["Prelude.EqOrd.min_Ord__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)"](nil)(nil)(__frame2[6])(__frame2[8])(idris["Text.Bounded.start"](nil)(__arg2))(idris["Text.Bounded.start"](nil)(__arg3)))
                      end
                      __frame2[12] = __frame2[10]
                    end
                    return __frame2[12]
                  end
                  __frame1[11] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[11] then
                    __frame1[12] = __frame1[11]()
                  else
                    __frame1[3] = __arg3
                    __frame1[4] = {
                      nil
                    }
                    __frame1[4]["0"] = function()
                      local __frame2 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      local __e1 = __frame1[3]["arg1"]
                      local __e2 = __frame1[3]["arg2"]
                      __frame2[1] = __e2
                      __frame2[2] = {
                        nil
                      }
                      __frame2[2][0] = function()
                        return idris["Prelude.Interfaces.<$>"](nil)(nil)(nil)(function(b)
                            return function(a)
                                return function(func)
                                    return function(__arg149)
                                        return idris["Text.Bounded.map_Functor__WithBounds"](nil)(nil)(func)(__arg149)
                                      end
                                  end
                              end
                          end)(function(__eta0)
                            return __e1
                          end)(__arg2)
                      end
                      __frame2[7] = __frame2[2][__frame2[1]]
                      if __frame2[7] then
                        __frame2[8] = __frame2[7]()
                      else
                        __frame2[3] = {}
                        __frame2[3]["tag"] = "0"
                        __frame2[3]["arg1"] = function(__arg4)
                          return function(__arg5)
                              return idris["Prelude.EqOrd.==_Eq__Int"](__arg4)(__arg5)
                            end
                        end
                        __frame2[3]["arg2"] = function(__arg4)
                          return function(__arg5)
                              return idris["Prelude.EqOrd./=_Eq__Int"](__arg4)(__arg5)
                            end
                        end
                        __frame2[4] = {}
                        __frame2[4]["tag"] = "0"
                        __frame2[4]["arg1"] = __frame2[3]
                        __frame2[4]["arg2"] = function(__arg369)
                          return function(__arg370)
                              return idris["Prelude.EqOrd.compare_Ord__Int"](__arg369)(__arg370)
                            end
                        end
                        __frame2[4]["arg3"] = function(__arg371)
                          return function(__arg372)
                              return idris["Prelude.EqOrd.<_Ord__Int"](__arg371)(__arg372)
                            end
                        end
                        __frame2[4]["arg4"] = function(__arg373)
                          return function(__arg374)
                              return idris["Prelude.EqOrd.>_Ord__Int"](__arg373)(__arg374)
                            end
                        end
                        __frame2[4]["arg5"] = function(__arg375)
                          return function(__arg376)
                              return idris["Prelude.EqOrd.<=_Ord__Int"](__arg375)(__arg376)
                            end
                        end
                        __frame2[4]["arg6"] = function(__arg377)
                          return function(__arg378)
                              return idris["Prelude.EqOrd.>=_Ord__Int"](__arg377)(__arg378)
                            end
                        end
                        __frame2[4]["arg7"] = function(__arg379)
                          return function(__arg380)
                              return idris["Prelude.EqOrd.max_Ord__Int"](__arg379)(__arg380)
                            end
                        end
                        __frame2[4]["arg8"] = function(__arg381)
                          return function(__arg382)
                              return idris["Prelude.EqOrd.min_Ord__Int"](__arg381)(__arg382)
                            end
                        end
                        __frame2[5] = {}
                        __frame2[5]["tag"] = "0"
                        __frame2[5]["arg1"] = function(__arg4)
                          return function(__arg5)
                              return idris["Prelude.EqOrd.==_Eq__Int"](__arg4)(__arg5)
                            end
                        end
                        __frame2[5]["arg2"] = function(__arg4)
                          return function(__arg5)
                              return idris["Prelude.EqOrd./=_Eq__Int"](__arg4)(__arg5)
                            end
                        end
                        __frame2[6] = {}
                        __frame2[6]["tag"] = "0"
                        __frame2[6]["arg1"] = __frame2[5]
                        __frame2[6]["arg2"] = function(__arg369)
                          return function(__arg370)
                              return idris["Prelude.EqOrd.compare_Ord__Int"](__arg369)(__arg370)
                            end
                        end
                        __frame2[6]["arg3"] = function(__arg371)
                          return function(__arg372)
                              return idris["Prelude.EqOrd.<_Ord__Int"](__arg371)(__arg372)
                            end
                        end
                        __frame2[6]["arg4"] = function(__arg373)
                          return function(__arg374)
                              return idris["Prelude.EqOrd.>_Ord__Int"](__arg373)(__arg374)
                            end
                        end
                        __frame2[6]["arg5"] = function(__arg375)
                          return function(__arg376)
                              return idris["Prelude.EqOrd.<=_Ord__Int"](__arg375)(__arg376)
                            end
                        end
                        __frame2[6]["arg6"] = function(__arg377)
                          return function(__arg378)
                              return idris["Prelude.EqOrd.>=_Ord__Int"](__arg377)(__arg378)
                            end
                        end
                        __frame2[6]["arg7"] = function(__arg379)
                          return function(__arg380)
                              return idris["Prelude.EqOrd.max_Ord__Int"](__arg379)(__arg380)
                            end
                        end
                        __frame2[6]["arg8"] = function(__arg381)
                          return function(__arg382)
                              return idris["Prelude.EqOrd.min_Ord__Int"](__arg381)(__arg382)
                            end
                        end
                        __frame2[8] = idris["Text.Bounded.case[995]mergeBounds"](nil)(nil)(__arg3)(__arg2)(idris["Prelude.EqOrd.min_Ord__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)"](nil)(nil)(__frame2[4])(__frame2[6])(idris["Text.Bounded.start"](nil)(__arg2))(idris["Text.Bounded.start"](nil)(__arg3)))
                      end
                      return __frame2[8]
                    end
                    __frame1[9] = __frame1[4][__frame1[3]["tag"]]
                    if __frame1[9] then
                      __frame1[10] = __frame1[9]()
                    else
                      __frame1[5] = {}
                      __frame1[5]["tag"] = "0"
                      __frame1[5]["arg1"] = function(__arg4)
                        return function(__arg5)
                            return idris["Prelude.EqOrd.==_Eq__Int"](__arg4)(__arg5)
                          end
                      end
                      __frame1[5]["arg2"] = function(__arg4)
                        return function(__arg5)
                            return idris["Prelude.EqOrd./=_Eq__Int"](__arg4)(__arg5)
                          end
                      end
                      __frame1[6] = {}
                      __frame1[6]["tag"] = "0"
                      __frame1[6]["arg1"] = __frame1[5]
                      __frame1[6]["arg2"] = function(__arg369)
                        return function(__arg370)
                            return idris["Prelude.EqOrd.compare_Ord__Int"](__arg369)(__arg370)
                          end
                      end
                      __frame1[6]["arg3"] = function(__arg371)
                        return function(__arg372)
                            return idris["Prelude.EqOrd.<_Ord__Int"](__arg371)(__arg372)
                          end
                      end
                      __frame1[6]["arg4"] = function(__arg373)
                        return function(__arg374)
                            return idris["Prelude.EqOrd.>_Ord__Int"](__arg373)(__arg374)
                          end
                      end
                      __frame1[6]["arg5"] = function(__arg375)
                        return function(__arg376)
                            return idris["Prelude.EqOrd.<=_Ord__Int"](__arg375)(__arg376)
                          end
                      end
                      __frame1[6]["arg6"] = function(__arg377)
                        return function(__arg378)
                            return idris["Prelude.EqOrd.>=_Ord__Int"](__arg377)(__arg378)
                          end
                      end
                      __frame1[6]["arg7"] = function(__arg379)
                        return function(__arg380)
                            return idris["Prelude.EqOrd.max_Ord__Int"](__arg379)(__arg380)
                          end
                      end
                      __frame1[6]["arg8"] = function(__arg381)
                        return function(__arg382)
                            return idris["Prelude.EqOrd.min_Ord__Int"](__arg381)(__arg382)
                          end
                      end
                      __frame1[7] = {}
                      __frame1[7]["tag"] = "0"
                      __frame1[7]["arg1"] = function(__arg4)
                        return function(__arg5)
                            return idris["Prelude.EqOrd.==_Eq__Int"](__arg4)(__arg5)
                          end
                      end
                      __frame1[7]["arg2"] = function(__arg4)
                        return function(__arg5)
                            return idris["Prelude.EqOrd./=_Eq__Int"](__arg4)(__arg5)
                          end
                      end
                      __frame1[8] = {}
                      __frame1[8]["tag"] = "0"
                      __frame1[8]["arg1"] = __frame1[7]
                      __frame1[8]["arg2"] = function(__arg369)
                        return function(__arg370)
                            return idris["Prelude.EqOrd.compare_Ord__Int"](__arg369)(__arg370)
                          end
                      end
                      __frame1[8]["arg3"] = function(__arg371)
                        return function(__arg372)
                            return idris["Prelude.EqOrd.<_Ord__Int"](__arg371)(__arg372)
                          end
                      end
                      __frame1[8]["arg4"] = function(__arg373)
                        return function(__arg374)
                            return idris["Prelude.EqOrd.>_Ord__Int"](__arg373)(__arg374)
                          end
                      end
                      __frame1[8]["arg5"] = function(__arg375)
                        return function(__arg376)
                            return idris["Prelude.EqOrd.<=_Ord__Int"](__arg375)(__arg376)
                          end
                      end
                      __frame1[8]["arg6"] = function(__arg377)
                        return function(__arg378)
                            return idris["Prelude.EqOrd.>=_Ord__Int"](__arg377)(__arg378)
                          end
                      end
                      __frame1[8]["arg7"] = function(__arg379)
                        return function(__arg380)
                            return idris["Prelude.EqOrd.max_Ord__Int"](__arg379)(__arg380)
                          end
                      end
                      __frame1[8]["arg8"] = function(__arg381)
                        return function(__arg382)
                            return idris["Prelude.EqOrd.min_Ord__Int"](__arg381)(__arg382)
                          end
                      end
                      __frame1[10] = idris["Text.Bounded.case[995]mergeBounds"](nil)(nil)(__arg3)(__arg2)(idris["Prelude.EqOrd.min_Ord__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)"](nil)(nil)(__frame1[6])(__frame1[8])(idris["Text.Bounded.start"](nil)(__arg2))(idris["Text.Bounded.start"](nil)(__arg3)))
                    end
                    __frame1[12] = __frame1[10]
                  end
                  return __frame1[12]
                end)()
            end
        end
    end
end
idris["Text.Parser.Core.case[2691]case block in doParse"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return function(__arg9)
                                      return function(__arg10)
                                          return function(__arg11)
                                              return function(__arg12)
                                                  return (function()
                                                      local __frame1 = {
                                                        nil,
                                                        nil,
                                                        nil,
                                                        nil
                                                      }
                                                      __frame1[1] = __arg12
                                                      __frame1[2] = {
                                                        nil,
                                                        nil
                                                      }
                                                      __frame1[2]["0"] = function()
                                                        local __frame2 = {
                                                          nil
                                                        }
                                                        local __e2 = __frame1[1]["arg1"]
                                                        local __e3 = __frame1[1]["arg2"]
                                                        local __e4 = __frame1[1]["arg3"]
                                                        local __e5 = __frame1[1]["arg4"]
                                                        __frame2[1] = {}
                                                        __frame2[1]["tag"] = "0"
                                                        __frame2[1]["arg1"] = __e2
                                                        __frame2[1]["arg2"] = __e3
                                                        __frame2[1]["arg3"] = __e4
                                                        __frame2[1]["arg4"] = __e5
                                                        return __frame2[1]
                                                      end
                                                      __frame1[2]["1"] = function()
                                                        local __frame2 = {
                                                          nil
                                                        }
                                                        local __e8 = __frame1[1]["arg1"]
                                                        local __e9 = __frame1[1]["arg2"]
                                                        local __e10 = __frame1[1]["arg3"]
                                                        __frame2[1] = {}
                                                        __frame2[1]["tag"] = "1"
                                                        __frame2[1]["arg1"] = __e8
                                                        __frame2[1]["arg2"] = idris["Text.Bounded.mergeBounds"](nil)(nil)(__arg10)(__e9)
                                                        __frame2[1]["arg3"] = __e10
                                                        return __frame2[1]
                                                      end
                                                      __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                                                      if __frame1[3] then
                                                        __frame1[4] = __frame1[3]()
                                                      else
                                                        idris["error"]("Impossible else branch")
                                                      end
                                                      return __frame1[4]
                                                    end)()
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Text.Parser.Core.case[2537]case block in doParse"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return function(__arg9)
                                      return function(__arg10)
                                          return function(__arg11)
                                              return function(__arg12)
                                                  return function(__arg13)
                                                      return (function()
                                                          local __frame1 = {
                                                            nil,
                                                            nil,
                                                            nil,
                                                            nil
                                                          }
                                                          __frame1[1] = __arg13
                                                          __frame1[2] = {
                                                            nil,
                                                            nil
                                                          }
                                                          __frame1[2]["0"] = function()
                                                            local __frame2 = {
                                                              nil
                                                            }
                                                            local __e2 = __frame1[1]["arg1"]
                                                            local __e3 = __frame1[1]["arg2"]
                                                            local __e4 = __frame1[1]["arg3"]
                                                            local __e5 = __frame1[1]["arg4"]
                                                            __frame2[1] = {}
                                                            __frame2[1]["tag"] = "0"
                                                            __frame2[1]["arg1"] = __e2
                                                            __frame2[1]["arg2"] = __e3
                                                            __frame2[1]["arg3"] = __e4
                                                            __frame2[1]["arg4"] = __e5
                                                            return __frame2[1]
                                                          end
                                                          __frame1[2]["1"] = function()
                                                            local __frame2 = {
                                                              nil
                                                            }
                                                            local __e8 = __frame1[1]["arg1"]
                                                            local __e9 = __frame1[1]["arg2"]
                                                            local __e10 = __frame1[1]["arg3"]
                                                            __frame2[1] = {}
                                                            __frame2[1]["tag"] = "1"
                                                            __frame2[1]["arg1"] = __e8
                                                            __frame2[1]["arg2"] = idris["Text.Bounded.mergeBounds"](nil)(nil)(__arg11)(__e9)
                                                            __frame2[1]["arg3"] = __e10
                                                            return __frame2[1]
                                                          end
                                                          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                                                          if __frame1[3] then
                                                            __frame1[4] = __frame1[3]()
                                                          else
                                                            idris["error"]("Impossible else branch")
                                                          end
                                                          return __frame1[4]
                                                        end)()
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Text.Parser.Core.case[2631]doParse"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return function(__arg9)
                                      return (function()
                                          local __frame1 = {
                                            nil,
                                            nil,
                                            nil,
                                            nil
                                          }
                                          __frame1[1] = __arg9
                                          __frame1[2] = {
                                            nil,
                                            nil
                                          }
                                          __frame1[2]["0"] = function()
                                            local __frame2 = {
                                              nil
                                            }
                                            local __e2 = __frame1[1]["arg1"]
                                            local __e3 = __frame1[1]["arg2"]
                                            local __e4 = __frame1[1]["arg3"]
                                            local __e5 = __frame1[1]["arg4"]
                                            __frame2[1] = {}
                                            __frame2[1]["tag"] = "0"
                                            __frame2[1]["arg1"] = __e2
                                            __frame2[1]["arg2"] = __e3
                                            __frame2[1]["arg3"] = __e4
                                            __frame2[1]["arg4"] = __e5
                                            return __frame2[1]
                                          end
                                          __frame1[2]["1"] = function()
                                            local __frame2 = {
                                              nil,
                                              nil,
                                              nil,
                                              nil
                                            }
                                            local __e8 = __frame1[1]["arg1"]
                                            local __e9 = __frame1[1]["arg2"]
                                            local __e10 = __frame1[1]["arg3"]
                                            __frame2[1] = __e9
                                            __frame2[2] = {
                                              nil
                                            }
                                            __frame2[2]["0"] = function()
                                              local __e1 = __frame2[1]["arg1"]
                                              return __e1
                                            end
                                            __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                                            if __frame2[3] then
                                              __frame2[4] = __frame2[3]()
                                            else
                                              idris["error"]("Impossible else branch")
                                            end
                                            return idris["Text.Parser.Core.case[2691]case block in doParse"](nil)(nil)(nil)(__arg3)(__arg4)(__arg5)(__arg6)(__arg7)(nil)(__e10)(__e9)(__e8)(idris["Text.Parser.Core.doParse"](nil)(nil)(nil)(__e8)(__arg4()(__frame2[4]))(__e10))
                                          end
                                          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                                          if __frame1[3] then
                                            __frame1[4] = __frame1[3]()
                                          else
                                            idris["error"]("Impossible else branch")
                                          end
                                          return __frame1[4]
                                        end)()
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Text.Parser.Core.case[2473]doParse"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return function(__arg9)
                                      return function(__arg10)
                                          return (function()
                                              local __frame1 = {
                                                nil,
                                                nil,
                                                nil,
                                                nil
                                              }
                                              __frame1[1] = __arg10
                                              __frame1[2] = {
                                                nil,
                                                nil
                                              }
                                              __frame1[2]["0"] = function()
                                                local __frame2 = {
                                                  nil
                                                }
                                                local __e2 = __frame1[1]["arg1"]
                                                local __e3 = __frame1[1]["arg2"]
                                                local __e4 = __frame1[1]["arg3"]
                                                local __e5 = __frame1[1]["arg4"]
                                                __frame2[1] = {}
                                                __frame2[1]["tag"] = "0"
                                                __frame2[1]["arg1"] = __e2
                                                __frame2[1]["arg2"] = __e3
                                                __frame2[1]["arg3"] = __e4
                                                __frame2[1]["arg4"] = __e5
                                                return __frame2[1]
                                              end
                                              __frame1[2]["1"] = function()
                                                local __frame2 = {
                                                  nil,
                                                  nil,
                                                  nil,
                                                  nil
                                                }
                                                local __e8 = __frame1[1]["arg1"]
                                                local __e9 = __frame1[1]["arg2"]
                                                local __e10 = __frame1[1]["arg3"]
                                                __frame2[1] = __e9
                                                __frame2[2] = {
                                                  nil
                                                }
                                                __frame2[2]["0"] = function()
                                                  local __e1 = __frame2[1]["arg1"]
                                                  return __e1
                                                end
                                                __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                                                if __frame2[3] then
                                                  __frame2[4] = __frame2[3]()
                                                else
                                                  idris["error"]("Impossible else branch")
                                                end
                                                return idris["Text.Parser.Core.case[2537]case block in doParse"](nil)(nil)(nil)(__arg3)(__arg4)(__arg5)(__arg6)(__arg7)(__arg8)(nil)(__e10)(__e9)(__e8)(idris["Text.Parser.Core.doParse"](nil)(nil)(nil)(__e8)(__arg5(__frame2[4]))(__e10))
                                              end
                                              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                                              if __frame1[3] then
                                                __frame1[4] = __frame1[3]()
                                              else
                                                idris["error"]("Impossible else branch")
                                              end
                                              return __frame1[4]
                                            end)()
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Text.Parser.Core.case[2362]case block in doParse"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return function(__arg9)
                                      return function(__arg10)
                                          return function(__arg11)
                                              return function(__arg12)
                                                  return function(__arg13)
                                                      return (function()
                                                          local __frame1 = {
                                                            nil,
                                                            nil,
                                                            nil,
                                                            nil
                                                          }
                                                          __frame1[1] = __arg13
                                                          __frame1[2] = {
                                                            nil,
                                                            nil
                                                          }
                                                          __frame1[2][0] = function()
                                                            local __frame2 = {
                                                              nil
                                                            }
                                                            __frame2[1] = {}
                                                            __frame2[1]["tag"] = "0"
                                                            __frame2[1]["arg1"] = __arg7
                                                            __frame2[1]["arg2"] = __arg11
                                                            __frame2[1]["arg3"] = __arg10
                                                            __frame2[1]["arg4"] = __arg9
                                                            return __frame2[1]
                                                          end
                                                          __frame1[2][1] = function()
                                                            return idris["Text.Parser.Core.doParse"](nil)(nil)(nil)(1)(__arg3())(__arg6)
                                                          end
                                                          __frame1[3] = __frame1[2][__frame1[1]]
                                                          if __frame1[3] then
                                                            __frame1[4] = __frame1[3]()
                                                          else
                                                            idris["error"]("Impossible else branch")
                                                          end
                                                          return __frame1[4]
                                                        end)()
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Text.Parser.Core.case[2338]doParse"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return function(__arg9)
                                      return (function()
                                          local __frame1 = {
                                            nil,
                                            nil,
                                            nil,
                                            nil
                                          }
                                          __frame1[1] = __arg9
                                          __frame1[2] = {
                                            nil,
                                            nil
                                          }
                                          __frame1[2]["0"] = function()
                                            local __e2 = __frame1[1]["arg1"]
                                            local __e3 = __frame1[1]["arg2"]
                                            local __e4 = __frame1[1]["arg3"]
                                            local __e5 = __frame1[1]["arg4"]
                                            return idris["Text.Parser.Core.case[2362]case block in doParse"](nil)(nil)(__arg2)(__arg3)(__arg4)(__arg5)(__arg6)(__arg7)(nil)(__e5)(__e4)(__e3)(__e2)(idris["Prelude.Basics.||"](__e2)(function()
                                                return __e3
                                              end))
                                          end
                                          __frame1[2]["1"] = function()
                                            local __frame2 = {
                                              nil
                                            }
                                            local __e9 = __frame1[1]["arg2"]
                                            local __e10 = __frame1[1]["arg3"]
                                            __frame2[1] = {}
                                            __frame2[1]["tag"] = "1"
                                            __frame2[1]["arg1"] = __arg7
                                            __frame2[1]["arg2"] = __e9
                                            __frame2[1]["arg3"] = __e10
                                            return __frame2[1]
                                          end
                                          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                                          if __frame1[3] then
                                            __frame1[4] = __frame1[3]()
                                          else
                                            idris["error"]("Impossible else branch")
                                          end
                                          return __frame1[4]
                                        end)()
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Text.Parser.Core.doParse"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return (function()
                          local __frame1 = {
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          __frame1[1] = __arg4
                          __frame1[2] = {
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          __frame1[2]["0"] = function()
                            local __frame2 = {
                              nil
                            }
                            local __e2 = __frame1[1]["arg1"]
                            __frame2[1] = {}
                            __frame2[1]["tag"] = "1"
                            __frame2[1]["arg1"] = __arg3
                            __frame2[1]["arg2"] = idris["Text.Bounded.irrelevantBounds"](nil)(__e2)
                            __frame2[1]["arg3"] = __arg5
                            return __frame2[1]
                          end
                          __frame1[2]["4"] = function()
                            local __frame2 = {
                              nil
                            }
                            local __e6 = __frame1[1]["arg1"]
                            local __e7 = __frame1[1]["arg2"]
                            __frame2[1] = {}
                            __frame2[1]["tag"] = "0"
                            __frame2[1]["arg1"] = __arg3
                            __frame2[1]["arg2"] = __e6
                            __frame2[1]["arg3"] = __e7
                            __frame2[1]["arg4"] = __arg5
                            return __frame2[1]
                          end
                          __frame1[2]["5"] = function()
                            local __e11 = __frame1[1]["arg1"]
                            return idris["Text.Parser.Core.case[2040]doParse"](nil)(nil)(nil)(__e11)(__arg5)(__arg3)(idris["Text.Parser.Core.doParse"](nil)(nil)(nil)(__arg3)(__e11)(__arg5))
                          end
                          __frame1[2]["6"] = function()
                            local __frame2 = {
                              nil,
                              nil
                            }
                            __frame2[1] = {}
                            __frame2[1]["tag"] = "0"
                            __frame2[2] = {}
                            __frame2[2]["tag"] = "1"
                            __frame2[2]["arg1"] = 0
                            __frame2[2]["arg2"] = idris["Text.Bounded.irrelevantBounds"](nil)(__frame2[1])
                            __frame2[2]["arg3"] = __arg5
                            return __frame2[2]
                          end
                          __frame1[2]["7"] = function()
                            local __e16 = __frame1[1]["arg1"]
                            return idris["Text.Parser.Core.case[2101]doParse"](nil)(nil)(nil)(__e16)(__arg5)(__arg3)(idris["Text.Parser.Core.doParse"](nil)(nil)(nil)(__arg3)(__e16)(__arg5))
                          end
                          __frame1[2]["1"] = function()
                            local __frame2 = {
                              nil,
                              nil,
                              nil,
                              nil
                            }
                            local __e19 = __frame1[1]["arg1"]
                            local __e20 = __frame1[1]["arg2"]
                            __frame2[1] = __arg5
                            __frame2[2] = {
                              nil,
                              nil
                            }
                            __frame2[2]["0"] = function()
                              local __frame3 = {
                                nil,
                                nil
                              }
                              __frame3[1] = {}
                              __frame3[1]["tag"] = "0"
                              __frame3[2] = {}
                              __frame3[2]["tag"] = "0"
                              __frame3[2]["arg1"] = __arg3
                              __frame3[2]["arg2"] = 1
                              __frame3[2]["arg3"] = "End of input"
                              __frame3[2]["arg4"] = __frame3[1]
                              return __frame3[2]
                            end
                            __frame2[2]["1"] = function()
                              local __e50 = __frame2[1]["arg1"]
                              local __e51 = __frame2[1]["arg2"]
                              return idris["Text.Parser.Core.case[2164]doParse"](nil)(nil)(__e20)(__e19)(__e50)(__e51)(__arg3)(nil)(__e20(__e50))
                            end
                            __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                            if __frame2[3] then
                              __frame2[4] = __frame2[3]()
                            else
                              idris["error"]("Impossible else branch")
                            end
                            return __frame2[4]
                          end
                          __frame1[2]["3"] = function()
                            local __frame2 = {
                              nil,
                              nil,
                              nil,
                              nil
                            }
                            __frame2[1] = __arg5
                            __frame2[2] = {
                              nil,
                              nil
                            }
                            __frame2[2]["0"] = function()
                              local __frame3 = {
                                nil,
                                nil,
                                nil
                              }
                              __frame3[1] = {}
                              __frame3[1]["tag"] = "0"
                              __frame3[2] = {}
                              __frame3[2]["tag"] = "0"
                              __frame3[3] = {}
                              __frame3[3]["tag"] = "1"
                              __frame3[3]["arg1"] = __arg3
                              __frame3[3]["arg2"] = idris["Text.Bounded.irrelevantBounds"](nil)(__frame3[1])
                              __frame3[3]["arg3"] = __frame3[2]
                              return __frame3[3]
                            end
                            __frame2[2]["1"] = function()
                              local __frame3 = {
                                nil,
                                nil
                              }
                              local __e54 = __frame2[1]["arg1"]
                              local __e55 = __frame2[1]["arg2"]
                              __frame3[1] = {}
                              __frame3[1]["tag"] = "1"
                              __frame3[1]["arg1"] = __e54
                              __frame3[1]["arg2"] = __e55
                              __frame3[2] = {}
                              __frame3[2]["tag"] = "0"
                              __frame3[2]["arg1"] = __arg3
                              __frame3[2]["arg2"] = 1
                              __frame3[2]["arg3"] = "Expected end of input"
                              __frame3[2]["arg4"] = __frame3[1]
                              return __frame3[2]
                            end
                            __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                            if __frame2[3] then
                              __frame2[4] = __frame2[3]()
                            else
                              idris["error"]("Impossible else branch")
                            end
                            return __frame2[4]
                          end
                          __frame1[2]["2"] = function()
                            local __frame2 = {
                              nil,
                              nil,
                              nil,
                              nil
                            }
                            local __e23 = __frame1[1]["arg1"]
                            local __e24 = __frame1[1]["arg2"]
                            __frame2[1] = __arg5
                            __frame2[2] = {
                              nil,
                              nil
                            }
                            __frame2[2]["0"] = function()
                              local __frame3 = {
                                nil,
                                nil
                              }
                              __frame3[1] = {}
                              __frame3[1]["tag"] = "0"
                              __frame3[2] = {}
                              __frame3[2]["tag"] = "0"
                              __frame3[2]["arg1"] = __arg3
                              __frame3[2]["arg2"] = 1
                              __frame3[2]["arg3"] = "End of input"
                              __frame3[2]["arg4"] = __frame3[1]
                              return __frame3[2]
                            end
                            __frame2[2]["1"] = function()
                              local __e58 = __frame2[1]["arg1"]
                              local __e59 = __frame2[1]["arg2"]
                              return idris["Text.Parser.Core.case[2275]doParse"](nil)(__e24)(__e23)(__e58)(__e59)(__arg3)(nil)(nil)(__e24(__e58))
                            end
                            __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                            if __frame2[3] then
                              __frame2[4] = __frame2[3]()
                            else
                              idris["error"]("Impossible else branch")
                            end
                            return __frame2[4]
                          end
                          __frame1[2]["10"] = function()
                            local __e27 = __frame1[1]["arg1"]
                            local __e28 = __frame1[1]["arg2"]
                            local __e29 = __frame1[1]["arg3"]
                            local __e30 = __frame1[1]["arg4"]
                            return idris["Text.Parser.Core.case[2338]doParse"](nil)(nil)(__e28)(__e30)(__e27)(__e29)(__arg5)(__arg3)(nil)(idris["Text.Parser.Core.doParse"](nil)(nil)(nil)(1)(__e29)(__arg5))
                          end
                          __frame1[2]["9"] = function()
                            local __e34 = __frame1[1]["arg1"]
                            local __e35 = __frame1[1]["arg2"]
                            local __e36 = __frame1[1]["arg3"]
                            local __e37 = __frame1[1]["arg4"]
                            return idris["Text.Parser.Core.case[2473]doParse"](nil)(nil)(nil)(__e34)(__e35)(__e37)(__e36)(__arg5)(__arg3)(nil)(idris["Text.Parser.Core.doParse"](nil)(nil)(nil)(__arg3)(__e36)(__arg5))
                          end
                          __frame1[2]["8"] = function()
                            local __e41 = __frame1[1]["arg1"]
                            local __e42 = __frame1[1]["arg2"]
                            local __e43 = __frame1[1]["arg3"]
                            return idris["Text.Parser.Core.case[2631]doParse"](nil)(nil)(nil)(__e41)(__e43)(__e42)(__arg5)(__arg3)(nil)(idris["Text.Parser.Core.doParse"](nil)(nil)(nil)(__arg3)(__e42)(__arg5))
                          end
                          __frame1[2]["11"] = function()
                            local __e47 = __frame1[1]["arg1"]
                            return idris["Text.Parser.Core.case[2776]doParse"](nil)(nil)(nil)(__e47)(__arg5)(__arg3)(nil)(idris["Text.Parser.Core.doParse"](nil)(nil)(nil)(__arg3)(__e47)(__arg5))
                          end
                          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                          if __frame1[3] then
                            __frame1[4] = __frame1[3]()
                          else
                            idris["error"]("Impossible else branch")
                          end
                          return __frame1[4]
                        end)()
                    end
                end
            end
        end
    end
end
idris["Text.Parser.Core.parse"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return (function()
                      return idris["Text.Parser.Core.case[2838]parse"](nil)(nil)(__arg2)(__arg4)(__arg3)(idris["Text.Parser.Core.doParse"](nil)(nil)(nil)(1)(__arg3)(__arg4))
                    end)()
                end
            end
        end
    end
end
idris["Prelude.Types.Strings.++"] = function(__arg0)
  return function(__arg1)
      return (function()
          return (__arg0) .. (__arg1)
        end)()
    end
end
idris["Plugin.case[4657]case block in case block in getSourceDirectory"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return (function()
                              local __frame1 = {
                                nil,
                                nil,
                                nil,
                                nil
                              }
                              __frame1[1] = __arg6
                              __frame1[2] = {
                                nil
                              }
                              __frame1[2]["0"] = function()
                                local __e1 = __frame1[1]["arg1"]
                                local pathWithSuffix = idris["Prelude.Types.Strings.++"](__e1)("-src")
                                return function(__eta0)
                                    return pathWithSuffix
                                  end
                              end
                              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                              if __frame1[3] then
                                __frame1[4] = __frame1[3]()
                              else
                                idris["error"]("Impossible else branch")
                              end
                              return __frame1[4]
                            end)()
                        end
                    end
                end
            end
        end
    end
end
idris["Utils.Hex.case[625]leftPad"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg3
                  __frame1[2] = {
                    nil,
                    nil
                  }
                  __frame1[2][0] = function()
                    return idris["Prelude.Types.Strings.++"](idris["Prelude.Types.pack"](idris["Data.List.replicate"](nil)(idris["Prelude.Types.minus"](__arg1)(idris["Prelude.Types.Strings.length"](__arg0)))(__arg2)))(__arg0)
                  end
                  __frame1[2][1] = function()
                    return __arg0
                  end
                  __frame1[3] = __frame1[2][__frame1[1]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[4]
                end)()
            end
        end
    end
end
idris["Prelude.Show.2169:6499:show'"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return (function()
                      local __frame1 = {
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame1[1] = __arg4
                      __frame1[2] = {
                        nil,
                        nil
                      }
                      __frame1[2]["0"] = function()
                        return __arg3
                      end
                      __frame1[2]["1"] = function()
                        local __frame2 = {
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        local __e2 = __frame1[1]["arg1"]
                        local __e3 = __frame1[1]["arg2"]
                        __frame2[1] = __e3
                        __frame2[2] = {
                          nil
                        }
                        __frame2[2]["0"] = function()
                          local __frame3 = {
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          __frame3[1] = __arg1
                          __frame3[2] = {
                            nil
                          }
                          __frame3[2]["0"] = function()
                            local __e1 = __frame3[1]["arg1"]
                            return __e1(__e2)
                          end
                          __frame3[3] = __frame3[2][__frame3[1]["tag"]]
                          if __frame3[3] then
                            __frame3[4] = __frame3[3]()
                          else
                            idris["error"]("Impossible else branch")
                          end
                          return idris["Prelude.Types.Strings.++"](__arg3)(__frame3[4])
                        end
                        __frame2[7] = __frame2[2][__frame2[1]["tag"]]
                        if __frame2[7] then
                          __frame2[8] = __frame2[7]()
                        else
                          __frame2[3] = __arg1
                          __frame2[4] = {
                            nil
                          }
                          __frame2[4]["0"] = function()
                            local __e1 = __frame2[3]["arg1"]
                            return __e1(__e2)
                          end
                          __frame2[5] = __frame2[4][__frame2[3]["tag"]]
                          if __frame2[5] then
                            __frame2[6] = __frame2[5]()
                          else
                            idris["error"]("Impossible else branch")
                          end
                          __frame2[8] = idris["Prelude.Show.2169:6499:show'"](nil)(__arg1)(__arg2)(idris["Prelude.Types.Strings.++"](__arg3)(idris["Prelude.Types.Strings.++"](__frame2[6])(", ")))(__e3)
                        end
                        return __frame2[8]
                      end
                      __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                      if __frame1[3] then
                        __frame1[4] = __frame1[3]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame1[4]
                    end)()
                end
            end
        end
    end
end
idris["Prelude.Show.show_Show__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg3
                  __frame1[2] = {
                    nil
                  }
                  __frame1[2]["0"] = function()
                    local __frame2 = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    local __e2 = __frame1[1]["arg1"]
                    local __e3 = __frame1[1]["arg2"]
                    __frame2[1] = idris["Builtin.fst"](nil)(nil)(__arg2)
                    __frame2[2] = {
                      nil
                    }
                    __frame2[2]["0"] = function()
                      local __e1 = __frame2[1]["arg1"]
                      return __e1(__e2)
                    end
                    __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                    if __frame2[3] then
                      __frame2[4] = __frame2[3]()
                    else
                      idris["error"]("Impossible else branch")
                    end
                    __frame2[5] = idris["Builtin.snd"](nil)(nil)(__arg2)
                    __frame2[6] = {
                      nil
                    }
                    __frame2[6]["0"] = function()
                      local __e1 = __frame2[5]["arg1"]
                      return __e1(__e3)
                    end
                    __frame2[7] = __frame2[6][__frame2[5]["tag"]]
                    if __frame2[7] then
                      __frame2[8] = __frame2[7]()
                    else
                      idris["error"]("Impossible else branch")
                    end
                    return idris["Prelude.Types.Strings.++"]("(")(idris["Prelude.Types.Strings.++"](__frame2[4])(idris["Prelude.Types.Strings.++"](", ")(idris["Prelude.Types.Strings.++"](__frame2[8])(")"))))
                  end
                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[4]
                end)()
            end
        end
    end
end
idris["Prelude.Show.show_Show__(List $a)"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              return idris["Prelude.Types.Strings.++"]("[")(idris["Prelude.Types.Strings.++"](idris["Prelude.Show.2169:6499:show'"](nil)(__arg1)(__arg2)("")(__arg2))("]"))
            end)()
        end
    end
end
idris["Parser.Rule.Source.symbol"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "1"
      __frame1[1]["arg1"] = idris["Prelude.Types.Strings.++"]("Expected '")(idris["Prelude.Types.Strings.++"](__arg0)("'"))
      __frame1[1]["arg2"] = function(x)
        local __frame2 = {
          nil,
          nil,
          nil,
          nil
        }
        __frame2[1] = x
        __frame2[2] = {
          nil
        }
        __frame2[2]["0"] = function()
          local __e1 = __frame2[1]["arg1"]
          return __e1
        end
        __frame2[3] = __frame2[2][__frame2[1]["tag"]]
        if __frame2[3] then
          __frame2[4] = __frame2[3]()
        else
          idris["error"]("Impossible else branch")
        end
        return idris["Parser.Rule.Source.case[2672]symbol"](__arg0)(x)(__frame2[4])
      end
      return __frame1[1]
    end)()
end
idris["Language.Reflection.TT.showSep"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil,
            nil
          }
          __frame1[2]["0"] = function()
            return ""
          end
          __frame1[2]["1"] = function()
            local __frame2 = {
              nil,
              nil,
              nil,
              nil
            }
            local __e2 = __frame1[1]["arg1"]
            local __e3 = __frame1[1]["arg2"]
            __frame2[1] = __e3
            __frame2[2] = {
              nil
            }
            __frame2[2]["0"] = function()
              return __e2
            end
            __frame2[3] = __frame2[2][__frame2[1]["tag"]]
            if __frame2[3] then
              __frame2[4] = __frame2[3]()
            else
              __frame2[4] = idris["Prelude.Types.Strings.++"](__e2)(idris["Prelude.Types.Strings.++"](__arg0)(idris["Language.Reflection.TT.showSep"](__arg0)(__e3)))
            end
            return __frame2[4]
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Language.Reflection.TT.show_Show__Namespace"] = function(__arg0)
  return (function()
      return idris["Language.Reflection.TT.showSep"](".")(idris["Data.List.reverse"](nil)(__arg0))
    end)()
end
idris["Core.Name.Namespace.showSep"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil,
            nil
          }
          __frame1[2]["0"] = function()
            return ""
          end
          __frame1[2]["1"] = function()
            local __frame2 = {
              nil,
              nil,
              nil,
              nil
            }
            local __e2 = __frame1[1]["arg1"]
            local __e3 = __frame1[1]["arg2"]
            __frame2[1] = __e3
            __frame2[2] = {
              nil
            }
            __frame2[2]["0"] = function()
              return __e2
            end
            __frame2[3] = __frame2[2][__frame2[1]["tag"]]
            if __frame2[3] then
              __frame2[4] = __frame2[3]()
            else
              __frame2[4] = idris["Prelude.Types.Strings.++"](__e2)(idris["Prelude.Types.Strings.++"](__arg0)(idris["Core.Name.Namespace.showSep"](__arg0)(__e3)))
            end
            return __frame2[4]
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Prelude.Show.showParens"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg0
          __frame1[2] = {
            nil,
            nil
          }
          __frame1[2][1] = function()
            return __arg1
          end
          __frame1[2][0] = function()
            return idris["Prelude.Types.Strings.++"]("(")(idris["Prelude.Types.Strings.++"](__arg1)(")"))
          end
          __frame1[3] = __frame1[2][__frame1[1]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Core.Name.Namespace.showNSWithSep"] = function(__arg0)
  return function(__arg1)
      return (function()
          return idris["Core.Name.Namespace.showSep"](__arg0)(idris["Data.List.reverse"](nil)(__arg1))
        end)()
    end
end
idris["Core.Name.Namespace.show_Show__Namespace"] = function(__ext0)
  return (function()
      return idris["Core.Name.Namespace.showNSWithSep"](".")(__ext0)
    end)()
end
idris["Prelude.Show.protectEsc"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              return idris["Prelude.Types.Strings.++"](__arg1)(idris["Prelude.Types.Strings.++"](idris["Prelude.Show.case[5936]protectEsc"](__arg2)(__arg1)(__arg0)(idris["Prelude.Show.firstCharIs"](__arg0)(__arg2)))(__arg2))
            end)()
        end
    end
end
idris["Utils.Hex.leftPad"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              return idris["Utils.Hex.case[625]leftPad"](__arg2)(__arg1)(__arg0)(idris["Prelude.Types.<_Ord__Nat"](idris["Prelude.Types.Strings.length"](__arg2))(__arg1))
            end)()
        end
    end
end
idris["Parser.Rule.Source.exactIdent"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "1"
      __frame1[1]["arg1"] = idris["Prelude.Types.Strings.++"]("Expected ")(__arg0)
      __frame1[1]["arg2"] = function(x)
        local __frame2 = {
          nil,
          nil,
          nil,
          nil
        }
        __frame2[1] = x
        __frame2[2] = {
          nil
        }
        __frame2[2]["0"] = function()
          local __e1 = __frame2[1]["arg1"]
          return __e1
        end
        __frame2[3] = __frame2[2][__frame2[1]["tag"]]
        if __frame2[3] then
          __frame2[4] = __frame2[3]()
        else
          idris["error"]("Impossible else branch")
        end
        return idris["Parser.Rule.Source.case[2773]exactIdent"](__arg0)(x)(__frame2[4])
      end
      return __frame1[1]
    end)()
end
idris["Plugin.createResponseBuffer"] = function(__ext0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      __frame1[1]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[1]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[1]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[2] = {}
      __frame1[2]["tag"] = "0"
      __frame1[2]["arg1"] = __frame1[1]
      __frame1[2]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act24 = __arg644(__eta0)
                        return __arg645(__act24)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[2]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[3] = {}
      __frame1[3]["tag"] = "0"
      __frame1[3]["arg1"] = __frame1[2]
      __frame1[3]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act24 = idris["Foreign.bufexists"](nil)(__frame1[3])(idris["Plugin.responseBufferName"])(__ext0)
      __frame1[4] = {}
      __frame1[4]["tag"] = "0"
      __frame1[4]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[4]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[4]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      return idris["Prelude.Interfaces.when"](nil)(__frame1[4])(idris["Prelude.Basics.not"](__act24))(function()
          return function(__eta0)
              local __frame3 = {
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil
              }
              __frame3[1] = {}
              __frame3[1]["tag"] = "0"
              __frame3[1]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[1]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[1]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[2] = {}
              __frame3[2]["tag"] = "0"
              __frame3[2]["arg1"] = __frame3[1]
              __frame3[2]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act25 = __arg644(__eta1)
                                return __arg645(__act25)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[2]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[3] = {}
              __frame3[3]["tag"] = "0"
              __frame3[3]["arg1"] = __frame3[2]
              __frame3[3]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act25 = idris["Foreign.nvimCommand"](nil)(__frame3[3])("let prevBuf = bufnr(@#)")(__eta0)
              __frame3[4] = {}
              __frame3[4]["tag"] = "0"
              __frame3[4]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[4]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[4]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[5] = {}
              __frame3[5]["tag"] = "0"
              __frame3[5]["arg1"] = __frame3[4]
              __frame3[5]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act26 = __arg644(__eta1)
                                return __arg645(__act26)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[5]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[6] = {}
              __frame3[6]["tag"] = "0"
              __frame3[6]["arg1"] = __frame3[5]
              __frame3[6]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act26 = idris["Foreign.nvimCommand"](nil)(__frame3[6])(idris["Prelude.Types.Strings.++"]("badd ")(idris["Plugin.responseBufferName"]))(__eta0)
              __frame3[7] = {}
              __frame3[7]["tag"] = "0"
              __frame3[7]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[7]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[7]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[8] = {}
              __frame3[8]["tag"] = "0"
              __frame3[8]["arg1"] = __frame3[7]
              __frame3[8]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act27 = __arg644(__eta1)
                                return __arg645(__act27)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[8]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[9] = {}
              __frame3[9]["tag"] = "0"
              __frame3[9]["arg1"] = __frame3[8]
              __frame3[9]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act27 = idris["Foreign.nvimCommand"](nil)(__frame3[9])(idris["Prelude.Types.Strings.++"]("b ")(idris["Plugin.responseBufferName"]))(__eta0)
              __frame3[10] = {}
              __frame3[10]["tag"] = "0"
              __frame3[10]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[10]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[10]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[11] = {}
              __frame3[11]["tag"] = "0"
              __frame3[11]["arg1"] = __frame3[10]
              __frame3[11]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act28 = __arg644(__eta1)
                                return __arg645(__act28)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[11]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[12] = {}
              __frame3[12]["tag"] = "0"
              __frame3[12]["arg1"] = __frame3[11]
              __frame3[12]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act28 = idris["Foreign.nvimCommand"](nil)(__frame3[12])("set buftype=nofile")(__eta0)
              __frame3[13] = {}
              __frame3[13]["tag"] = "0"
              __frame3[13]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[13]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[13]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[14] = {}
              __frame3[14]["tag"] = "0"
              __frame3[14]["arg1"] = __frame3[13]
              __frame3[14]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act29 = __arg644(__eta1)
                                return __arg645(__act29)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[14]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[15] = {}
              __frame3[15]["tag"] = "0"
              __frame3[15]["arg1"] = __frame3[14]
              __frame3[15]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act29 = idris["Foreign.nvimCommand"](nil)(__frame3[15])("b #")(__eta0)
              __frame3[16] = {}
              __frame3[16]["tag"] = "0"
              __frame3[16]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[16]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[16]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[17] = {}
              __frame3[17]["tag"] = "0"
              __frame3[17]["arg1"] = __frame3[16]
              __frame3[17]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act30 = __arg644(__eta1)
                                return __arg645(__act30)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[17]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[18] = {}
              __frame3[18]["tag"] = "0"
              __frame3[18]["arg1"] = __frame3[17]
              __frame3[18]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              return idris["Foreign.nvimCommand"](nil)(__frame3[18])("let @# = prevBuf")(__eta0)
            end
        end)(__ext0)
    end)()
end
idris["Prelude.Types.List.++"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg1
              __frame1[2] = {
                nil,
                nil
              }
              __frame1[2]["0"] = function()
                return __arg2
              end
              __frame1[2]["1"] = function()
                local __frame2 = {
                  nil
                }
                local __e2 = __frame1[1]["arg1"]
                local __e3 = __frame1[1]["arg2"]
                __frame2[1] = {}
                __frame2[1]["tag"] = "1"
                __frame2[1]["arg1"] = __e2
                __frame2[1]["arg2"] = idris["Prelude.Types.List.++"](nil)(__e3)(__arg2)
                return __frame2[1]
              end
              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["Idris.IDEMode.Parser.case[405]idelex"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil
          }
          __frame1[2]["0"] = function()
            local __frame2 = {
              nil,
              nil,
              nil,
              nil,
              nil
            }
            local __e2 = __frame1[1]["arg1"]
            local __e3 = __frame1[1]["arg2"]
            __frame2[1] = __e3
            __frame2[2] = {
              nil
            }
            __frame2[2]["0"] = function()
              local __frame3 = {
                nil,
                nil,
                nil,
                nil,
                nil
              }
              local __e6 = __frame2[1]["arg1"]
              local __e7 = __frame2[1]["arg2"]
              __frame3[1] = __e7
              __frame3[2] = {
                nil
              }
              __frame3[2]["0"] = function()
                local __frame4 = {
                  nil,
                  nil,
                  nil,
                  nil,
                  nil
                }
                local __e10 = __frame3[1]["arg1"]
                local __e11 = __frame3[1]["arg2"]
                __frame4[1] = __e11
                __frame4[2] = {
                  nil
                }
                __frame4[2][""] = function()
                  local __frame5 = {
                    nil,
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame5[1] = {}
                  __frame5[1]["tag"] = "12"
                  __frame5[2] = {}
                  __frame5[2]["tag"] = "0"
                  __frame5[2]["arg1"] = __frame5[1]
                  __frame5[2]["arg2"] = 1
                  __frame5[2]["arg3"] = __e6
                  __frame5[2]["arg4"] = __e10
                  __frame5[2]["arg5"] = __e6
                  __frame5[2]["arg6"] = __e10
                  __frame5[3] = {}
                  __frame5[3]["tag"] = "0"
                  __frame5[4] = {}
                  __frame5[4]["tag"] = "1"
                  __frame5[4]["arg1"] = __frame5[2]
                  __frame5[4]["arg2"] = __frame5[3]
                  __frame5[5] = {}
                  __frame5[5]["tag"] = "1"
                  __frame5[5]["arg1"] = idris["Prelude.Types.List.++"](nil)(idris["Data.List.filter"](nil)(function(__eta0)
                    return idris["Idris.IDEMode.Parser.3567:381:notComment"](__arg0)(__eta0)
                  end)(__e2))(__frame5[4])
                  return __frame5[5]
                end
                __frame4[4] = __frame4[2][__frame4[1]]
                if __frame4[4] then
                  __frame4[5] = __frame4[4]()
                else
                  __frame4[3] = {}
                  __frame4[3]["tag"] = "0"
                  __frame4[3]["arg1"] = __e3
                  __frame4[5] = __frame4[3]
                end
                return __frame4[5]
              end
              __frame3[4] = __frame3[2][__frame3[1]["tag"]]
              if __frame3[4] then
                __frame3[5] = __frame3[4]()
              else
                __frame3[3] = {}
                __frame3[3]["tag"] = "0"
                __frame3[3]["arg1"] = __e3
                __frame3[5] = __frame3[3]
              end
              return __frame3[5]
            end
            __frame2[4] = __frame2[2][__frame2[1]["tag"]]
            if __frame2[4] then
              __frame2[5] = __frame2[4]()
            else
              __frame2[3] = {}
              __frame2[3]["tag"] = "0"
              __frame2[3]["arg1"] = __e3
              __frame2[5] = __frame2[3]
            end
            return __frame2[5]
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Prelude.Types.<+>_Semigroup__(List $a)"] = function(__arg0)
  return function(__ext0)
      return function(__ext1)
          return (function()
              return idris["Prelude.Types.List.++"](nil)(__ext0)(__ext1)
            end)()
        end
    end
end
idris["Data.List.snoc"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil
              }
              __frame1[1] = {}
              __frame1[1]["tag"] = "0"
              __frame1[2] = {}
              __frame1[2]["tag"] = "1"
              __frame1[2]["arg1"] = __arg2
              __frame1[2]["arg2"] = __frame1[1]
              return idris["Prelude.Types.List.++"](nil)(__arg1)(__frame1[2])
            end)()
        end
    end
end
idris["Idris.IDEMode.Commands.escape"] = function(__ext0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      __frame1[1]["arg1"] = function(acc)
        return function(elem)
            return function(func)
                return function(init)
                    return function(input)
                        return idris["Prelude.Types.foldr_Foldable__List"](nil)(nil)(func)(init)(input)
                      end
                  end
              end
          end
      end
      __frame1[1]["arg2"] = function(elem)
        return function(acc)
            return function(func)
                return function(init)
                    return function(input)
                        return idris["Prelude.Types.foldl_Foldable__List"](nil)(nil)(func)(init)(input)
                      end
                  end
              end
          end
      end
      __frame1[2] = {}
      __frame1[2]["tag"] = "0"
      __frame1[2]["arg1"] = function(__arg2)
        return function(__arg3)
            return idris["Prelude.Types.<+>_Semigroup__(List $a)"](nil)(__arg2)(__arg3)
          end
      end
      __frame1[2]["arg2"] = idris["Prelude.Types.neutral_Monoid__(List $a)"](nil)
      __frame1[3] = {}
      __frame1[3]["tag"] = "0"
      __frame1[3]["arg1"] = __frame1[1]
      __frame1[3]["arg2"] = __frame1[2]
      return idris["Prelude.Types.pack"](idris["Prelude.Interfaces.concatMap"](nil)(nil)(nil)(__frame1[3])(function(__eta0)
          return idris["Idris.IDEMode.Commands.3729:3322:escapeChar"](__eta0)
        end)(idris["Prelude.Types.unpack"](__ext0)))
    end)()
end
idris["Prelude.Interfaces.*>"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return (function()
                          local __frame1 = {
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          __frame1[1] = __arg3
                          __frame1[2] = {
                            nil
                          }
                          __frame1[2]["0"] = function()
                            local __frame2 = {
                              nil,
                              nil,
                              nil,
                              nil
                            }
                            local __e3 = __frame1[1]["arg3"]
                            __frame2[1] = __arg3
                            __frame2[2] = {
                              nil
                            }
                            __frame2[2]["0"] = function()
                              local __e6 = __frame2[1]["arg1"]
                              return __e6(nil)(nil)(function(__eta0)
                                  return function(__eta1)
                                      return __eta1
                                    end
                                end)(__arg4)
                            end
                            __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                            if __frame2[3] then
                              __frame2[4] = __frame2[3]()
                            else
                              idris["error"]("Impossible else branch")
                            end
                            return __e3(nil)(nil)(__frame2[4])(__arg5)
                          end
                          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                          if __frame1[3] then
                            __frame1[4] = __frame1[3]()
                          else
                            idris["error"]("Impossible else branch")
                          end
                          return __frame1[4]
                        end)()
                    end
                end
            end
        end
    end
end
idris["Prelude.Interfaces.traverse_"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return (function()
                          local __frame1 = {
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          __frame1[1] = idris["Builtin.fst"](nil)(nil)(__arg4)
                          __frame1[2] = {
                            nil
                          }
                          __frame1[2]["0"] = function()
                            local __e1 = __frame1[1]["arg1"]
                            return function(__arg6)
                                local __frame3 = {
                                  nil,
                                  nil,
                                  nil,
                                  nil
                                }
                                __frame3[1] = idris["Builtin.snd"](nil)(nil)(__arg4)
                                __frame3[2] = {
                                  nil
                                }
                                __frame3[2]["0"] = function()
                                  local __frame4 = {
                                    nil
                                  }
                                  local __e4 = __frame3[1]["arg2"]
                                  __frame4[1] = {}
                                  __frame4[1]["tag"] = "0"
                                  return __e4(nil)(__frame4[1])
                                end
                                __frame3[3] = __frame3[2][__frame3[1]["tag"]]
                                if __frame3[3] then
                                  __frame3[4] = __frame3[3]()
                                else
                                  idris["error"]("Impossible else branch")
                                end
                                return __e1(nil)(nil)(function(__eta0)
                                    return function(__eta1)
                                        return idris["Prelude.Interfaces.*>"](nil)(nil)(nil)(idris["Builtin.snd"](nil)(nil)(__arg4))(__arg5(__eta0))(__eta1)
                                      end
                                  end)(__frame3[4])(__arg6)
                              end
                          end
                          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                          if __frame1[3] then
                            __frame1[4] = __frame1[3]()
                          else
                            idris["error"]("Impossible else branch")
                          end
                          return __frame1[4]
                        end)()
                    end
                end
            end
        end
    end
end
idris["Prelude.Interfaces.for_"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__ext0)
                      return function(__ext1)
                          return (function()
                              return idris["Prelude.Basics.flip"](nil)(nil)(nil)(function(__eta0)
                                  return idris["Prelude.Interfaces.traverse_"](nil)(nil)(nil)(nil)(__arg4)(__eta0)
                                end)(__ext0)(__ext1)
                            end)()
                        end
                    end
                end
            end
        end
    end
end
idris["Prelude.Basics.&&"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg0
          __frame1[2] = {
            nil,
            nil
          }
          __frame1[2][0] = function()
            return __arg1()
          end
          __frame1[2][1] = function()
            return 1
          end
          __frame1[3] = __frame1[2][__frame1[1]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Data.Strings.case[1514]parseNumWithoutSign"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg3
                  __frame1[2] = {
                    nil,
                    nil
                  }
                  __frame1[2][0] = function()
                    return idris["Data.Strings.parseNumWithoutSign"](__arg1)(__arg2 * bigint:new("10") + idris["Prelude.Types.cast_Cast__Int_Integer"](idris["Prelude.Num.-_Neg__Int"](idris["Prelude.Types.ord"](__arg0))(idris["Prelude.Types.ord"]("0"))))
                  end
                  __frame1[2][1] = function()
                    local __frame2 = {
                      nil
                    }
                    __frame2[1] = {}
                    __frame2[1]["tag"] = "0"
                    return __frame2[1]
                  end
                  __frame1[3] = __frame1[2][__frame1[1]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[4]
                end)()
            end
        end
    end
end
idris["Idris.IDEMode.Parser.sexp"] = (function()
  local __frame1 = {
    nil,
    nil
  }
  __frame1[1] = {}
  __frame1[1]["tag"] = "8"
  __frame1[1]["arg1"] = 0
  __frame1[1]["arg2"] = idris["Parser.Rule.Source.symbol"](":")
  __frame1[1]["arg3"] = function()
    return function(___565)
        local __frame3 = {
          nil
        }
        __frame3[1] = {}
        __frame3[1]["tag"] = "8"
        __frame3[1]["arg1"] = 1
        __frame3[1]["arg2"] = idris["Parser.Rule.Source.exactIdent"]("True")
        __frame3[1]["arg3"] = function()
          return function(___581)
              local __frame5 = {
                nil,
                nil
              }
              __frame5[1] = {}
              __frame5[1]["tag"] = "2"
              __frame5[1]["arg1"] = 0
              __frame5[2] = {}
              __frame5[2]["tag"] = "0"
              __frame5[2]["arg1"] = __frame5[1]
              return __frame5[2]
            end
        end
        return __frame3[1]
      end
  end
  __frame1[2] = {}
  __frame1[2]["tag"] = "10"
  __frame1[2]["arg1"] = idris["Prelude.Basics.||"](0)(function()
    return 0
  end)
  __frame1[2]["arg2"] = idris["Prelude.Basics.&&"](idris["Prelude.Basics.||"](0)(function()
    return 0
  end))(function()
    return idris["Prelude.Basics.&&"](idris["Prelude.Basics.||"](0)(function()
        return 1
      end))(function()
        return idris["Prelude.Basics.&&"](0)(function()
            return idris["Prelude.Basics.&&"](idris["Prelude.Basics.||"](0)(function()
                return 0
              end))(function()
                return idris["Prelude.Basics.||"](0)(function()
                    return 0
                  end)
              end)
          end)
      end)
  end)
  __frame1[2]["arg3"] = __frame1[1]
  __frame1[2]["arg4"] = function()
    local __frame2 = {
      nil,
      nil
    }
    __frame2[1] = {}
    __frame2[1]["tag"] = "8"
    __frame2[1]["arg1"] = 0
    __frame2[1]["arg2"] = idris["Parser.Rule.Source.symbol"](":")
    __frame2[1]["arg3"] = function()
      return function(___550)
          local __frame4 = {
            nil
          }
          __frame4[1] = {}
          __frame4[1]["tag"] = "8"
          __frame4[1]["arg1"] = 1
          __frame4[1]["arg2"] = idris["Parser.Rule.Source.exactIdent"]("False")
          __frame4[1]["arg3"] = function()
            return function(___597)
                local __frame6 = {
                  nil,
                  nil
                }
                __frame6[1] = {}
                __frame6[1]["tag"] = "2"
                __frame6[1]["arg1"] = 1
                __frame6[2] = {}
                __frame6[2]["tag"] = "0"
                __frame6[2]["arg1"] = __frame6[1]
                return __frame6[2]
              end
          end
          return __frame4[1]
        end
    end
    __frame2[2] = {}
    __frame2[2]["tag"] = "10"
    __frame2[2]["arg1"] = idris["Prelude.Basics.||"](0)(function()
      return 0
    end)
    __frame2[2]["arg2"] = idris["Prelude.Basics.&&"](idris["Prelude.Basics.||"](0)(function()
      return 1
    end))(function()
      return idris["Prelude.Basics.&&"](0)(function()
          return idris["Prelude.Basics.&&"](idris["Prelude.Basics.||"](0)(function()
              return 0
            end))(function()
              return idris["Prelude.Basics.||"](0)(function()
                  return 0
                end)
            end)
        end)
    end)
    __frame2[2]["arg3"] = __frame2[1]
    __frame2[2]["arg4"] = function()
      local __frame3 = {
        nil,
        nil
      }
      __frame3[1] = {}
      __frame3[1]["tag"] = "8"
      __frame3[1]["arg1"] = 1
      __frame3[1]["arg2"] = idris["Parser.Rule.Source.intLit"]
      __frame3[1]["arg3"] = function()
        return function(i)
            local __frame5 = {
              nil,
              nil
            }
            __frame5[1] = {}
            __frame5[1]["tag"] = "3"
            __frame5[1]["arg1"] = i
            __frame5[2] = {}
            __frame5[2]["tag"] = "0"
            __frame5[2]["arg1"] = __frame5[1]
            return __frame5[2]
          end
      end
      __frame3[2] = {}
      __frame3[2]["tag"] = "10"
      __frame3[2]["arg1"] = idris["Prelude.Basics.||"](0)(function()
        return 1
      end)
      __frame3[2]["arg2"] = idris["Prelude.Basics.&&"](0)(function()
        return idris["Prelude.Basics.&&"](idris["Prelude.Basics.||"](0)(function()
            return 0
          end))(function()
            return idris["Prelude.Basics.||"](0)(function()
                return 0
              end)
          end)
      end)
      __frame3[2]["arg3"] = __frame3[1]
      __frame3[2]["arg4"] = function()
        local __frame4 = {
          nil,
          nil
        }
        __frame4[1] = {}
        __frame4[1]["tag"] = "8"
        __frame4[1]["arg1"] = 1
        __frame4[1]["arg2"] = idris["Parser.Rule.Source.strLit"]
        __frame4[1]["arg3"] = function()
          return function(str)
              local __frame6 = {
                nil,
                nil
              }
              __frame6[1] = {}
              __frame6[1]["tag"] = "1"
              __frame6[1]["arg1"] = str
              __frame6[2] = {}
              __frame6[2]["tag"] = "0"
              __frame6[2]["arg1"] = __frame6[1]
              return __frame6[2]
            end
        end
        __frame4[2] = {}
        __frame4[2]["tag"] = "10"
        __frame4[2]["arg1"] = 0
        __frame4[2]["arg2"] = idris["Prelude.Basics.&&"](idris["Prelude.Basics.||"](0)(function()
          return 0
        end))(function()
          return idris["Prelude.Basics.||"](0)(function()
              return 0
            end)
        end)
        __frame4[2]["arg3"] = __frame4[1]
        __frame4[2]["arg4"] = function()
          local __frame5 = {
            nil,
            nil
          }
          __frame5[1] = {}
          __frame5[1]["tag"] = "8"
          __frame5[1]["arg1"] = 0
          __frame5[1]["arg2"] = idris["Parser.Rule.Source.symbol"](":")
          __frame5[1]["arg3"] = function()
            return function(___513)
                local __frame7 = {
                  nil
                }
                __frame7[1] = {}
                __frame7[1]["tag"] = "8"
                __frame7[1]["arg1"] = 1
                __frame7[1]["arg2"] = idris["Parser.Rule.Source.unqualifiedName"]
                __frame7[1]["arg3"] = function()
                  return function(x)
                      local __frame9 = {
                        nil,
                        nil
                      }
                      __frame9[1] = {}
                      __frame9[1]["tag"] = "4"
                      __frame9[1]["arg1"] = x
                      __frame9[2] = {}
                      __frame9[2]["tag"] = "0"
                      __frame9[2]["arg1"] = __frame9[1]
                      return __frame9[2]
                    end
                end
                return __frame7[1]
              end
          end
          __frame5[2] = {}
          __frame5[2]["tag"] = "10"
          __frame5[2]["arg1"] = idris["Prelude.Basics.||"](0)(function()
            return 0
          end)
          __frame5[2]["arg2"] = idris["Prelude.Basics.||"](0)(function()
            return 0
          end)
          __frame5[2]["arg3"] = __frame5[1]
          __frame5[2]["arg4"] = function()
            local __frame6 = {
              nil
            }
            __frame6[1] = {}
            __frame6[1]["tag"] = "8"
            __frame6[1]["arg1"] = 0
            __frame6[1]["arg2"] = idris["Parser.Rule.Source.symbol"]("(")
            __frame6[1]["arg3"] = function()
              return function(___485)
                  local __frame8 = {
                    nil
                  }
                  __frame8[1] = {}
                  __frame8[1]["tag"] = "9"
                  __frame8[1]["arg1"] = 1
                  __frame8[1]["arg2"] = 0
                  __frame8[1]["arg3"] = idris["Text.Parser.many"](nil)(nil)(idris["Idris.IDEMode.Parser.sexp"])
                  __frame8[1]["arg4"] = function(xs)
                    local __frame9 = {
                      nil
                    }
                    __frame9[1] = {}
                    __frame9[1]["tag"] = "8"
                    __frame9[1]["arg1"] = 1
                    __frame9[1]["arg2"] = idris["Parser.Rule.Source.symbol"](")")
                    __frame9[1]["arg3"] = function()
                      return function(___632)
                          local __frame11 = {
                            nil,
                            nil
                          }
                          __frame11[1] = {}
                          __frame11[1]["tag"] = "0"
                          __frame11[1]["arg1"] = xs
                          __frame11[2] = {}
                          __frame11[2]["tag"] = "0"
                          __frame11[2]["arg1"] = __frame11[1]
                          return __frame11[2]
                        end
                    end
                    return __frame9[1]
                  end
                  return __frame8[1]
                end
            end
            return __frame6[1]
          end
          return __frame5[2]
        end
        return __frame4[2]
      end
      return __frame3[2]
    end
    return __frame2[2]
  end
  return __frame1[2]
end)()
idris["Prelude.Show.primNumShow"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil
                  }
                  local str = __arg1(__arg3)
                  __frame1[1] = {}
                  __frame1[1]["tag"] = "5"
                  return idris["Prelude.Show.showParens"](idris["Prelude.Basics.&&"](idris["Prelude.Show.>=_Ord__Prec"](__arg2)(__frame1[1]))(function()
                      return idris["Prelude.Show.firstCharIs"](function(__arg4)
                          return idris["Prelude.EqOrd.==_Eq__Char"](__arg4)("-")
                        end)(str)
                    end))(str)
                end)()
            end
        end
    end
end
idris["Prelude.Show.showPrec_Show__Integer"] = function(__ext0)
  return function(__ext1)
      return (function()
          return idris["Prelude.Show.primNumShow"](nil)(function(__eta0)
              return bigint.tostring(__eta0)
            end)(__ext0)(__ext1)
        end)()
    end
end
idris["Prelude.Show.show_Show__Integer"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      return idris["Prelude.Show.showPrec_Show__Integer"](__frame1[1])(__arg0)
    end)()
end
idris["Idris.IDEMode.Commands.show_Show__SExp"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[2]["0"] = function()
        local __e0 = __frame1[1]["arg1"]
        return idris["Prelude.Types.Strings.++"]("(")(idris["Prelude.Types.Strings.++"](idris["Core.Name.Namespace.showSep"](" ")(idris["Prelude.Types.map_Functor__List"](nil)(nil)(function(__arg1)
            return idris["Idris.IDEMode.Commands.show_Show__SExp"](__arg1)
          end)(__e0)))(")"))
      end
      __frame1[2]["1"] = function()
        local __e1 = __frame1[1]["arg1"]
        return idris["Prelude.Types.Strings.++"]("\"")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.escape"](__e1))("\""))
      end
      __frame1[2]["2"] = function()
        local __e2 = __frame1[1]["arg1"]
        return idris["Prelude.Types.Strings.++"](":")(idris["Prelude.Show.show_Show__Bool"](__e2))
      end
      __frame1[2]["3"] = function()
        local __e3 = __frame1[1]["arg1"]
        return idris["Prelude.Show.show_Show__Integer"](__e3)
      end
      __frame1[2]["4"] = function()
        local __e4 = __frame1[1]["arg1"]
        return idris["Prelude.Types.Strings.++"](":")(__e4)
      end
      __frame1[3] = __frame1[2][__frame1[1]["tag"]]
      if __frame1[3] then
        __frame1[4] = __frame1[3]()
      else
        idris["error"]("Impossible else branch")
      end
      return __frame1[4]
    end)()
end
idris["Prelude.Show.show_Show__Nat"] = function(__arg0)
  return (function()
      return idris["Prelude.Show.show_Show__Integer"](__arg0)
    end)()
end
idris["Prelude.Show.showPrec_Show__Int"] = function(__ext0)
  return function(__ext1)
      return (function()
          return idris["Prelude.Show.primNumShow"](nil)(function(__eta0)
              return tostring(__eta0)
            end)(__ext0)(__ext1)
        end)()
    end
end
idris["Prelude.Show.show_Show__Int"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      return idris["Prelude.Show.showPrec_Show__Int"](__frame1[1])(__arg0)
    end)()
end
idris["Language.Reflection.TT.show_Show__Name"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[2]["2"] = function()
        local __e0 = __frame1[1]["arg1"]
        local __e1 = __frame1[1]["arg2"]
        return idris["Prelude.Types.Strings.++"](idris["Language.Reflection.TT.show_Show__Namespace"](__e0))(idris["Prelude.Types.Strings.++"](".")(idris["Language.Reflection.TT.show_Show__Name"](__e1)))
      end
      __frame1[2]["0"] = function()
        local __e2 = __frame1[1]["arg1"]
        return __e2
      end
      __frame1[2]["1"] = function()
        local __e3 = __frame1[1]["arg1"]
        local __e4 = __frame1[1]["arg2"]
        return idris["Prelude.Types.Strings.++"]("{")(idris["Prelude.Types.Strings.++"](__e3)(idris["Prelude.Types.Strings.++"](":")(idris["Prelude.Types.Strings.++"](idris["Prelude.Show.show_Show__Int"](__e4))("}"))))
      end
      __frame1[2]["3"] = function()
        local __e5 = __frame1[1]["arg1"]
        return __e5
      end
      __frame1[2]["4"] = function()
        local __e7 = __frame1[1]["arg1"]
        return idris["Prelude.Types.Strings.++"](".")(__e7)
      end
      __frame1[3] = __frame1[2][__frame1[1]["tag"]]
      if __frame1[3] then
        __frame1[4] = __frame1[3]()
      else
        idris["error"]("Impossible else branch")
      end
      return __frame1[4]
    end)()
end
idris["System.File.show_Show__FileError"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[2]["0"] = function()
        local __e0 = __frame1[1]["arg1"]
        return idris["Prelude.Types.Strings.++"]("File error: ")(idris["Prelude.Show.show_Show__Int"](__e0))
      end
      __frame1[2]["1"] = function()
        return "File Read Error"
      end
      __frame1[2]["2"] = function()
        return "File Write Error"
      end
      __frame1[2]["3"] = function()
        return "File Not Found"
      end
      __frame1[2]["4"] = function()
        return "Permission Denied"
      end
      __frame1[2]["5"] = function()
        return "File Exists"
      end
      __frame1[3] = __frame1[2][__frame1[1]["tag"]]
      if __frame1[3] then
        __frame1[4] = __frame1[3]()
      else
        idris["error"]("Impossible else branch")
      end
      return __frame1[4]
    end)()
end
idris["Plugin.case[4990]case block in runFind,rec"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return (function()
                              local __frame1 = {
                                nil,
                                nil,
                                nil,
                                nil
                              }
                              __frame1[1] = __arg6
                              __frame1[2] = {
                                nil,
                                nil
                              }
                              __frame1[2][0] = function()
                                return function(__eta0)
                                    return idris["Data.List.reverse"](nil)(__arg2)
                                  end
                              end
                              __frame1[2][1] = function()
                                local line = idris["Plugin.trimNewLineAtEnd"](__arg4)
                                return function(__eta0)
                                    local __frame3 = {
                                      nil
                                    }
                                    __frame3[1] = {}
                                    __frame3[1]["tag"] = "1"
                                    __frame3[1]["arg1"] = line
                                    __frame3[1]["arg2"] = __arg2
                                    return idris["Plugin.4914:4948:rec"](__arg0)(__arg1)(__arg3)(__frame3[1])(__eta0)
                                  end
                              end
                              __frame1[3] = __frame1[2][__frame1[1]]
                              if __frame1[3] then
                                __frame1[4] = __frame1[3]()
                              else
                                idris["error"]("Impossible else branch")
                              end
                              return __frame1[4]
                            end)()
                        end
                    end
                end
            end
        end
    end
end
idris["Plugin.4914:4948:rec"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__ext0)
                  return (function()
                      local __frame1 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame1[1] = {}
                      __frame1[1]["tag"] = "0"
                      __frame1[1]["arg1"] = function(b)
                        return function(a)
                            return function(func)
                                return function(__arg149)
                                    return function(__eta0)
                                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                      end
                                  end
                              end
                          end
                      end
                      __frame1[1]["arg2"] = function(a)
                        return function(__arg482)
                            return function(__eta0)
                                return __arg482
                              end
                          end
                      end
                      __frame1[1]["arg3"] = function(b)
                        return function(a)
                            return function(__arg483)
                                return function(__arg485)
                                    return function(__eta0)
                                        local __act17 = __arg483(__eta0)
                                        local __act16 = __arg485(__eta0)
                                        return __act17(__act16)
                                      end
                                  end
                              end
                          end
                      end
                      __frame1[2] = {}
                      __frame1[2]["tag"] = "0"
                      __frame1[2]["arg1"] = __frame1[1]
                      __frame1[2]["arg2"] = function(b)
                        return function(a)
                            return function(__arg644)
                                return function(__arg645)
                                    return function(__eta0)
                                        local __act24 = __arg644(__eta0)
                                        return __arg645(__act24)(__eta0)
                                      end
                                  end
                              end
                          end
                      end
                      __frame1[2]["arg3"] = function(a)
                        return function(__arg647)
                            return function(__eta0)
                                local __act51 = __arg647(__eta0)
                                return __act51(__eta0)
                              end
                          end
                      end
                      __frame1[3] = {}
                      __frame1[3]["tag"] = "0"
                      __frame1[3]["arg1"] = __frame1[2]
                      __frame1[3]["arg2"] = function(a)
                        return function(__arg6794)
                            return __arg6794
                          end
                      end
                      local __act24 = idris["System.File.fGetLine"](nil)(__frame1[3])(__arg2)(__ext0)
                      __frame1[4] = __act24
                      __frame1[5] = {
                        nil,
                        nil
                      }
                      __frame1[5]["1"] = function()
                        local __frame2 = {
                          nil
                        }
                        local __e2 = __frame1[4]["arg1"]
                        __frame2[1] = {}
                        __frame2[1]["tag"] = "1"
                        __frame2[1]["arg1"] = __e2
                        local ___0 = __frame2[1]
                        return idris["Plugin.case[4990]case block in runFind,rec"](__arg0)(__arg1)(__arg3)(__arg2)(__e2)(___0)(idris["Prelude.Basics.||"](idris["Prelude.EqOrd.==_Eq__String"](__e2)(""))(function()
                            return idris["Prelude.EqOrd.==_Eq__String"](__e2)("\n")
                          end))(__ext0)
                      end
                      __frame1[5]["0"] = function()
                        local __frame2 = {
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        local __e5 = __frame1[4]["arg1"]
                        __frame2[1] = {}
                        __frame2[1]["tag"] = "0"
                        __frame2[1]["arg1"] = function(b)
                          return function(a)
                              return function(func)
                                  return function(__arg149)
                                      return function(__eta0)
                                          return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                        end
                                    end
                                end
                            end
                        end
                        __frame2[1]["arg2"] = function(a)
                          return function(__arg482)
                              return function(__eta0)
                                  return __arg482
                                end
                            end
                        end
                        __frame2[1]["arg3"] = function(b)
                          return function(a)
                              return function(__arg483)
                                  return function(__arg485)
                                      return function(__eta0)
                                          local __act17 = __arg483(__eta0)
                                          local __act16 = __arg485(__eta0)
                                          return __act17(__act16)
                                        end
                                    end
                                end
                            end
                        end
                        __frame2[2] = {}
                        __frame2[2]["tag"] = "0"
                        __frame2[2]["arg1"] = __frame2[1]
                        __frame2[2]["arg2"] = function(b)
                          return function(a)
                              return function(__arg644)
                                  return function(__arg645)
                                      return function(__eta0)
                                          local __act25 = __arg644(__eta0)
                                          return __arg645(__act25)(__eta0)
                                        end
                                    end
                                end
                            end
                        end
                        __frame2[2]["arg3"] = function(a)
                          return function(__arg647)
                              return function(__eta0)
                                  local __act51 = __arg647(__eta0)
                                  return __act51(__eta0)
                                end
                            end
                        end
                        __frame2[3] = {}
                        __frame2[3]["tag"] = "0"
                        __frame2[3]["arg1"] = __frame2[2]
                        __frame2[3]["arg2"] = function(a)
                          return function(__arg6794)
                              return __arg6794
                            end
                        end
                        local __act25 = idris["Prelude.IO.putStrLn"](nil)(__frame2[3])(idris["System.File.show_Show__FileError"](__e5))(__ext0)
                        __frame2[4] = {}
                        __frame2[4]["tag"] = "0"
                        __frame2[4]["arg1"] = function(b)
                          return function(a)
                              return function(func)
                                  return function(__arg149)
                                      return function(__eta0)
                                          return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                        end
                                    end
                                end
                            end
                        end
                        __frame2[4]["arg2"] = function(a)
                          return function(__arg482)
                              return function(__eta0)
                                  return __arg482
                                end
                            end
                        end
                        __frame2[4]["arg3"] = function(b)
                          return function(a)
                              return function(__arg483)
                                  return function(__arg485)
                                      return function(__eta0)
                                          local __act17 = __arg483(__eta0)
                                          local __act16 = __arg485(__eta0)
                                          return __act17(__act16)
                                        end
                                    end
                                end
                            end
                        end
                        __frame2[5] = {}
                        __frame2[5]["tag"] = "0"
                        __frame2[5]["arg1"] = __frame2[4]
                        __frame2[5]["arg2"] = function(b)
                          return function(a)
                              return function(__arg644)
                                  return function(__arg645)
                                      return function(__eta0)
                                          local __act26 = __arg644(__eta0)
                                          return __arg645(__act26)(__eta0)
                                        end
                                    end
                                end
                            end
                        end
                        __frame2[5]["arg3"] = function(a)
                          return function(__arg647)
                              return function(__eta0)
                                  local __act51 = __arg647(__eta0)
                                  return __act51(__eta0)
                                end
                            end
                        end
                        __frame2[6] = {}
                        __frame2[6]["tag"] = "0"
                        __frame2[6]["arg1"] = __frame2[5]
                        __frame2[6]["arg2"] = function(a)
                          return function(__arg6794)
                              return __arg6794
                            end
                        end
                        return idris["System.exitFailure"](nil)(nil)(__frame2[6])(__ext0)
                      end
                      __frame1[6] = __frame1[5][__frame1[4]["tag"]]
                      if __frame1[6] then
                        __frame1[7] = __frame1[6]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame1[7]
                    end)()
                end
            end
        end
    end
end
idris["Parser.Support.show_Show__(ParseError $tok)"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg2
              __frame1[2] = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[2]["0"] = function()
                local __e1 = __frame1[1]["arg1"]
                local __e3 = __frame1[1]["arg3"]
                return idris["Prelude.Types.Strings.++"]("Parse error: ")(idris["Prelude.Types.Strings.++"](__e1)(idris["Prelude.Types.Strings.++"](" (next tokens: ")(idris["Prelude.Types.Strings.++"](idris["Prelude.Show.show_Show__(List $a)"](nil)(__arg1)(idris["Data.List.take"](nil)(bigint:new("1") + bigint:new("1") + bigint:new("1") + bigint:new("1") + bigint:new("1") + bigint:new("1") + bigint:new("1") + bigint:new("1") + bigint:new("1") + bigint:new("1") + bigint:new("0"))(__e3)))(")"))))
              end
              __frame1[2]["1"] = function()
                local __frame2 = {
                  nil,
                  nil,
                  nil,
                  nil
                }
                local __e5 = __frame1[1]["arg1"]
                __frame2[1] = __e5
                __frame2[2] = {
                  nil
                }
                __frame2[2]["0"] = function()
                  local __frame3 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  local __e12 = __frame2[1]["arg1"]
                  local __e13 = __frame2[1]["arg2"]
                  __frame3[1] = __e13
                  __frame3[2] = {
                    nil
                  }
                  __frame3[2]["0"] = function()
                    local __frame4 = {
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    local __e16 = __frame3[1]["arg1"]
                    local __e17 = __frame3[1]["arg2"]
                    __frame4[1] = {}
                    __frame4[1]["tag"] = "0"
                    __frame4[1]["arg1"] = function(x)
                      return idris["Prelude.Show.show_Show__Int"](x)
                    end
                    __frame4[1]["arg2"] = function(d)
                      return function(x)
                          return idris["Prelude.Show.showPrec_Show__Int"](d)(x)
                        end
                    end
                    __frame4[2] = {}
                    __frame4[2]["tag"] = "0"
                    __frame4[2]["arg1"] = function(x)
                      return idris["Prelude.Show.show_Show__Int"](x)
                    end
                    __frame4[2]["arg2"] = function(d)
                      return function(x)
                          return idris["Prelude.Show.showPrec_Show__Int"](d)(x)
                        end
                    end
                    __frame4[3] = {}
                    __frame4[3]["tag"] = "0"
                    __frame4[3]["arg1"] = __frame4[1]
                    __frame4[3]["arg2"] = __frame4[2]
                    __frame4[4] = {}
                    __frame4[4]["tag"] = "0"
                    __frame4[4]["arg1"] = __e12
                    __frame4[4]["arg2"] = __e16
                    return idris["Prelude.Types.Strings.++"]("Lex error at ")(idris["Prelude.Types.Strings.++"](idris["Prelude.Show.show_Show__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)"](nil)(nil)(__frame4[3])(__frame4[4]))(idris["Prelude.Types.Strings.++"](" input: ")(__e17)))
                  end
                  __frame3[3] = __frame3[2][__frame3[1]["tag"]]
                  if __frame3[3] then
                    __frame3[4] = __frame3[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame3[4]
                end
                __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                if __frame2[3] then
                  __frame2[4] = __frame2[3]()
                else
                  idris["error"]("Impossible else branch")
                end
                return __frame2[4]
              end
              __frame1[2]["2"] = function()
                local __e7 = __frame1[1]["arg1"]
                return idris["Prelude.Types.Strings.++"]("File error: ")(idris["System.File.show_Show__FileError"](__e7))
              end
              __frame1[2]["3"] = function()
                local __frame2 = {
                  nil,
                  nil,
                  nil,
                  nil
                }
                local __e9 = __frame1[1]["arg1"]
                __frame2[1] = __e9
                __frame2[2] = {
                  nil
                }
                __frame2[2]["0"] = function()
                  local __frame3 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  local __e18 = __frame2[1]["arg1"]
                  local __e19 = __frame2[1]["arg2"]
                  local __e20 = __frame2[1]["arg3"]
                  __frame3[1] = {}
                  __frame3[1]["tag"] = "0"
                  __frame3[1]["arg1"] = function(x)
                    return idris["Prelude.Show.show_Show__Int"](x)
                  end
                  __frame3[1]["arg2"] = function(d)
                    return function(x)
                        return idris["Prelude.Show.showPrec_Show__Int"](d)(x)
                      end
                  end
                  __frame3[2] = {}
                  __frame3[2]["tag"] = "0"
                  __frame3[2]["arg1"] = function(x)
                    return idris["Prelude.Show.show_Show__Int"](x)
                  end
                  __frame3[2]["arg2"] = function(d)
                    return function(x)
                        return idris["Prelude.Show.showPrec_Show__Int"](d)(x)
                      end
                  end
                  __frame3[3] = {}
                  __frame3[3]["tag"] = "0"
                  __frame3[3]["arg1"] = __frame3[1]
                  __frame3[3]["arg2"] = __frame3[2]
                  __frame3[4] = {}
                  __frame3[4]["tag"] = "0"
                  __frame3[4]["arg1"] = __e19
                  __frame3[4]["arg2"] = __e18
                  return idris["Prelude.Types.Strings.++"]("Lit error(s) at ")(idris["Prelude.Types.Strings.++"](idris["Prelude.Show.show_Show__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)"](nil)(nil)(__frame3[3])(__frame3[4]))(idris["Prelude.Types.Strings.++"](" input: ")(__e20)))
                end
                __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                if __frame2[3] then
                  __frame2[4] = __frame2[3]()
                else
                  idris["error"]("Impossible else branch")
                end
                return __frame2[4]
              end
              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["System.File.showPrec_Show__FileError"] = function(__arg0)
  return function(__arg1)
      return (function()
          return idris["System.File.show_Show__FileError"](__arg1)
        end)()
    end
end
idris["Prelude.Show.showPrec_Show__Double"] = function(__ext0)
  return function(__ext1)
      return (function()
          return idris["Prelude.Show.primNumShow"](nil)(function(__eta0)
              return tostring(__eta0)
            end)(__ext0)(__ext1)
        end)()
    end
end
idris["Prelude.Show.show_Show__Double"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      return idris["Prelude.Show.showPrec_Show__Double"](__frame1[1])(__arg0)
    end)()
end
idris["Plugin.writeToBuffer"] = function(__arg0)
  return function(__arg1)
      return function(__ext0)
          return (function()
              local __frame1 = {
                nil
              }
              local __act24 = idris["Plugin.createResponseBuffer"](__ext0)
              local __act25 = idris["Plugin.bufwinnr"](".")(__ext0)
              local __act26 = idris["Plugin.bufwinnr"](idris["Plugin.responseBufferName"])(__ext0)
              __frame1[1] = {}
              __frame1[1]["tag"] = "0"
              __frame1[1]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta0)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                              end
                          end
                      end
                  end
              end
              __frame1[1]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta0)
                        return __arg482
                      end
                  end
              end
              __frame1[1]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta0)
                                local __act17 = __arg483(__eta0)
                                local __act16 = __arg485(__eta0)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              return idris["Prelude.Interfaces.when"](nil)(__frame1[1])(idris["Prelude.EqOrd.>_Ord__Int"](__act26)(bigint.tonumber(bigint:new("0"))))(function()
                  return function(__eta0)
                      local __frame3 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame3[1] = {}
                      __frame3[1]["tag"] = "0"
                      __frame3[1]["arg1"] = function(b)
                        return function(a)
                            return function(func)
                                return function(__arg149)
                                    return function(__eta1)
                                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame3[1]["arg2"] = function(a)
                        return function(__arg482)
                            return function(__eta1)
                                return __arg482
                              end
                          end
                      end
                      __frame3[1]["arg3"] = function(b)
                        return function(a)
                            return function(__arg483)
                                return function(__arg485)
                                    return function(__eta1)
                                        local __act17 = __arg483(__eta1)
                                        local __act16 = __arg485(__eta1)
                                        return __act17(__act16)
                                      end
                                  end
                              end
                          end
                      end
                      __frame3[2] = {}
                      __frame3[2]["tag"] = "0"
                      __frame3[2]["arg1"] = __frame3[1]
                      __frame3[2]["arg2"] = function(b)
                        return function(a)
                            return function(__arg644)
                                return function(__arg645)
                                    return function(__eta1)
                                        local __act27 = __arg644(__eta1)
                                        return __arg645(__act27)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame3[2]["arg3"] = function(a)
                        return function(__arg647)
                            return function(__eta1)
                                local __act51 = __arg647(__eta1)
                                return __act51(__eta1)
                              end
                          end
                      end
                      __frame3[3] = {}
                      __frame3[3]["tag"] = "0"
                      __frame3[3]["arg1"] = __frame3[2]
                      __frame3[3]["arg2"] = function(a)
                        return function(__arg6794)
                            return __arg6794
                          end
                      end
                      local __act27 = idris["Foreign.nvimCommand"](nil)(__frame3[3])(idris["Prelude.Types.Strings.++"](idris["Prelude.Show.show_Show__Int"](__act26))("wincmd w"))(__eta0)
                      local __act28 = idris["Plugin.line"]("$")(__eta0)
                      local __act29 = idris["Plugin.appendLines"](__arg0)(0)(__act28)(__arg1)(__eta0)
                      __frame3[4] = {}
                      __frame3[4]["tag"] = "0"
                      __frame3[4]["arg1"] = function(b)
                        return function(a)
                            return function(func)
                                return function(__arg149)
                                    return function(__eta1)
                                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame3[4]["arg2"] = function(a)
                        return function(__arg482)
                            return function(__eta1)
                                return __arg482
                              end
                          end
                      end
                      __frame3[4]["arg3"] = function(b)
                        return function(a)
                            return function(__arg483)
                                return function(__arg485)
                                    return function(__eta1)
                                        local __act17 = __arg483(__eta1)
                                        local __act16 = __arg485(__eta1)
                                        return __act17(__act16)
                                      end
                                  end
                              end
                          end
                      end
                      __frame3[5] = {}
                      __frame3[5]["tag"] = "0"
                      __frame3[5]["arg1"] = __frame3[4]
                      __frame3[5]["arg2"] = function(b)
                        return function(a)
                            return function(__arg644)
                                return function(__arg645)
                                    return function(__eta1)
                                        local __act30 = __arg644(__eta1)
                                        return __arg645(__act30)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame3[5]["arg3"] = function(a)
                        return function(__arg647)
                            return function(__eta1)
                                local __act51 = __arg647(__eta1)
                                return __act51(__eta1)
                              end
                          end
                      end
                      __frame3[6] = {}
                      __frame3[6]["tag"] = "0"
                      __frame3[6]["arg1"] = __frame3[5]
                      __frame3[6]["arg2"] = function(a)
                        return function(__arg6794)
                            return __arg6794
                          end
                      end
                      local __act30 = idris["Foreign.nvimCommand"](nil)(__frame3[6])("normal! G")(__eta0)
                      __frame3[7] = {}
                      __frame3[7]["tag"] = "0"
                      __frame3[7]["arg1"] = function(b)
                        return function(a)
                            return function(func)
                                return function(__arg149)
                                    return function(__eta1)
                                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame3[7]["arg2"] = function(a)
                        return function(__arg482)
                            return function(__eta1)
                                return __arg482
                              end
                          end
                      end
                      __frame3[7]["arg3"] = function(b)
                        return function(a)
                            return function(__arg483)
                                return function(__arg485)
                                    return function(__eta1)
                                        local __act17 = __arg483(__eta1)
                                        local __act16 = __arg485(__eta1)
                                        return __act17(__act16)
                                      end
                                  end
                              end
                          end
                      end
                      __frame3[8] = {}
                      __frame3[8]["tag"] = "0"
                      __frame3[8]["arg1"] = __frame3[7]
                      __frame3[8]["arg2"] = function(b)
                        return function(a)
                            return function(__arg644)
                                return function(__arg645)
                                    return function(__eta1)
                                        local __act31 = __arg644(__eta1)
                                        return __arg645(__act31)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame3[8]["arg3"] = function(a)
                        return function(__arg647)
                            return function(__eta1)
                                local __act51 = __arg647(__eta1)
                                return __act51(__eta1)
                              end
                          end
                      end
                      __frame3[9] = {}
                      __frame3[9]["tag"] = "0"
                      __frame3[9]["arg1"] = __frame3[8]
                      __frame3[9]["arg2"] = function(a)
                        return function(__arg6794)
                            return __arg6794
                          end
                      end
                      return idris["Foreign.nvimCommand"](nil)(__frame3[9])(idris["Prelude.Types.Strings.++"](idris["Prelude.Show.show_Show__Int"](__act25))("wincmd w"))(__eta0)
                    end
                end)(__ext0)
            end)()
        end
    end
end
idris["Plugin.runFind"] = function(__arg0)
  return function(__arg1)
      return (function()
          local cmd = idris["Prelude.Types.Strings.++"]("fd -p ")(idris["Prelude.Types.Strings.++"](__arg1)(idris["Prelude.Types.Strings.++"](" . ")(__arg0)))
          return function(__eta0)
              local __frame2 = {
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil
              }
              __frame2[1] = {}
              __frame2[1]["tag"] = "0"
              __frame2[1]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame2[1]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame2[1]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame2[2] = {}
              __frame2[2]["tag"] = "0"
              __frame2[2]["arg1"] = __frame2[1]
              __frame2[2]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act24 = __arg644(__eta1)
                                return __arg645(__act24)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame2[2]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame2[3] = {}
              __frame2[3]["tag"] = "0"
              __frame2[3]["arg1"] = __frame2[2]
              __frame2[3]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              __frame2[4] = {}
              __frame2[4]["tag"] = "0"
              local __act24 = idris["System.File.popen"](nil)(__frame2[3])(cmd)(__frame2[4])(__eta0)
              __frame2[5] = __act24
              __frame2[6] = {
                nil,
                nil
              }
              __frame2[6]["1"] = function()
                local __frame3 = {
                  nil,
                  nil,
                  nil,
                  nil
                }
                local __e2 = __frame2[5]["arg1"]
                __frame3[1] = {}
                __frame3[1]["tag"] = "0"
                local __act25 = idris["Plugin.4914:4948:rec"](__arg1)(__arg0)(__e2)(__frame3[1])(__eta0)
                __frame3[2] = {}
                __frame3[2]["tag"] = "0"
                __frame3[2]["arg1"] = function(b)
                  return function(a)
                      return function(func)
                          return function(__arg149)
                              return function(__eta1)
                                  return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                end
                            end
                        end
                    end
                end
                __frame3[2]["arg2"] = function(a)
                  return function(__arg482)
                      return function(__eta1)
                          return __arg482
                        end
                    end
                end
                __frame3[2]["arg3"] = function(b)
                  return function(a)
                      return function(__arg483)
                          return function(__arg485)
                              return function(__eta1)
                                  local __act17 = __arg483(__eta1)
                                  local __act16 = __arg485(__eta1)
                                  return __act17(__act16)
                                end
                            end
                        end
                    end
                end
                __frame3[3] = {}
                __frame3[3]["tag"] = "0"
                __frame3[3]["arg1"] = __frame3[2]
                __frame3[3]["arg2"] = function(b)
                  return function(a)
                      return function(__arg644)
                          return function(__arg645)
                              return function(__eta1)
                                  local __act26 = __arg644(__eta1)
                                  return __arg645(__act26)(__eta1)
                                end
                            end
                        end
                    end
                end
                __frame3[3]["arg3"] = function(a)
                  return function(__arg647)
                      return function(__eta1)
                          local __act51 = __arg647(__eta1)
                          return __act51(__eta1)
                        end
                    end
                end
                __frame3[4] = {}
                __frame3[4]["tag"] = "0"
                __frame3[4]["arg1"] = __frame3[3]
                __frame3[4]["arg2"] = function(a)
                  return function(__arg6794)
                      return __arg6794
                    end
                end
                local __act26 = idris["System.File.pclose"](nil)(__frame3[4])(__e2)(__eta0)
                return __act25
              end
              __frame2[6]["0"] = function()
                local __frame3 = {
                  nil,
                  nil,
                  nil,
                  nil,
                  nil,
                  nil
                }
                local __e5 = __frame2[5]["arg1"]
                __frame3[1] = {}
                __frame3[1]["tag"] = "0"
                __frame3[1]["arg1"] = function(b)
                  return function(a)
                      return function(func)
                          return function(__arg149)
                              return function(__eta1)
                                  return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                end
                            end
                        end
                    end
                end
                __frame3[1]["arg2"] = function(a)
                  return function(__arg482)
                      return function(__eta1)
                          return __arg482
                        end
                    end
                end
                __frame3[1]["arg3"] = function(b)
                  return function(a)
                      return function(__arg483)
                          return function(__arg485)
                              return function(__eta1)
                                  local __act17 = __arg483(__eta1)
                                  local __act16 = __arg485(__eta1)
                                  return __act17(__act16)
                                end
                            end
                        end
                    end
                end
                __frame3[2] = {}
                __frame3[2]["tag"] = "0"
                __frame3[2]["arg1"] = __frame3[1]
                __frame3[2]["arg2"] = function(b)
                  return function(a)
                      return function(__arg644)
                          return function(__arg645)
                              return function(__eta1)
                                  local __act25 = __arg644(__eta1)
                                  return __arg645(__act25)(__eta1)
                                end
                            end
                        end
                    end
                end
                __frame3[2]["arg3"] = function(a)
                  return function(__arg647)
                      return function(__eta1)
                          local __act51 = __arg647(__eta1)
                          return __act51(__eta1)
                        end
                    end
                end
                __frame3[3] = {}
                __frame3[3]["tag"] = "0"
                __frame3[3]["arg1"] = __frame3[2]
                __frame3[3]["arg2"] = function(a)
                  return function(__arg6794)
                      return __arg6794
                    end
                end
                local __act25 = idris["Prelude.IO.putStrLn"](nil)(__frame3[3])(idris["System.File.show_Show__FileError"](__e5))(__eta0)
                __frame3[4] = {}
                __frame3[4]["tag"] = "0"
                __frame3[4]["arg1"] = function(b)
                  return function(a)
                      return function(func)
                          return function(__arg149)
                              return function(__eta1)
                                  return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                end
                            end
                        end
                    end
                end
                __frame3[4]["arg2"] = function(a)
                  return function(__arg482)
                      return function(__eta1)
                          return __arg482
                        end
                    end
                end
                __frame3[4]["arg3"] = function(b)
                  return function(a)
                      return function(__arg483)
                          return function(__arg485)
                              return function(__eta1)
                                  local __act17 = __arg483(__eta1)
                                  local __act16 = __arg485(__eta1)
                                  return __act17(__act16)
                                end
                            end
                        end
                    end
                end
                __frame3[5] = {}
                __frame3[5]["tag"] = "0"
                __frame3[5]["arg1"] = __frame3[4]
                __frame3[5]["arg2"] = function(b)
                  return function(a)
                      return function(__arg644)
                          return function(__arg645)
                              return function(__eta1)
                                  local __act26 = __arg644(__eta1)
                                  return __arg645(__act26)(__eta1)
                                end
                            end
                        end
                    end
                end
                __frame3[5]["arg3"] = function(a)
                  return function(__arg647)
                      return function(__eta1)
                          local __act51 = __arg647(__eta1)
                          return __act51(__eta1)
                        end
                    end
                end
                __frame3[6] = {}
                __frame3[6]["tag"] = "0"
                __frame3[6]["arg1"] = __frame3[5]
                __frame3[6]["arg2"] = function(a)
                  return function(__arg6794)
                      return __arg6794
                    end
                end
                return idris["System.exitFailure"](nil)(nil)(__frame3[6])(__eta0)
              end
              __frame2[7] = __frame2[6][__frame2[5]["tag"]]
              if __frame2[7] then
                __frame2[8] = __frame2[7]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame2[8]
            end
        end)()
    end
end
idris["Data.Strings.parseNumWithoutSign"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg0
          __frame1[2] = {
            nil,
            nil
          }
          __frame1[2]["0"] = function()
            local __frame2 = {
              nil
            }
            __frame2[1] = {}
            __frame2[1]["tag"] = "1"
            __frame2[1]["arg1"] = __arg1
            return __frame2[1]
          end
          __frame1[2]["1"] = function()
            local __e2 = __frame1[1]["arg1"]
            local __e3 = __frame1[1]["arg2"]
            return idris["Data.Strings.case[1514]parseNumWithoutSign"](__e2)(__e3)(__arg1)(idris["Prelude.Basics.&&"](idris["Prelude.EqOrd.>=_Ord__Char"](__e2)("0"))(function()
                return idris["Prelude.EqOrd.<=_Ord__Char"](__e2)("9")
              end))
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Data.Strings.case[1581]with block in parsePositive,parsePosTrimmed"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return (function()
                          local __frame1 = {
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          __frame1[1] = __arg5
                          __frame1[2] = {
                            nil,
                            nil
                          }
                          __frame1[2][0] = function()
                            local __frame2 = {
                              nil,
                              nil,
                              nil,
                              nil
                            }
                            __frame2[1] = __arg1
                            __frame2[2] = {
                              nil
                            }
                            __frame2[2]["0"] = function()
                              local __e3 = __frame2[1]["arg3"]
                              return function(__arg6)
                                  return __e3(__arg6)
                                end
                            end
                            __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                            if __frame2[3] then
                              __frame2[4] = __frame2[3]()
                            else
                              idris["error"]("Impossible else branch")
                            end
                            return idris["Prelude.Types.map_Functor__Maybe"](nil)(nil)(__frame2[4])(idris["Data.Strings.parseNumWithoutSign"](idris["Prelude.Types.unpack"](__arg3))(idris["Prelude.Types.cast_Cast__Int_Integer"](idris["Prelude.Num.-_Neg__Int"](idris["Prelude.Types.ord"](__arg4))(idris["Prelude.Types.ord"]("0")))))
                          end
                          __frame1[2][1] = function()
                            local __frame2 = {
                              nil
                            }
                            __frame2[1] = {}
                            __frame2[1]["tag"] = "0"
                            return __frame2[1]
                          end
                          __frame1[3] = __frame1[2][__frame1[1]]
                          if __frame1[3] then
                            __frame1[4] = __frame1[3]()
                          else
                            idris["error"]("Impossible else branch")
                          end
                          return __frame1[4]
                        end)()
                    end
                end
            end
        end
    end
end
idris["Data.Strings.with[1549]parsePositive,parsePosTrimmed"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return (function()
                      local __frame1 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame1[1] = __arg3
                      __frame1[2] = {
                        nil
                      }
                      __frame1[2][""] = function()
                        local __frame2 = {
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        __frame2[1] = __arg4
                        __frame2[2] = {
                          nil
                        }
                        __frame2[2]["0"] = function()
                          local __frame3 = {
                            nil
                          }
                          __frame3[1] = {}
                          __frame3[1]["tag"] = "0"
                          return __frame3[1]
                        end
                        __frame2[7] = __frame2[2][__frame2[1]["tag"]]
                        if __frame2[7] then
                          __frame2[8] = __frame2[7]()
                        else
                          __frame2[3] = __arg4
                          __frame2[4] = {
                            nil
                          }
                          __frame2[4]["1"] = function()
                            local __frame3 = {
                              nil,
                              nil,
                              nil,
                              nil
                            }
                            local __e0 = __frame2[3]["arg1"]
                            local __e1 = __frame2[3]["arg2"]
                            __frame3[1] = __e0
                            __frame3[2] = {
                              nil
                            }
                            __frame3[2]["+"] = function()
                              local __frame4 = {
                                nil,
                                nil,
                                nil,
                                nil
                              }
                              __frame4[1] = __arg1
                              __frame4[2] = {
                                nil
                              }
                              __frame4[2]["0"] = function()
                                local __e3 = __frame4[1]["arg3"]
                                return function(__arg5)
                                    return __e3(__arg5)
                                  end
                              end
                              __frame4[3] = __frame4[2][__frame4[1]["tag"]]
                              if __frame4[3] then
                                __frame4[4] = __frame4[3]()
                              else
                                idris["error"]("Impossible else branch")
                              end
                              return idris["Prelude.Types.map_Functor__Maybe"](nil)(nil)(__frame4[4])(idris["Data.Strings.parseNumWithoutSign"](idris["Prelude.Types.unpack"](__e1))(bigint:new("0")))
                            end
                            __frame3[3] = __frame3[2][__frame3[1]]
                            if __frame3[3] then
                              __frame3[4] = __frame3[3]()
                            else
                              __frame3[4] = idris["Data.Strings.case[1581]with block in parsePositive,parsePosTrimmed"](nil)(__arg1)(__arg2)(__e1)(__e0)(idris["Prelude.Basics.&&"](idris["Prelude.EqOrd.>=_Ord__Char"](__e0)("0"))(function()
                                return idris["Prelude.EqOrd.<=_Ord__Char"](__e0)("9")
                              end))
                            end
                            return __frame3[4]
                          end
                          __frame2[5] = __frame2[4][__frame2[3]["tag"]]
                          if __frame2[5] then
                            __frame2[6] = __frame2[5]()
                          else
                            idris["error"]("Impossible else branch")
                          end
                          __frame2[8] = __frame2[6]
                        end
                        return __frame2[8]
                      end
                      __frame1[7] = __frame1[2][__frame1[1]]
                      if __frame1[7] then
                        __frame1[8] = __frame1[7]()
                      else
                        __frame1[3] = __arg4
                        __frame1[4] = {
                          nil
                        }
                        __frame1[4]["1"] = function()
                          local __frame2 = {
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          local __e0 = __frame1[3]["arg1"]
                          local __e1 = __frame1[3]["arg2"]
                          __frame2[1] = __e0
                          __frame2[2] = {
                            nil
                          }
                          __frame2[2]["+"] = function()
                            local __frame3 = {
                              nil,
                              nil,
                              nil,
                              nil
                            }
                            __frame3[1] = __arg1
                            __frame3[2] = {
                              nil
                            }
                            __frame3[2]["0"] = function()
                              local __e3 = __frame3[1]["arg3"]
                              return function(__arg5)
                                  return __e3(__arg5)
                                end
                            end
                            __frame3[3] = __frame3[2][__frame3[1]["tag"]]
                            if __frame3[3] then
                              __frame3[4] = __frame3[3]()
                            else
                              idris["error"]("Impossible else branch")
                            end
                            return idris["Prelude.Types.map_Functor__Maybe"](nil)(nil)(__frame3[4])(idris["Data.Strings.parseNumWithoutSign"](idris["Prelude.Types.unpack"](__e1))(bigint:new("0")))
                          end
                          __frame2[3] = __frame2[2][__frame2[1]]
                          if __frame2[3] then
                            __frame2[4] = __frame2[3]()
                          else
                            __frame2[4] = idris["Data.Strings.case[1581]with block in parsePositive,parsePosTrimmed"](nil)(__arg1)(__arg2)(__e1)(__e0)(idris["Prelude.Basics.&&"](idris["Prelude.EqOrd.>=_Ord__Char"](__e0)("0"))(function()
                              return idris["Prelude.EqOrd.<=_Ord__Char"](__e0)("9")
                            end))
                          end
                          return __frame2[4]
                        end
                        __frame1[5] = __frame1[4][__frame1[3]["tag"]]
                        if __frame1[5] then
                          __frame1[6] = __frame1[5]()
                        else
                          idris["error"]("Impossible else branch")
                        end
                        __frame1[8] = __frame1[6]
                      end
                      return __frame1[8]
                    end)()
                end
            end
        end
    end
end
idris["Data.Strings.2452:1547:parsePosTrimmed"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  return idris["Data.Strings.with[1549]parsePositive,parsePosTrimmed"](nil)(__arg1)(__arg3)(__arg3)(idris["Data.Strings.strM"](__arg3))
                end)()
            end
        end
    end
end
idris["Data.Strings.parsePositive"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              return idris["Data.Strings.2452:1547:parsePosTrimmed"](nil)(__arg1)(__arg2)(idris["Data.Strings.trim"](__arg2))
            end)()
        end
    end
end
idris["Plugin.jumpToDef"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__ext0)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = {}
                  __frame1[1]["tag"] = "0"
                  __frame1[1]["arg1"] = function(b)
                    return function(a)
                        return function(func)
                            return function(__arg149)
                                return function(__eta0)
                                    return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                  end
                              end
                          end
                      end
                  end
                  __frame1[1]["arg2"] = function(a)
                    return function(__arg482)
                        return function(__eta0)
                            return __arg482
                          end
                      end
                  end
                  __frame1[1]["arg3"] = function(b)
                    return function(a)
                        return function(__arg483)
                            return function(__arg485)
                                return function(__eta0)
                                    local __act17 = __arg483(__eta0)
                                    local __act16 = __arg485(__eta0)
                                    return __act17(__act16)
                                  end
                              end
                          end
                      end
                  end
                  __frame1[2] = {}
                  __frame1[2]["tag"] = "0"
                  __frame1[2]["arg1"] = __frame1[1]
                  __frame1[2]["arg2"] = function(b)
                    return function(a)
                        return function(__arg644)
                            return function(__arg645)
                                return function(__eta0)
                                    local __act24 = __arg644(__eta0)
                                    return __arg645(__act24)(__eta0)
                                  end
                              end
                          end
                      end
                  end
                  __frame1[2]["arg3"] = function(a)
                    return function(__arg647)
                        return function(__eta0)
                            local __act51 = __arg647(__eta0)
                            return __act51(__eta0)
                          end
                      end
                  end
                  __frame1[3] = {}
                  __frame1[3]["tag"] = "0"
                  __frame1[3]["arg1"] = __frame1[2]
                  __frame1[3]["arg2"] = function(a)
                    return function(__arg6794)
                        return __arg6794
                      end
                  end
                  local __act24 = idris["Foreign.nvimCommand"](nil)(__frame1[3])("write")(__ext0)
                  __frame1[4] = {}
                  __frame1[4]["tag"] = "0"
                  __frame1[4]["arg1"] = function(b)
                    return function(a)
                        return function(func)
                            return function(__arg149)
                                return function(__eta0)
                                    return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                  end
                              end
                          end
                      end
                  end
                  __frame1[4]["arg2"] = function(a)
                    return function(__arg482)
                        return function(__eta0)
                            return __arg482
                          end
                      end
                  end
                  __frame1[4]["arg3"] = function(b)
                    return function(a)
                        return function(__arg483)
                            return function(__arg485)
                                return function(__eta0)
                                    local __act17 = __arg483(__eta0)
                                    local __act16 = __arg485(__eta0)
                                    return __act17(__act16)
                                  end
                              end
                          end
                      end
                  end
                  __frame1[5] = {}
                  __frame1[5]["tag"] = "0"
                  __frame1[5]["arg1"] = __frame1[4]
                  __frame1[5]["arg2"] = function(b)
                    return function(a)
                        return function(__arg644)
                            return function(__arg645)
                                return function(__eta0)
                                    local __act25 = __arg644(__eta0)
                                    return __arg645(__act25)(__eta0)
                                  end
                              end
                          end
                      end
                  end
                  __frame1[5]["arg3"] = function(a)
                    return function(__arg647)
                        return function(__eta0)
                            local __act51 = __arg647(__eta0)
                            return __act51(__eta0)
                          end
                      end
                  end
                  __frame1[6] = {}
                  __frame1[6]["tag"] = "0"
                  __frame1[6]["arg1"] = __frame1[5]
                  __frame1[6]["arg2"] = function(a)
                    return function(__arg6794)
                        return __arg6794
                      end
                  end
                  local __act25 = idris["Foreign.nvimCommand"](nil)(__frame1[6])(idris["Prelude.Types.Strings.++"]("edit ")(__arg0))(__ext0)
                  __frame1[7] = {}
                  __frame1[7]["tag"] = "0"
                  __frame1[7]["arg1"] = function(b)
                    return function(a)
                        return function(func)
                            return function(__arg149)
                                return function(__eta0)
                                    return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                  end
                              end
                          end
                      end
                  end
                  __frame1[7]["arg2"] = function(a)
                    return function(__arg482)
                        return function(__eta0)
                            return __arg482
                          end
                      end
                  end
                  __frame1[7]["arg3"] = function(b)
                    return function(a)
                        return function(__arg483)
                            return function(__arg485)
                                return function(__eta0)
                                    local __act17 = __arg483(__eta0)
                                    local __act16 = __arg485(__eta0)
                                    return __act17(__act16)
                                  end
                              end
                          end
                      end
                  end
                  __frame1[8] = {}
                  __frame1[8]["tag"] = "0"
                  __frame1[8]["arg1"] = __frame1[7]
                  __frame1[8]["arg2"] = function(b)
                    return function(a)
                        return function(__arg644)
                            return function(__arg645)
                                return function(__eta0)
                                    local __act26 = __arg644(__eta0)
                                    return __arg645(__act26)(__eta0)
                                  end
                              end
                          end
                      end
                  end
                  __frame1[8]["arg3"] = function(a)
                    return function(__arg647)
                        return function(__eta0)
                            local __act51 = __arg647(__eta0)
                            return __act51(__eta0)
                          end
                      end
                  end
                  __frame1[9] = {}
                  __frame1[9]["tag"] = "0"
                  __frame1[9]["arg1"] = __frame1[8]
                  __frame1[9]["arg2"] = function(a)
                    return function(__arg6794)
                        return __arg6794
                      end
                  end
                  local __act26 = idris["Foreign.nvimCommand"](nil)(__frame1[9])(idris["Prelude.Types.Strings.++"]("call setpos('.', [0, ")(idris["Prelude.Types.Strings.++"](idris["Prelude.Show.show_Show__Integer"](__arg1 + bigint:new("1")))(idris["Prelude.Types.Strings.++"](", ")(idris["Prelude.Types.Strings.++"](idris["Prelude.Show.show_Show__Integer"](__arg2 + bigint:new("1")))(", 0])")))))(__ext0)
                  __frame1[10] = {}
                  __frame1[10]["tag"] = "0"
                  __frame1[10]["arg1"] = function(b)
                    return function(a)
                        return function(func)
                            return function(__arg149)
                                return function(__eta0)
                                    return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                  end
                              end
                          end
                      end
                  end
                  __frame1[10]["arg2"] = function(a)
                    return function(__arg482)
                        return function(__eta0)
                            return __arg482
                          end
                      end
                  end
                  __frame1[10]["arg3"] = function(b)
                    return function(a)
                        return function(__arg483)
                            return function(__arg485)
                                return function(__eta0)
                                    local __act17 = __arg483(__eta0)
                                    local __act16 = __arg485(__eta0)
                                    return __act17(__act16)
                                  end
                              end
                          end
                      end
                  end
                  __frame1[11] = {}
                  __frame1[11]["tag"] = "0"
                  __frame1[11]["arg1"] = __frame1[10]
                  __frame1[11]["arg2"] = function(b)
                    return function(a)
                        return function(__arg644)
                            return function(__arg645)
                                return function(__eta0)
                                    local __act27 = __arg644(__eta0)
                                    return __arg645(__act27)(__eta0)
                                  end
                              end
                          end
                      end
                  end
                  __frame1[11]["arg3"] = function(a)
                    return function(__arg647)
                        return function(__eta0)
                            local __act51 = __arg647(__eta0)
                            return __act51(__eta0)
                          end
                      end
                  end
                  __frame1[12] = {}
                  __frame1[12]["tag"] = "0"
                  __frame1[12]["arg1"] = __frame1[11]
                  __frame1[12]["arg2"] = function(a)
                    return function(__arg6794)
                        return __arg6794
                      end
                  end
                  return idris["Foreign.nvimCommand"](nil)(__frame1[12])("normal! zz")(__ext0)
                end)()
            end
        end
    end
end
idris["Prelude.Types.isUpper"] = function(__arg0)
  return (function()
      return idris["Prelude.Basics.&&"](idris["Prelude.EqOrd.>=_Ord__Char"](__arg0)("A"))(function()
          return idris["Prelude.EqOrd.<=_Ord__Char"](__arg0)("Z")
        end)
    end)()
end
idris["Prelude.Types.toLower"] = function(__arg0)
  return (function()
      return idris["Prelude.Types.case[4191]toLower"](__arg0)(idris["Prelude.Types.isUpper"](__arg0))
    end)()
end
idris["Parser.Support.5713:3246:toOct"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg2
              __frame1[2] = {
                nil,
                nil
              }
              __frame1[2]["0"] = function()
                local __frame2 = {
                  nil
                }
                __frame2[1] = {}
                __frame2[1]["tag"] = "1"
                __frame2[1]["arg1"] = 0
                return __frame2[1]
              end
              __frame1[2]["1"] = function()
                local __e2 = __frame1[1]["arg1"]
                local __e3 = __frame1[1]["arg2"]
                return idris["Prelude.Types.>>=_Monad__Maybe"](nil)(nil)(idris["Parser.Support.oct"](idris["Prelude.Types.toLower"](__e2)))(function(__bind0)
                    return idris["Prelude.Types.>>=_Monad__Maybe"](nil)(nil)(idris["Parser.Support.5713:3246:toOct"](__arg0)(__arg1 * 8)(__e3))(function(__bind1)
                        return idris["Prelude.Types.pure_Applicative__Maybe"](nil)(__bind0 * __arg1 + __bind1)
                      end)
                  end)
              end
              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["Parser.Support.5713:3153:toHex"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg2
              __frame1[2] = {
                nil,
                nil
              }
              __frame1[2]["0"] = function()
                local __frame2 = {
                  nil
                }
                __frame2[1] = {}
                __frame2[1]["tag"] = "1"
                __frame2[1]["arg1"] = 0
                return __frame2[1]
              end
              __frame1[2]["1"] = function()
                local __e2 = __frame1[1]["arg1"]
                local __e3 = __frame1[1]["arg2"]
                return idris["Prelude.Types.>>=_Monad__Maybe"](nil)(nil)(idris["Parser.Support.hex"](idris["Prelude.Types.toLower"](__e2)))(function(__bind0)
                    return idris["Prelude.Types.>>=_Monad__Maybe"](nil)(nil)(idris["Parser.Support.5713:3153:toHex"](__arg0)(__arg1 * 16)(__e3))(function(__bind1)
                        return idris["Prelude.Types.pure_Applicative__Maybe"](nil)(__bind0 * __arg1 + __bind1)
                      end)
                  end)
              end
              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["Utils.Hex.2208:728:fromHexChars'"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil,
            nil
          }
          __frame1[2]["0"] = function()
            local __frame2 = {
              nil
            }
            __frame2[1] = {}
            __frame2[1]["tag"] = "1"
            __frame2[1]["arg1"] = 0
            return __frame2[1]
          end
          __frame1[2]["1"] = function()
            local __e2 = __frame1[1]["arg1"]
            local __e3 = __frame1[1]["arg2"]
            return idris["Prelude.Types.>>=_Monad__Maybe"](nil)(nil)(idris["Utils.Hex.fromHexDigit"](idris["Prelude.Types.toLower"](__e2)))(function(__bind0)
                return idris["Prelude.Types.>>=_Monad__Maybe"](nil)(nil)(idris["Utils.Hex.2208:728:fromHexChars'"](__arg0 * 16)(__e3))(function(__bind1)
                    return idris["Prelude.Types.pure_Applicative__Maybe"](nil)(__bind0 * __arg0 + __bind1)
                  end)
              end)
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Prelude.Types.isOctDigit"] = function(__arg0)
  return (function()
      return idris["Prelude.Basics.&&"](idris["Prelude.EqOrd.>=_Ord__Char"](__arg0)("0"))(function()
          return idris["Prelude.EqOrd.<=_Ord__Char"](__arg0)("7")
        end)
    end)()
end
idris["Prelude.Types.isLower"] = function(__arg0)
  return (function()
      return idris["Prelude.Basics.&&"](idris["Prelude.EqOrd.>=_Ord__Char"](__arg0)("a"))(function()
          return idris["Prelude.EqOrd.<=_Ord__Char"](__arg0)("z")
        end)
    end)()
end
idris["Prelude.Types.toUpper"] = function(__arg0)
  return (function()
      return idris["Prelude.Types.case[4177]toUpper"](__arg0)(idris["Prelude.Types.isLower"](__arg0))
    end)()
end
idris["Prelude.Types.isHexDigit"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      __frame1[1]["arg1"] = function(__arg2)
        return function(__arg3)
            return idris["Prelude.EqOrd.==_Eq__Char"](__arg2)(__arg3)
          end
      end
      __frame1[1]["arg2"] = function(__arg4)
        return function(__arg5)
            return idris["Prelude.EqOrd./=_Eq__Char"](__arg4)(__arg5)
          end
      end
      return idris["Prelude.Types.elem"](nil)(__frame1[1])(idris["Prelude.Types.toUpper"](__arg0))(idris["Prelude.Types.4123:4203:hexChars"](__arg0))
    end)()
end
idris["Prelude.Types.isDigit"] = function(__arg0)
  return (function()
      return idris["Prelude.Basics.&&"](idris["Prelude.EqOrd.>=_Ord__Char"](__arg0)("0"))(function()
          return idris["Prelude.EqOrd.<=_Ord__Char"](__arg0)("9")
        end)
    end)()
end
idris["Prelude.Show.case[6212]case block in showLitChar"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil,
            nil
          }
          __frame1[2][0] = function()
            return function(__eta0)
                return idris["Prelude.Types.strCons"]("\\")(idris["Prelude.Show.protectEsc"](function(__eta1)
                    return idris["Prelude.Types.isDigit"](__eta1)
                  end)(idris["Prelude.Show.show_Show__Int"](utf8.byte(__arg0)))(__eta0))
              end
          end
          __frame1[2][1] = function()
            return function(__eta0)
                return idris["Prelude.Types.strCons"](__arg0)(__eta0)
              end
          end
          __frame1[3] = __frame1[2][__frame1[1]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Prelude.Show.case[6189]showLitChar"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil,
            nil
          }
          __frame1[2]["1"] = function()
            local __e1 = __frame1[1]["arg1"]
            return function(__eta0)
                return idris["Prelude.Types.strCons"]("\\")(idris["Prelude.Types.Strings.++"](__e1)(__eta0))
              end
          end
          __frame1[2]["0"] = function()
            return idris["Prelude.Show.case[6212]case block in showLitChar"](__arg0)(idris["Prelude.EqOrd.>_Ord__Char"](__arg0)(utf8.char(idris.unpack({127})) --[[ \DEL--]]))
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Parser.Support.case[3491]case block in escape'"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg3
                  __frame1[2] = {
                    nil,
                    nil
                  }
                  __frame1[2]["1"] = function()
                    local __frame2 = {
                      nil,
                      nil,
                      nil
                    }
                    local __e1 = __frame1[1]["arg1"]
                    __frame2[1] = {}
                    __frame2[1]["tag"] = "0"
                    __frame2[2] = {}
                    __frame2[2]["tag"] = "1"
                    __frame2[2]["arg1"] = __e1
                    __frame2[2]["arg2"] = __frame2[1]
                    __frame2[3] = {}
                    __frame2[3]["tag"] = "1"
                    __frame2[3]["arg1"] = __frame2[2]
                    return __frame2[3]
                  end
                  __frame1[2]["0"] = function()
                    return idris["Parser.Support.escape'"](__arg0)
                  end
                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[4]
                end)()
            end
        end
    end
end
idris["Parser.Support.case[3423]case block in case block in escape'"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return (function()
                          local __frame1 = {
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          __frame1[1] = __arg5
                          __frame1[2] = {
                            nil,
                            nil
                          }
                          __frame1[2]["1"] = function()
                            local __frame2 = {
                              nil
                            }
                            local __e1 = __frame1[1]["arg1"]
                            __frame2[1] = {}
                            __frame2[1]["tag"] = "1"
                            __frame2[1]["arg1"] = __arg3
                            __frame2[1]["arg2"] = __arg4
                            return idris["Prelude.Types.>>=_Monad__Maybe"](nil)(nil)(idris["Parser.Support.escape'"](__frame2[1]))(function(__bind0)
                                local __frame3 = {
                                  nil,
                                  nil
                                }
                                __frame3[1] = {}
                                __frame3[1]["tag"] = "1"
                                __frame3[1]["arg1"] = __e1
                                __frame3[1]["arg2"] = __bind0
                                __frame3[2] = {}
                                __frame3[2]["tag"] = "1"
                                __frame3[2]["arg1"] = __frame3[1]
                                return __frame3[2]
                              end)
                          end
                          __frame1[2]["0"] = function()
                            return idris["Parser.Support.escape'"](__arg0)
                          end
                          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                          if __frame1[3] then
                            __frame1[4] = __frame1[3]()
                          else
                            idris["error"]("Impossible else branch")
                          end
                          return __frame1[4]
                        end)()
                    end
                end
            end
        end
    end
end
idris["Parser.Support.case[3373]case block in escape'"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return (function()
                          local __frame1 = {
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          __frame1[1] = __arg5
                          __frame1[2] = {
                            nil,
                            nil
                          }
                          __frame1[2]["1"] = function()
                            local __e1 = __frame1[1]["arg1"]
                            return idris["Prelude.Types.>>=_Monad__Maybe"](nil)(nil)(idris["Parser.Support.escape'"](__arg4))(function(__bind0)
                                local __frame3 = {
                                  nil,
                                  nil
                                }
                                __frame3[1] = {}
                                __frame3[1]["tag"] = "1"
                                __frame3[1]["arg1"] = __e1
                                __frame3[1]["arg2"] = __bind0
                                __frame3[2] = {}
                                __frame3[2]["tag"] = "1"
                                __frame3[2]["arg1"] = __frame3[1]
                                return __frame3[2]
                              end)
                          end
                          __frame1[2]["0"] = function()
                            local __frame2 = {
                              nil,
                              nil,
                              nil
                            }
                            __frame2[1] = {}
                            __frame2[1]["tag"] = "0"
                            __frame2[2] = {}
                            __frame2[2]["tag"] = "1"
                            __frame2[2]["arg1"] = __arg2
                            __frame2[2]["arg2"] = __frame2[1]
                            __frame2[3] = {}
                            __frame2[3]["tag"] = "1"
                            __frame2[3]["arg1"] = __arg1
                            __frame2[3]["arg2"] = __frame2[2]
                            return idris["Parser.Support.case[3423]case block in case block in escape'"](__arg0)(__arg1)(__arg2)(__arg3)(__arg4)(idris["Parser.Support.getEsc"](idris["Prelude.Types.fastPack"](__frame2[3])))
                          end
                          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                          if __frame1[3] then
                            __frame1[4] = __frame1[3]()
                          else
                            idris["error"]("Impossible else branch")
                          end
                          return __frame1[4]
                        end)()
                    end
                end
            end
        end
    end
end
idris["Parser.Support.case[3341]escape'"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil
          }
          __frame1[2]["0"] = function()
            local __frame2 = {
              nil,
              nil,
              nil,
              nil
            }
            local __e2 = __frame1[1]["arg1"]
            local __e3 = __frame1[1]["arg2"]
            __frame2[1] = __e2
            __frame2[2] = {
              nil
            }
            __frame2[2]["0"] = function()
              local __frame3 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame3[1] = __e3
              __frame3[2] = {
                nil
              }
              __frame3[2]["1"] = function()
                local __frame4 = {
                  nil,
                  nil,
                  nil,
                  nil
                }
                local __e6 = __frame3[1]["arg1"]
                local __e7 = __frame3[1]["arg2"]
                __frame4[1] = __e7
                __frame4[2] = {
                  nil
                }
                __frame4[2]["1"] = function()
                  local __frame5 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  local __e9 = __frame4[1]["arg1"]
                  local __e10 = __frame4[1]["arg2"]
                  __frame5[1] = __e10
                  __frame5[2] = {
                    nil,
                    nil
                  }
                  __frame5[2]["1"] = function()
                    local __frame6 = {
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    local __e12 = __frame5[1]["arg1"]
                    local __e13 = __frame5[1]["arg2"]
                    __frame6[1] = {}
                    __frame6[1]["tag"] = "0"
                    __frame6[2] = {}
                    __frame6[2]["tag"] = "1"
                    __frame6[2]["arg1"] = __e12
                    __frame6[2]["arg2"] = __frame6[1]
                    __frame6[3] = {}
                    __frame6[3]["tag"] = "1"
                    __frame6[3]["arg1"] = __e9
                    __frame6[3]["arg2"] = __frame6[2]
                    __frame6[4] = {}
                    __frame6[4]["tag"] = "1"
                    __frame6[4]["arg1"] = __e6
                    __frame6[4]["arg2"] = __frame6[3]
                    return idris["Parser.Support.case[3373]case block in escape'"](__arg0)(__e6)(__e9)(__e12)(__e13)(idris["Parser.Support.getEsc"](idris["Prelude.Types.fastPack"](__frame6[4])))
                  end
                  __frame5[2]["0"] = function()
                    local __frame6 = {
                      nil,
                      nil,
                      nil
                    }
                    __frame6[1] = {}
                    __frame6[1]["tag"] = "0"
                    __frame6[2] = {}
                    __frame6[2]["tag"] = "1"
                    __frame6[2]["arg1"] = __e9
                    __frame6[2]["arg2"] = __frame6[1]
                    __frame6[3] = {}
                    __frame6[3]["tag"] = "1"
                    __frame6[3]["arg1"] = __e6
                    __frame6[3]["arg2"] = __frame6[2]
                    return idris["Parser.Support.case[3491]case block in escape'"](__arg0)(__e6)(__e9)(idris["Parser.Support.getEsc"](idris["Prelude.Types.fastPack"](__frame6[3])))
                  end
                  __frame5[3] = __frame5[2][__frame5[1]["tag"]]
                  if __frame5[3] then
                    __frame5[4] = __frame5[3]()
                  else
                    __frame5[4] = idris["Parser.Support.escape'"](__e3)
                  end
                  return __frame5[4]
                end
                __frame4[3] = __frame4[2][__frame4[1]["tag"]]
                if __frame4[3] then
                  __frame4[4] = __frame4[3]()
                else
                  __frame4[4] = idris["Parser.Support.escape'"](__e3)
                end
                return __frame4[4]
              end
              __frame3[3] = __frame3[2][__frame3[1]["tag"]]
              if __frame3[3] then
                __frame3[4] = __frame3[3]()
              else
                __frame3[4] = idris["Parser.Support.escape'"](__e3)
              end
              return __frame3[4]
            end
            __frame2[3] = __frame2[2][__frame2[1]["tag"]]
            if __frame2[3] then
              __frame2[4] = __frame2[3]()
            else
              __frame2[4] = idris["Prelude.Types.>>=_Monad__Maybe"](nil)(nil)(idris["Parser.Support.escape'"](__e3))(function(__bind0)
                local __frame3 = {
                  nil,
                  nil
                }
                __frame3[1] = {}
                __frame3[1]["tag"] = "1"
                __frame3[1]["arg1"] = idris["Prelude.Types.cast_Cast__Int_Char"](idris["Prelude.Types.cast_Cast__String_Int"](idris["Prelude.Types.fastPack"](__e2)))
                __frame3[1]["arg2"] = __bind0
                __frame3[2] = {}
                __frame3[2]["tag"] = "1"
                __frame3[2]["arg1"] = __frame3[1]
                return __frame3[2]
              end)
            end
            return __frame2[4]
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Parser.Support.case[3289]escape'"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil
          }
          __frame1[2]["0"] = function()
            local __frame2 = {
              nil,
              nil,
              nil,
              nil
            }
            local __e2 = __frame1[1]["arg1"]
            local __e3 = __frame1[1]["arg2"]
            __frame2[1] = __e2
            __frame2[2] = {
              nil
            }
            __frame2[2]["0"] = function()
              return idris["Parser.Support.escape'"](__e3)
            end
            __frame2[3] = __frame2[2][__frame2[1]["tag"]]
            if __frame2[3] then
              __frame2[4] = __frame2[3]()
            else
              __frame2[4] = idris["Prelude.Types.>>=_Monad__Maybe"](nil)(nil)(idris["Parser.Support.5713:3246:toOct"](__arg0)(1)(idris["Data.List.reverse"](nil)(__e2)))(function(__bind0)
                return idris["Prelude.Types.>>=_Monad__Maybe"](nil)(nil)(idris["Parser.Support.escape'"](__e3))(function(__bind1)
                    local __frame4 = {
                      nil
                    }
                    __frame4[1] = {}
                    __frame4[1]["tag"] = "1"
                    __frame4[1]["arg1"] = idris["Prelude.Types.cast_Cast__Int_Char"](__bind0)
                    __frame4[1]["arg2"] = __bind1
                    return idris["Prelude.Types.pure_Applicative__Maybe"](nil)(__frame4[1])
                  end)
              end)
            end
            return __frame2[4]
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Parser.Support.case[3196]escape'"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil
          }
          __frame1[2]["0"] = function()
            local __frame2 = {
              nil,
              nil,
              nil,
              nil
            }
            local __e2 = __frame1[1]["arg1"]
            local __e3 = __frame1[1]["arg2"]
            __frame2[1] = __e2
            __frame2[2] = {
              nil
            }
            __frame2[2]["0"] = function()
              return idris["Parser.Support.escape'"](__e3)
            end
            __frame2[3] = __frame2[2][__frame2[1]["tag"]]
            if __frame2[3] then
              __frame2[4] = __frame2[3]()
            else
              __frame2[4] = idris["Prelude.Types.>>=_Monad__Maybe"](nil)(nil)(idris["Parser.Support.5713:3153:toHex"](__arg0)(1)(idris["Data.List.reverse"](nil)(__e2)))(function(__bind0)
                return idris["Prelude.Types.>>=_Monad__Maybe"](nil)(nil)(idris["Parser.Support.escape'"](__e3))(function(__bind1)
                    local __frame4 = {
                      nil
                    }
                    __frame4[1] = {}
                    __frame4[1]["tag"] = "1"
                    __frame4[1]["arg1"] = idris["Prelude.Types.cast_Cast__Int_Char"](__bind0)
                    __frame4[1]["arg2"] = __bind1
                    return idris["Prelude.Types.pure_Applicative__Maybe"](nil)(__frame4[1])
                  end)
              end)
            end
            return __frame2[4]
          end
          __frame1[3] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Prelude.Show.showLitChar"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[2][utf8.char(idris.unpack({7})) --[[ \a--]]] = function()
        return function(__arg1)
            return idris["Prelude.Types.Strings.++"]("\\a")(__arg1)
          end
      end
      __frame1[2][utf8.char(idris.unpack({8})) --[[ \b--]]] = function()
        return function(__arg1)
            return idris["Prelude.Types.Strings.++"]("\\b")(__arg1)
          end
      end
      __frame1[2][utf8.char(idris.unpack({12})) --[[ \f--]]] = function()
        return function(__arg1)
            return idris["Prelude.Types.Strings.++"]("\\f")(__arg1)
          end
      end
      __frame1[2]["\n"] = function()
        return function(__arg1)
            return idris["Prelude.Types.Strings.++"]("\\n")(__arg1)
          end
      end
      __frame1[2]["\r"] = function()
        return function(__arg1)
            return idris["Prelude.Types.Strings.++"]("\\r")(__arg1)
          end
      end
      __frame1[2][utf8.char(idris.unpack({9})) --[[ \t--]]] = function()
        return function(__arg1)
            return idris["Prelude.Types.Strings.++"]("\\t")(__arg1)
          end
      end
      __frame1[2][utf8.char(idris.unpack({11})) --[[ \v--]]] = function()
        return function(__arg1)
            return idris["Prelude.Types.Strings.++"]("\\v")(__arg1)
          end
      end
      __frame1[2][utf8.char(idris.unpack({14})) --[[ \SO--]]] = function()
        return function(__eta0)
            return idris["Prelude.Show.protectEsc"](function(__arg1)
                return idris["Prelude.EqOrd.==_Eq__Char"](__arg1)("H")
              end)("\\SO")(__eta0)
          end
      end
      __frame1[2][utf8.char(idris.unpack({127})) --[[ \DEL--]]] = function()
        return function(__arg1)
            return idris["Prelude.Types.Strings.++"]("\\DEL")(__arg1)
          end
      end
      __frame1[2]["\\"] = function()
        return function(__arg1)
            return idris["Prelude.Types.Strings.++"]("\\\\")(__arg1)
          end
      end
      __frame1[3] = __frame1[2][__frame1[1]]
      if __frame1[3] then
        __frame1[4] = __frame1[3]()
      else
        __frame1[4] = idris["Prelude.Show.case[6189]showLitChar"](__arg0)(idris["Prelude.Show.1638:6006:getAt"](__arg0)(idris["Prelude.Types.fromInteger_Num__Nat"](bigint:new(utf8.byte(__arg0))))(idris["Prelude.Show.1638:6005:asciiTab"](__arg0)))
      end
      return __frame1[4]
    end)()
end
idris["Prelude.Show.showLitString"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil,
        nil
      }
      __frame1[2]["0"] = function()
        return function(__eta0)
            return __eta0
          end
      end
      __frame1[2]["1"] = function()
        local __frame2 = {
          nil,
          nil,
          nil,
          nil
        }
        local __e2 = __frame1[1]["arg1"]
        local __e3 = __frame1[1]["arg2"]
        __frame2[1] = __e2
        __frame2[2] = {
          nil
        }
        __frame2[2]["\""] = function()
          return function(__eta0)
              return idris["Prelude.Types.Strings.++"]("\\\"")(idris["Prelude.Show.showLitString"](__e3)(__eta0))
            end
        end
        __frame2[3] = __frame2[2][__frame2[1]]
        if __frame2[3] then
          __frame2[4] = __frame2[3]()
        else
          __frame2[4] = function(__eta0)
            return idris["Prelude.Show.showLitChar"](__e2)(idris["Prelude.Show.showLitString"](__e3)(__eta0))
          end
        end
        return __frame2[4]
      end
      __frame1[3] = __frame1[2][__frame1[1]["tag"]]
      if __frame1[3] then
        __frame1[4] = __frame1[3]()
      else
        idris["error"]("Impossible else branch")
      end
      return __frame1[4]
    end)()
end
idris["Prelude.Show.show_Show__String"] = function(__arg0)
  return (function()
      return idris["Prelude.Types.strCons"]("\"")(idris["Prelude.Show.showLitString"](idris["Prelude.Types.unpack"](__arg0))("\""))
    end)()
end
idris["Parser.Lexer.Source.show_Show__Token"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[2]["0"] = function()
        local __e0 = __frame1[1]["arg1"]
        return idris["Prelude.Types.Strings.++"]("character ")(idris["Prelude.Show.show_Show__String"](__e0))
      end
      __frame1[2]["1"] = function()
        local __e1 = __frame1[1]["arg1"]
        return idris["Prelude.Types.Strings.++"]("double ")(idris["Prelude.Show.show_Show__Double"](__e1))
      end
      __frame1[2]["2"] = function()
        local __e2 = __frame1[1]["arg1"]
        return idris["Prelude.Types.Strings.++"]("literal ")(idris["Prelude.Show.show_Show__Integer"](__e2))
      end
      __frame1[2]["3"] = function()
        local __e3 = __frame1[1]["arg1"]
        return idris["Prelude.Types.Strings.++"]("string ")(idris["Prelude.Show.show_Show__String"](__e3))
      end
      __frame1[2]["4"] = function()
        local __e4 = __frame1[1]["arg1"]
        return idris["Prelude.Types.Strings.++"]("hole identifier ")(__e4)
      end
      __frame1[2]["5"] = function()
        local __e5 = __frame1[1]["arg1"]
        return idris["Prelude.Types.Strings.++"]("identifier ")(__e5)
      end
      __frame1[2]["6"] = function()
        local __e6 = __frame1[1]["arg1"]
        local __e7 = __frame1[1]["arg2"]
        return idris["Prelude.Types.Strings.++"]("namespaced identifier ")(idris["Prelude.Types.Strings.++"](idris["Core.Name.Namespace.show_Show__Namespace"](__e6))(idris["Prelude.Types.Strings.++"](".")(idris["Prelude.Show.show_Show__String"](__e7))))
      end
      __frame1[2]["7"] = function()
        local __e8 = __frame1[1]["arg1"]
        return idris["Prelude.Types.Strings.++"]("dot+identifier ")(__e8)
      end
      __frame1[2]["8"] = function()
        local __e9 = __frame1[1]["arg1"]
        return idris["Prelude.Types.Strings.++"]("symbol ")(__e9)
      end
      __frame1[2]["9"] = function()
        return "comment"
      end
      __frame1[2]["10"] = function()
        local __e11 = __frame1[1]["arg1"]
        return idris["Prelude.Types.Strings.++"]("doc comment: \"")(idris["Prelude.Types.Strings.++"](__e11)("\""))
      end
      __frame1[2]["11"] = function()
        local __e12 = __frame1[1]["arg1"]
        return idris["Prelude.Types.Strings.++"]("CGDirective ")(__e12)
      end
      __frame1[2]["12"] = function()
        return "end of input"
      end
      __frame1[2]["13"] = function()
        local __e13 = __frame1[1]["arg1"]
        return __e13
      end
      __frame1[2]["14"] = function()
        local __e14 = __frame1[1]["arg1"]
        return idris["Prelude.Types.Strings.++"]("pragma ")(__e14)
      end
      __frame1[2]["15"] = function()
        local __e15 = __frame1[1]["arg1"]
        return idris["Prelude.Types.Strings.++"]("Unrecognised ")(__e15)
      end
      __frame1[3] = __frame1[2][__frame1[1]["tag"]]
      if __frame1[3] then
        __frame1[4] = __frame1[3]()
      else
        idris["error"]("Impossible else branch")
      end
      return __frame1[4]
    end)()
end
idris["Parser.Lexer.Source.showPrec_Show__Token"] = function(__arg0)
  return function(__arg1)
      return (function()
          return idris["Parser.Lexer.Source.show_Show__Token"](__arg1)
        end)()
    end
end
idris["Prelude.Types.isAlpha"] = function(__arg0)
  return (function()
      return idris["Prelude.Basics.||"](idris["Prelude.Types.isUpper"](__arg0))(function()
          return idris["Prelude.Types.isLower"](__arg0)
        end)
    end)()
end
idris["Parser.Lexer.Common.isIdentStart"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil,
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil
          }
          __frame1[2]["_"] = function()
            return 0
          end
          __frame1[7] = __frame1[2][__frame1[1]]
          if __frame1[7] then
            __frame1[8] = __frame1[7]()
          else
            __frame1[3] = __arg0
            __frame1[4] = {
              nil
            }
            __frame1[4]["1"] = function()
              return idris["Prelude.Basics.||"](idris["Prelude.Types.isUpper"](__arg1))(function()
                  return idris["Prelude.EqOrd.>_Ord__Char"](__arg1)(idris["Prelude.Types.chr"](bigint.tonumber(bigint:new("160"))))
                end)
            end
            __frame1[5] = __frame1[4][__frame1[3]["tag"]]
            if __frame1[5] then
              __frame1[6] = __frame1[5]()
            else
              __frame1[6] = idris["Prelude.Basics.||"](idris["Prelude.Types.isAlpha"](__arg1))(function()
                return idris["Prelude.EqOrd.>_Ord__Char"](__arg1)(idris["Prelude.Types.chr"](bigint.tonumber(bigint:new("160"))))
              end)
            end
            __frame1[8] = __frame1[6]
          end
          return __frame1[8]
        end)()
    end
end
idris["Prelude.Types.isAlphaNum"] = function(__arg0)
  return (function()
      return idris["Prelude.Basics.||"](idris["Prelude.Types.isDigit"](__arg0))(function()
          return idris["Prelude.Types.isAlpha"](__arg0)
        end)
    end)()
end
idris["Parser.Lexer.Common.isIdentTrailing"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil,
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg0
          __frame1[2] = {
            nil
          }
          __frame1[2]["0"] = function()
            local __frame2 = {
              nil,
              nil,
              nil,
              nil,
              nil,
              nil,
              nil,
              nil
            }
            __frame2[1] = __arg1
            __frame2[2] = {
              nil
            }
            __frame2[2]["-"] = function()
              return 0
            end
            __frame2[7] = __frame2[2][__frame2[1]]
            if __frame2[7] then
              __frame2[8] = __frame2[7]()
            else
              __frame2[3] = __arg1
              __frame2[4] = {
                nil,
                nil
              }
              __frame2[4]["'"] = function()
                return 0
              end
              __frame2[4]["_"] = function()
                return 0
              end
              __frame2[5] = __frame2[4][__frame2[3]]
              if __frame2[5] then
                __frame2[6] = __frame2[5]()
              else
                __frame2[6] = idris["Prelude.Basics.||"](idris["Prelude.Types.isAlphaNum"](__arg1))(function()
                  return idris["Prelude.EqOrd.>_Ord__Char"](__arg1)(idris["Prelude.Types.chr"](bigint.tonumber(bigint:new("160"))))
                end)
              end
              __frame2[8] = __frame2[6]
            end
            return __frame2[8]
          end
          __frame1[7] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[7] then
            __frame1[8] = __frame1[7]()
          else
            __frame1[3] = __arg1
            __frame1[4] = {
              nil,
              nil
            }
            __frame1[4]["'"] = function()
              return 0
            end
            __frame1[4]["_"] = function()
              return 0
            end
            __frame1[5] = __frame1[4][__frame1[3]]
            if __frame1[5] then
              __frame1[6] = __frame1[5]()
            else
              __frame1[6] = idris["Prelude.Basics.||"](idris["Prelude.Types.isAlphaNum"](__arg1))(function()
                return idris["Prelude.EqOrd.>_Ord__Char"](__arg1)(idris["Prelude.Types.chr"](bigint.tonumber(bigint:new("160"))))
              end)
            end
            __frame1[8] = __frame1[6]
          end
          return __frame1[8]
        end)()
    end
end
idris["Parser.Lexer.Common.identAllowDashes"] = (function()
  local __frame1 = {
    nil
  }
  __frame1[1] = {}
  __frame1[1]["tag"] = "4"
  __frame1[1]["arg1"] = idris["Text.Lexer.Core.pred"](function(__eta0)
    local __frame2 = {
      nil
    }
    __frame2[1] = {}
    __frame2[1]["tag"] = "0"
    return idris["Parser.Lexer.Common.isIdentStart"](__frame2[1])(__eta0)
  end)
  __frame1[1]["arg2"] = function()
    return idris["Text.Lexer.many"](idris["Text.Lexer.Core.pred"](function(__eta0)
        local __frame3 = {
          nil
        }
        __frame3[1] = {}
        __frame3[1]["tag"] = "0"
        return idris["Parser.Lexer.Common.isIdentTrailing"](__frame3[1])(__eta0)
      end))
  end
  return __frame1[1]
end)()
idris["Plugin.getSourceDirectory"] = (function()
  local cmd = "idris2 --libdir"
  return function(__eta0)
      local __frame2 = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame2[1] = {}
      __frame2[1]["tag"] = "0"
      __frame2[1]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta1)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                      end
                  end
              end
          end
      end
      __frame2[1]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta1)
                return __arg482
              end
          end
      end
      __frame2[1]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta1)
                        local __act17 = __arg483(__eta1)
                        local __act16 = __arg485(__eta1)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame2[2] = {}
      __frame2[2]["tag"] = "0"
      __frame2[2]["arg1"] = __frame2[1]
      __frame2[2]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta1)
                        local __act24 = __arg644(__eta1)
                        return __arg645(__act24)(__eta1)
                      end
                  end
              end
          end
      end
      __frame2[2]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta1)
                local __act51 = __arg647(__eta1)
                return __act51(__eta1)
              end
          end
      end
      __frame2[3] = {}
      __frame2[3]["tag"] = "0"
      __frame2[3]["arg1"] = __frame2[2]
      __frame2[3]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      __frame2[4] = {}
      __frame2[4]["tag"] = "0"
      local __act24 = idris["System.File.popen"](nil)(__frame2[3])(cmd)(__frame2[4])(__eta0)
      __frame2[5] = __act24
      __frame2[6] = {
        nil,
        nil
      }
      __frame2[6]["1"] = function()
        local __frame3 = {
          nil,
          nil,
          nil,
          nil,
          nil,
          nil,
          nil,
          nil
        }
        local __e2 = __frame2[5]["arg1"]
        __frame3[1] = {}
        __frame3[1]["tag"] = "0"
        __frame3[1]["arg1"] = function(b)
          return function(a)
              return function(func)
                  return function(__arg149)
                      return function(__eta1)
                          return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                        end
                    end
                end
            end
        end
        __frame3[1]["arg2"] = function(a)
          return function(__arg482)
              return function(__eta1)
                  return __arg482
                end
            end
        end
        __frame3[1]["arg3"] = function(b)
          return function(a)
              return function(__arg483)
                  return function(__arg485)
                      return function(__eta1)
                          local __act17 = __arg483(__eta1)
                          local __act16 = __arg485(__eta1)
                          return __act17(__act16)
                        end
                    end
                end
            end
        end
        __frame3[2] = {}
        __frame3[2]["tag"] = "0"
        __frame3[2]["arg1"] = __frame3[1]
        __frame3[2]["arg2"] = function(b)
          return function(a)
              return function(__arg644)
                  return function(__arg645)
                      return function(__eta1)
                          local __act25 = __arg644(__eta1)
                          return __arg645(__act25)(__eta1)
                        end
                    end
                end
            end
        end
        __frame3[2]["arg3"] = function(a)
          return function(__arg647)
              return function(__eta1)
                  local __act51 = __arg647(__eta1)
                  return __act51(__eta1)
                end
            end
        end
        __frame3[3] = {}
        __frame3[3]["tag"] = "0"
        __frame3[3]["arg1"] = __frame3[2]
        __frame3[3]["arg2"] = function(a)
          return function(__arg6794)
              return __arg6794
            end
        end
        local __act25 = idris["System.File.fGetLine"](nil)(__frame3[3])(__e2)(__eta0)
        __frame3[4] = {}
        __frame3[4]["tag"] = "1"
        __frame3[4]["arg1"] = __e2
        local ___0 = __frame3[4]
        __frame3[5] = __act25
        __frame3[6] = {
          nil,
          nil
        }
        __frame3[6]["1"] = function()
          local __frame4 = {
            nil,
            nil,
            nil,
            nil
          }
          local __e3 = __frame3[5]["arg1"]
          __frame4[1] = {}
          __frame4[1]["tag"] = "0"
          __frame4[1]["arg1"] = function(b)
            return function(a)
                return function(func)
                    return function(__arg149)
                        return function(__eta1)
                            return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                          end
                      end
                  end
              end
          end
          __frame4[1]["arg2"] = function(a)
            return function(__arg482)
                return function(__eta1)
                    return __arg482
                  end
              end
          end
          __frame4[1]["arg3"] = function(b)
            return function(a)
                return function(__arg483)
                    return function(__arg485)
                        return function(__eta1)
                            local __act17 = __arg483(__eta1)
                            local __act16 = __arg485(__eta1)
                            return __act17(__act16)
                          end
                      end
                  end
              end
          end
          __frame4[2] = {}
          __frame4[2]["tag"] = "0"
          __frame4[2]["arg1"] = __frame4[1]
          __frame4[2]["arg2"] = function(b)
            return function(a)
                return function(__arg644)
                    return function(__arg645)
                        return function(__eta1)
                            local __act26 = __arg644(__eta1)
                            return __arg645(__act26)(__eta1)
                          end
                      end
                  end
              end
          end
          __frame4[2]["arg3"] = function(a)
            return function(__arg647)
                return function(__eta1)
                    local __act51 = __arg647(__eta1)
                    return __act51(__eta1)
                  end
              end
          end
          __frame4[3] = {}
          __frame4[3]["tag"] = "0"
          __frame4[3]["arg1"] = __frame4[2]
          __frame4[3]["arg2"] = function(a)
            return function(__arg6794)
                return __arg6794
              end
          end
          local __act26 = idris["System.File.pclose"](nil)(__frame4[3])(__e2)(__eta0)
          __frame4[4] = {}
          __frame4[4]["tag"] = "1"
          __frame4[4]["arg1"] = __e3
          local ___1 = __frame4[4]
          return idris["Plugin.case[4657]case block in case block in getSourceDirectory"](cmd)(__e2)(___0)(__e3)(___1)(__act26)(idris["Data.Strings.split"](function(__arg0)
              return idris["Prelude.EqOrd.==_Eq__Char"](__arg0)("\n")
            end)(__e3))(__eta0)
        end
        __frame3[6]["0"] = function()
          local __frame4 = {
            nil,
            nil,
            nil,
            nil,
            nil,
            nil,
            nil,
            nil
          }
          local __e5 = __frame3[5]["arg1"]
          __frame4[1] = {}
          __frame4[1]["tag"] = "0"
          __frame4[1]["arg1"] = function(b)
            return function(a)
                return function(func)
                    return function(__arg149)
                        return function(__eta1)
                            return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                          end
                      end
                  end
              end
          end
          __frame4[1]["arg2"] = function(a)
            return function(__arg482)
                return function(__eta1)
                    return __arg482
                  end
              end
          end
          __frame4[1]["arg3"] = function(b)
            return function(a)
                return function(__arg483)
                    return function(__arg485)
                        return function(__eta1)
                            local __act17 = __arg483(__eta1)
                            local __act16 = __arg485(__eta1)
                            return __act17(__act16)
                          end
                      end
                  end
              end
          end
          __frame4[2] = {}
          __frame4[2]["tag"] = "0"
          __frame4[2]["arg1"] = __frame4[1]
          __frame4[2]["arg2"] = function(b)
            return function(a)
                return function(__arg644)
                    return function(__arg645)
                        return function(__eta1)
                            local __act26 = __arg644(__eta1)
                            return __arg645(__act26)(__eta1)
                          end
                      end
                  end
              end
          end
          __frame4[2]["arg3"] = function(a)
            return function(__arg647)
                return function(__eta1)
                    local __act51 = __arg647(__eta1)
                    return __act51(__eta1)
                  end
              end
          end
          __frame4[3] = {}
          __frame4[3]["tag"] = "0"
          __frame4[3]["arg1"] = __frame4[2]
          __frame4[3]["arg2"] = function(a)
            return function(__arg6794)
                return __arg6794
              end
          end
          __frame4[4] = {}
          __frame4[4]["tag"] = "0"
          __frame4[4]["arg1"] = function(x)
            return idris["System.File.show_Show__FileError"](x)
          end
          __frame4[4]["arg2"] = function(d)
            return function(x)
                return idris["System.File.showPrec_Show__FileError"](d)(x)
              end
          end
          __frame4[5] = {}
          __frame4[5]["tag"] = "0"
          __frame4[5]["arg1"] = __frame4[3]
          __frame4[5]["arg2"] = __frame4[4]
          local __act26 = idris["Prelude.IO.printLn"](nil)(nil)(__frame4[5])(__e5)(__eta0)
          __frame4[6] = {}
          __frame4[6]["tag"] = "0"
          __frame4[6]["arg1"] = function(b)
            return function(a)
                return function(func)
                    return function(__arg149)
                        return function(__eta1)
                            return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                          end
                      end
                  end
              end
          end
          __frame4[6]["arg2"] = function(a)
            return function(__arg482)
                return function(__eta1)
                    return __arg482
                  end
              end
          end
          __frame4[6]["arg3"] = function(b)
            return function(a)
                return function(__arg483)
                    return function(__arg485)
                        return function(__eta1)
                            local __act17 = __arg483(__eta1)
                            local __act16 = __arg485(__eta1)
                            return __act17(__act16)
                          end
                      end
                  end
              end
          end
          __frame4[7] = {}
          __frame4[7]["tag"] = "0"
          __frame4[7]["arg1"] = __frame4[6]
          __frame4[7]["arg2"] = function(b)
            return function(a)
                return function(__arg644)
                    return function(__arg645)
                        return function(__eta1)
                            local __act27 = __arg644(__eta1)
                            return __arg645(__act27)(__eta1)
                          end
                      end
                  end
              end
          end
          __frame4[7]["arg3"] = function(a)
            return function(__arg647)
                return function(__eta1)
                    local __act51 = __arg647(__eta1)
                    return __act51(__eta1)
                  end
              end
          end
          __frame4[8] = {}
          __frame4[8]["tag"] = "0"
          __frame4[8]["arg1"] = __frame4[7]
          __frame4[8]["arg2"] = function(a)
            return function(__arg6794)
                return __arg6794
              end
          end
          return idris["System.exitFailure"](nil)(nil)(__frame4[8])(__eta0)
        end
        __frame3[7] = __frame3[6][__frame3[5]["tag"]]
        if __frame3[7] then
          __frame3[8] = __frame3[7]()
        else
          idris["error"]("Impossible else branch")
        end
        return __frame3[8]
      end
      __frame2[6]["0"] = function()
        local __frame3 = {
          nil,
          nil,
          nil,
          nil,
          nil,
          nil,
          nil,
          nil
        }
        local __e5 = __frame2[5]["arg1"]
        __frame3[1] = {}
        __frame3[1]["tag"] = "0"
        __frame3[1]["arg1"] = function(b)
          return function(a)
              return function(func)
                  return function(__arg149)
                      return function(__eta1)
                          return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                        end
                    end
                end
            end
        end
        __frame3[1]["arg2"] = function(a)
          return function(__arg482)
              return function(__eta1)
                  return __arg482
                end
            end
        end
        __frame3[1]["arg3"] = function(b)
          return function(a)
              return function(__arg483)
                  return function(__arg485)
                      return function(__eta1)
                          local __act17 = __arg483(__eta1)
                          local __act16 = __arg485(__eta1)
                          return __act17(__act16)
                        end
                    end
                end
            end
        end
        __frame3[2] = {}
        __frame3[2]["tag"] = "0"
        __frame3[2]["arg1"] = __frame3[1]
        __frame3[2]["arg2"] = function(b)
          return function(a)
              return function(__arg644)
                  return function(__arg645)
                      return function(__eta1)
                          local __act25 = __arg644(__eta1)
                          return __arg645(__act25)(__eta1)
                        end
                    end
                end
            end
        end
        __frame3[2]["arg3"] = function(a)
          return function(__arg647)
              return function(__eta1)
                  local __act51 = __arg647(__eta1)
                  return __act51(__eta1)
                end
            end
        end
        __frame3[3] = {}
        __frame3[3]["tag"] = "0"
        __frame3[3]["arg1"] = __frame3[2]
        __frame3[3]["arg2"] = function(a)
          return function(__arg6794)
              return __arg6794
            end
        end
        __frame3[4] = {}
        __frame3[4]["tag"] = "0"
        __frame3[4]["arg1"] = function(x)
          return idris["System.File.show_Show__FileError"](x)
        end
        __frame3[4]["arg2"] = function(d)
          return function(x)
              return idris["System.File.showPrec_Show__FileError"](d)(x)
            end
        end
        __frame3[5] = {}
        __frame3[5]["tag"] = "0"
        __frame3[5]["arg1"] = __frame3[3]
        __frame3[5]["arg2"] = __frame3[4]
        local __act25 = idris["Prelude.IO.printLn"](nil)(nil)(__frame3[5])(__e5)(__eta0)
        __frame3[6] = {}
        __frame3[6]["tag"] = "0"
        __frame3[6]["arg1"] = function(b)
          return function(a)
              return function(func)
                  return function(__arg149)
                      return function(__eta1)
                          return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                        end
                    end
                end
            end
        end
        __frame3[6]["arg2"] = function(a)
          return function(__arg482)
              return function(__eta1)
                  return __arg482
                end
            end
        end
        __frame3[6]["arg3"] = function(b)
          return function(a)
              return function(__arg483)
                  return function(__arg485)
                      return function(__eta1)
                          local __act17 = __arg483(__eta1)
                          local __act16 = __arg485(__eta1)
                          return __act17(__act16)
                        end
                    end
                end
            end
        end
        __frame3[7] = {}
        __frame3[7]["tag"] = "0"
        __frame3[7]["arg1"] = __frame3[6]
        __frame3[7]["arg2"] = function(b)
          return function(a)
              return function(__arg644)
                  return function(__arg645)
                      return function(__eta1)
                          local __act26 = __arg644(__eta1)
                          return __arg645(__act26)(__eta1)
                        end
                    end
                end
            end
        end
        __frame3[7]["arg3"] = function(a)
          return function(__arg647)
              return function(__eta1)
                  local __act51 = __arg647(__eta1)
                  return __act51(__eta1)
                end
            end
        end
        __frame3[8] = {}
        __frame3[8]["tag"] = "0"
        __frame3[8]["arg1"] = __frame3[7]
        __frame3[8]["arg2"] = function(a)
          return function(__arg6794)
              return __arg6794
            end
        end
        return idris["System.exitFailure"](nil)(nil)(__frame3[8])(__eta0)
      end
      __frame2[7] = __frame2[6][__frame2[5]["tag"]]
      if __frame2[7] then
        __frame2[8] = __frame2[7]()
      else
        idris["error"]("Impossible else branch")
      end
      return __frame2[8]
    end
end)()
idris["Utils.Hex.fromHexChars"] = function(__ext0)
  return (function()
      return idris["Utils.Hex.2208:728:fromHexChars'"](1)(__ext0)
    end)()
end
idris["Utils.Hex.fromHex"] = function(__ext0)
  return (function()
      return idris["Utils.Hex.fromHexChars"](idris["Prelude.Types.unpack"](__ext0))
    end)()
end
idris["Plugin.case[4908]splitMessages"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg2
              __frame1[2] = {
                nil,
                nil
              }
              __frame1[2]["1"] = function()
                local __frame2 = {
                  nil,
                  nil,
                  nil,
                  nil
                }
                local __e1 = __frame1[1]["arg1"]
                __frame2[1] = __e1
                __frame2[2] = {
                  nil
                }
                __frame2[2][0] = function()
                  return __arg0
                end
                __frame2[3] = __frame2[2][__frame2[1]]
                if __frame2[3] then
                  __frame2[4] = __frame2[3]()
                else
                  local msg = idris["Prelude.Types.substr"](bigint:new("1") + bigint:new("1") + bigint:new("1") + bigint:new("1") + bigint:new("1") + bigint:new("1") + bigint:new("0"))(idris["Prelude.Types.cast_Cast__Int_Integer"](__e1))(__arg1)
                  local rest = idris["Prelude.Types.substr"](idris["Prelude.Types.cast_Cast__Int_Integer"](bigint.tonumber(bigint:new("6")) + __e1))(idris["Prelude.Types.Strings.length"](__arg1))(__arg1)
                  __frame2[4] = idris["Plugin.splitMessages"](rest)(idris["Data.List.snoc"](nil)(__arg0)(msg))
                end
                return __frame2[4]
              end
              __frame1[2]["0"] = function()
                return __arg0
              end
              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["Plugin.splitMessages"] = function(__arg0)
  return function(__arg1)
      return (function()
          return idris["Plugin.case[4908]splitMessages"](__arg1)(__arg0)(idris["Utils.Hex.fromHex"](idris["Prelude.Types.reverse"](idris["Prelude.Types.substr"](bigint:new("0"))(bigint:new("1") + bigint:new("1") + bigint:new("1") + bigint:new("1") + bigint:new("1") + bigint:new("1") + bigint:new("0"))(__arg0))))
        end)()
    end
end
idris["Parser.Support.escape'"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil,
        nil
      }
      __frame1[2]["0"] = function()
        local __frame2 = {
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "0"
        return idris["Prelude.Types.pure_Applicative__Maybe"](nil)(__frame2[1])
      end
      __frame1[2]["1"] = function()
        local __frame2 = {
          nil,
          nil,
          nil,
          nil
        }
        local __e2 = __frame1[1]["arg1"]
        local __e3 = __frame1[1]["arg2"]
        __frame2[1] = __e2
        __frame2[2] = {
          nil
        }
        __frame2[2]["\\"] = function()
          local __frame3 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame3[1] = __e3
          __frame3[2] = {
            nil
          }
          __frame3[2]["1"] = function()
            local __frame4 = {
              nil,
              nil,
              nil,
              nil
            }
            local __e5 = __frame3[1]["arg1"]
            local __e6 = __frame3[1]["arg2"]
            __frame4[1] = __e5
            __frame4[2] = {
              nil,
              nil,
              nil,
              nil,
              nil,
              nil,
              nil,
              nil,
              nil,
              nil,
              nil,
              nil,
              nil
            }
            __frame4[2]["\\"] = function()
              return idris["Prelude.Types.>>=_Monad__Maybe"](nil)(nil)(idris["Parser.Support.escape'"](__e6))(function(__bind0)
                  local __frame6 = {
                    nil
                  }
                  __frame6[1] = {}
                  __frame6[1]["tag"] = "1"
                  __frame6[1]["arg1"] = "\\"
                  __frame6[1]["arg2"] = __bind0
                  return idris["Prelude.Types.pure_Applicative__Maybe"](nil)(__frame6[1])
                end)
            end
            __frame4[2]["&"] = function()
              return idris["Prelude.Types.>>=_Monad__Maybe"](nil)(nil)(idris["Parser.Support.escape'"](__e6))(function(__bind0)
                  return idris["Prelude.Types.pure_Applicative__Maybe"](nil)(__bind0)
                end)
            end
            __frame4[2]["a"] = function()
              return idris["Prelude.Types.>>=_Monad__Maybe"](nil)(nil)(idris["Parser.Support.escape'"](__e6))(function(__bind0)
                  local __frame6 = {
                    nil
                  }
                  __frame6[1] = {}
                  __frame6[1]["tag"] = "1"
                  __frame6[1]["arg1"] = utf8.char(idris.unpack({7})) --[[ \a--]]
                  __frame6[1]["arg2"] = __bind0
                  return idris["Prelude.Types.pure_Applicative__Maybe"](nil)(__frame6[1])
                end)
            end
            __frame4[2]["b"] = function()
              return idris["Prelude.Types.>>=_Monad__Maybe"](nil)(nil)(idris["Parser.Support.escape'"](__e6))(function(__bind0)
                  local __frame6 = {
                    nil
                  }
                  __frame6[1] = {}
                  __frame6[1]["tag"] = "1"
                  __frame6[1]["arg1"] = utf8.char(idris.unpack({8})) --[[ \b--]]
                  __frame6[1]["arg2"] = __bind0
                  return idris["Prelude.Types.pure_Applicative__Maybe"](nil)(__frame6[1])
                end)
            end
            __frame4[2]["f"] = function()
              return idris["Prelude.Types.>>=_Monad__Maybe"](nil)(nil)(idris["Parser.Support.escape'"](__e6))(function(__bind0)
                  local __frame6 = {
                    nil
                  }
                  __frame6[1] = {}
                  __frame6[1]["tag"] = "1"
                  __frame6[1]["arg1"] = utf8.char(idris.unpack({12})) --[[ \f--]]
                  __frame6[1]["arg2"] = __bind0
                  return idris["Prelude.Types.pure_Applicative__Maybe"](nil)(__frame6[1])
                end)
            end
            __frame4[2]["n"] = function()
              return idris["Prelude.Types.>>=_Monad__Maybe"](nil)(nil)(idris["Parser.Support.escape'"](__e6))(function(__bind0)
                  local __frame6 = {
                    nil
                  }
                  __frame6[1] = {}
                  __frame6[1]["tag"] = "1"
                  __frame6[1]["arg1"] = "\n"
                  __frame6[1]["arg2"] = __bind0
                  return idris["Prelude.Types.pure_Applicative__Maybe"](nil)(__frame6[1])
                end)
            end
            __frame4[2]["r"] = function()
              return idris["Prelude.Types.>>=_Monad__Maybe"](nil)(nil)(idris["Parser.Support.escape'"](__e6))(function(__bind0)
                  local __frame6 = {
                    nil
                  }
                  __frame6[1] = {}
                  __frame6[1]["tag"] = "1"
                  __frame6[1]["arg1"] = "\r"
                  __frame6[1]["arg2"] = __bind0
                  return idris["Prelude.Types.pure_Applicative__Maybe"](nil)(__frame6[1])
                end)
            end
            __frame4[2]["t"] = function()
              return idris["Prelude.Types.>>=_Monad__Maybe"](nil)(nil)(idris["Parser.Support.escape'"](__e6))(function(__bind0)
                  local __frame6 = {
                    nil
                  }
                  __frame6[1] = {}
                  __frame6[1]["tag"] = "1"
                  __frame6[1]["arg1"] = utf8.char(idris.unpack({9})) --[[ \t--]]
                  __frame6[1]["arg2"] = __bind0
                  return idris["Prelude.Types.pure_Applicative__Maybe"](nil)(__frame6[1])
                end)
            end
            __frame4[2]["v"] = function()
              return idris["Prelude.Types.>>=_Monad__Maybe"](nil)(nil)(idris["Parser.Support.escape'"](__e6))(function(__bind0)
                  local __frame6 = {
                    nil
                  }
                  __frame6[1] = {}
                  __frame6[1]["tag"] = "1"
                  __frame6[1]["arg1"] = utf8.char(idris.unpack({11})) --[[ \v--]]
                  __frame6[1]["arg2"] = __bind0
                  return idris["Prelude.Types.pure_Applicative__Maybe"](nil)(__frame6[1])
                end)
            end
            __frame4[2]["'"] = function()
              return idris["Prelude.Types.>>=_Monad__Maybe"](nil)(nil)(idris["Parser.Support.escape'"](__e6))(function(__bind0)
                  local __frame6 = {
                    nil
                  }
                  __frame6[1] = {}
                  __frame6[1]["tag"] = "1"
                  __frame6[1]["arg1"] = "'"
                  __frame6[1]["arg2"] = __bind0
                  return idris["Prelude.Types.pure_Applicative__Maybe"](nil)(__frame6[1])
                end)
            end
            __frame4[2]["\""] = function()
              return idris["Prelude.Types.>>=_Monad__Maybe"](nil)(nil)(idris["Parser.Support.escape'"](__e6))(function(__bind0)
                  local __frame6 = {
                    nil
                  }
                  __frame6[1] = {}
                  __frame6[1]["tag"] = "1"
                  __frame6[1]["arg1"] = "\""
                  __frame6[1]["arg2"] = __bind0
                  return idris["Prelude.Types.pure_Applicative__Maybe"](nil)(__frame6[1])
                end)
            end
            __frame4[2]["x"] = function()
              return idris["Parser.Support.case[3196]escape'"](__e6)(idris["Data.List.span"](nil)(function(__eta0)
                  return idris["Prelude.Types.isHexDigit"](__eta0)
                end)(__e6))
            end
            __frame4[2]["o"] = function()
              return idris["Parser.Support.case[3289]escape'"](__e6)(idris["Data.List.span"](nil)(function(__eta0)
                  return idris["Prelude.Types.isOctDigit"](__eta0)
                end)(__e6))
            end
            __frame4[3] = __frame4[2][__frame4[1]]
            if __frame4[3] then
              __frame4[4] = __frame4[3]()
            else
              __frame4[4] = idris["Parser.Support.case[3341]escape'"](__e3)(idris["Data.List.span"](nil)(function(__eta0)
                return idris["Prelude.Types.isDigit"](__eta0)
              end)(__e3))
            end
            return __frame4[4]
          end
          __frame3[3] = __frame3[2][__frame3[1]["tag"]]
          if __frame3[3] then
            __frame3[4] = __frame3[3]()
          else
            __frame3[4] = idris["Parser.Support.case[3341]escape'"](__e3)(idris["Data.List.span"](nil)(function(__eta0)
              return idris["Prelude.Types.isDigit"](__eta0)
            end)(__e3))
          end
          return __frame3[4]
        end
        __frame2[3] = __frame2[2][__frame2[1]]
        if __frame2[3] then
          __frame2[4] = __frame2[3]()
        else
          __frame2[4] = idris["Prelude.Types.>>=_Monad__Maybe"](nil)(nil)(idris["Parser.Support.escape'"](__e3))(function(__bind0)
            local __frame3 = {
              nil,
              nil
            }
            __frame3[1] = {}
            __frame3[1]["tag"] = "1"
            __frame3[1]["arg1"] = __e2
            __frame3[1]["arg2"] = __bind0
            __frame3[2] = {}
            __frame3[2]["tag"] = "1"
            __frame3[2]["arg1"] = __frame3[1]
            return __frame3[2]
          end)
        end
        return __frame2[4]
      end
      __frame1[3] = __frame1[2][__frame1[1]["tag"]]
      if __frame1[3] then
        __frame1[4] = __frame1[3]()
      else
        idris["error"]("Impossible else branch")
      end
      return __frame1[4]
    end)()
end
idris["Parser.Support.escape"] = function(__arg0)
  return (function()
      return idris["Prelude.Types.>>=_Monad__Maybe"](nil)(nil)(idris["Parser.Support.escape'"](idris["Prelude.Types.unpack"](__arg0)))(function(__bind0)
          return idris["Prelude.Types.pure_Applicative__Maybe"](nil)(idris["Prelude.Types.fastPack"](__bind0))
        end)
    end)()
end
idris["Utils.Path.disk"] = (function()
  local __frame1 = {
    nil,
    nil,
    nil,
    nil,
    nil
  }
  __frame1[1] = {}
  __frame1[1]["tag"] = "0"
  __frame1[1]["arg1"] = function(__arg2)
    return function(__arg3)
        return idris["Utils.Path.==_Eq__PathTokenKind"](__arg2)(__arg3)
      end
  end
  __frame1[1]["arg2"] = function(__arg4)
    return function(__arg5)
        return idris["Utils.Path./=_Eq__PathTokenKind"](__arg4)(__arg5)
      end
  end
  __frame1[2] = {}
  __frame1[2]["tag"] = "0"
  __frame1[2]["arg1"] = function(__arg272)
    return idris["Utils.Path.TokType_TokenKind__PathTokenKind"](__arg272)
  end
  __frame1[2]["arg2"] = function(kind)
    return function(__arg273)
        return idris["Utils.Path.tokValue_TokenKind__PathTokenKind"](kind)(__arg273)
      end
  end
  __frame1[3] = {}
  __frame1[3]["tag"] = "0"
  __frame1[3]["arg1"] = __frame1[1]
  __frame1[3]["arg2"] = __frame1[2]
  __frame1[4] = {}
  __frame1[4]["tag"] = "0"
  __frame1[5] = {}
  __frame1[5]["tag"] = "8"
  __frame1[5]["arg1"] = 0
  __frame1[5]["arg2"] = idris["Text.Parser.match"](nil)(__frame1[3])(__frame1[4])
  __frame1[5]["arg3"] = function()
    return function(text)
        local __frame3 = {
          nil
        }
        __frame3[1] = {}
        __frame3[1]["tag"] = "9"
        __frame3[1]["arg1"] = 1
        __frame3[1]["arg2"] = 0
        __frame3[1]["arg3"] = idris["Utils.Path.case[3577]disk"](text)(idris["Prelude.Types.unpack"](text))
        __frame3[1]["arg4"] = function(disk)
          local __frame4 = {
            nil,
            nil,
            nil,
            nil,
            nil
          }
          __frame4[1] = {}
          __frame4[1]["tag"] = "0"
          __frame4[1]["arg1"] = function(__arg2)
            return function(__arg3)
                return idris["Utils.Path.==_Eq__PathTokenKind"](__arg2)(__arg3)
              end
          end
          __frame4[1]["arg2"] = function(__arg4)
            return function(__arg5)
                return idris["Utils.Path./=_Eq__PathTokenKind"](__arg4)(__arg5)
              end
          end
          __frame4[2] = {}
          __frame4[2]["tag"] = "0"
          __frame4[2]["arg1"] = function(__arg272)
            return idris["Utils.Path.TokType_TokenKind__PathTokenKind"](__arg272)
          end
          __frame4[2]["arg2"] = function(kind)
            return function(__arg273)
                return idris["Utils.Path.tokValue_TokenKind__PathTokenKind"](kind)(__arg273)
              end
          end
          __frame4[3] = {}
          __frame4[3]["tag"] = "0"
          __frame4[3]["arg1"] = __frame4[1]
          __frame4[3]["arg2"] = __frame4[2]
          __frame4[4] = {}
          __frame4[4]["tag"] = "1"
          __frame4[4]["arg1"] = ":"
          __frame4[5] = {}
          __frame4[5]["tag"] = "8"
          __frame4[5]["arg1"] = 1
          __frame4[5]["arg2"] = idris["Text.Parser.match"](nil)(__frame4[3])(__frame4[4])
          __frame4[5]["arg3"] = function()
            return function(___3566)
                local __frame6 = {
                  nil,
                  nil
                }
                __frame6[1] = {}
                __frame6[1]["tag"] = "1"
                __frame6[1]["arg1"] = idris["Prelude.Types.toUpper"](disk)
                __frame6[2] = {}
                __frame6[2]["tag"] = "0"
                __frame6[2]["arg1"] = __frame6[1]
                return __frame6[2]
              end
          end
          return __frame4[5]
        end
        return __frame3[1]
      end
  end
  return __frame1[5]
end)()
idris["Utils.Path.verbatimDisk"] = (function()
  local __frame1 = {
    nil
  }
  __frame1[1] = {}
  __frame1[1]["tag"] = "8"
  __frame1[1]["arg1"] = 0
  __frame1[1]["arg2"] = idris["Utils.Path.verbatim"]
  __frame1[1]["arg3"] = function()
    return function(___3602)
        local __frame3 = {
          nil
        }
        __frame3[1] = {}
        __frame3[1]["tag"] = "8"
        __frame3[1]["arg1"] = 1
        __frame3[1]["arg2"] = idris["Utils.Path.disk"]
        __frame3[1]["arg3"] = function()
          return function(d)
              local __frame5 = {
                nil
              }
              __frame5[1] = {}
              __frame5[1]["tag"] = "0"
              __frame5[1]["arg1"] = d
              return __frame5[1]
            end
        end
        return __frame3[1]
      end
  end
  return __frame1[1]
end)()
idris["Utils.Path.parseVolume"] = (function()
  local __frame1 = {
    nil
  }
  __frame1[1] = {}
  __frame1[1]["tag"] = "10"
  __frame1[1]["arg1"] = 0
  __frame1[1]["arg2"] = 0
  __frame1[1]["arg3"] = idris["Utils.Path.verbatimUnc"]
  __frame1[1]["arg4"] = function()
    local __frame2 = {
      nil
    }
    __frame2[1] = {}
    __frame2[1]["tag"] = "10"
    __frame2[1]["arg1"] = 0
    __frame2[1]["arg2"] = 0
    __frame2[1]["arg3"] = idris["Utils.Path.verbatimDisk"]
    __frame2[1]["arg4"] = function()
      local __frame3 = {
        nil
      }
      __frame3[1] = {}
      __frame3[1]["tag"] = "10"
      __frame3[1]["arg1"] = 0
      __frame3[1]["arg2"] = 0
      __frame3[1]["arg3"] = idris["Utils.Path.unc"]
      __frame3[1]["arg4"] = function()
        return idris["Utils.Path.disk"]
      end
      return __frame3[1]
    end
    return __frame2[1]
  end
  return __frame1[1]
end)()
idris["Utils.Path.parsePath"] = (function()
  local __frame1 = {
    nil
  }
  __frame1[1] = {}
  __frame1[1]["tag"] = "9"
  __frame1[1]["arg1"] = 1
  __frame1[1]["arg2"] = 1
  __frame1[1]["arg3"] = idris["Text.Parser.optional"](nil)(nil)(0)(idris["Utils.Path.parseVolume"])
  __frame1[1]["arg4"] = function(vol)
    local __frame2 = {
      nil
    }
    __frame2[1] = {}
    __frame2[1]["tag"] = "9"
    __frame2[1]["arg1"] = 1
    __frame2[1]["arg2"] = 1
    __frame2[1]["arg3"] = idris["Text.Parser.optional"](nil)(nil)(0)(idris["Text.Parser.some"](nil)(nil)(idris["Utils.Path.bodySeparator"]))
    __frame2[1]["arg4"] = function(root)
      local __frame3 = {
        nil
      }
      __frame3[1] = {}
      __frame3[1]["tag"] = "9"
      __frame3[1]["arg1"] = 1
      __frame3[1]["arg2"] = 1
      __frame3[1]["arg3"] = idris["Text.Parser.sepBy"](nil)(nil)(nil)(0)(idris["Text.Parser.some"](nil)(nil)(idris["Utils.Path.bodySeparator"]))(idris["Utils.Path.parseBody"])
      __frame3[1]["arg4"] = function(body)
        local __frame4 = {
          nil
        }
        __frame4[1] = {}
        __frame4[1]["tag"] = "9"
        __frame4[1]["arg1"] = 1
        __frame4[1]["arg2"] = 1
        __frame4[1]["arg3"] = idris["Text.Parser.optional"](nil)(nil)(0)(idris["Text.Parser.some"](nil)(nil)(idris["Utils.Path.bodySeparator"]))
        __frame4[1]["arg4"] = function(trailSep)
          local __frame5 = {
            nil,
            nil,
            nil,
            nil,
            nil,
            nil
          }
          local __body0 = idris["Data.List.filter"](nil)(function(__lcase0)
            local __frame6 = {
              nil,
              nil,
              nil,
              nil
            }
            __frame6[1] = __lcase0
            __frame6[2] = {
              nil
            }
            __frame6[2]["2"] = function()
              local __e0 = __frame6[1]["arg1"]
              return idris["Prelude.EqOrd./=_Eq__String"](idris["Data.Strings.ltrim"](__e0))("")
            end
            __frame6[3] = __frame6[2][__frame6[1]["tag"]]
            if __frame6[3] then
              __frame6[4] = __frame6[3]()
            else
              __frame6[4] = 0
            end
            return __frame6[4]
          end)(body)
          __frame5[1] = __body0
          __frame5[2] = {
            nil,
            nil
          }
          __frame5[2]["0"] = function()
            local __frame6 = {
              nil
            }
            __frame6[1] = {}
            __frame6[1]["tag"] = "0"
            return __frame6[1]
          end
          __frame5[2]["1"] = function()
            local __frame6 = {
              nil,
              nil,
              nil
            }
            local __e2 = __frame5[1]["arg1"]
            local __e3 = __frame5[1]["arg2"]
            __frame6[1] = {}
            __frame6[1]["tag"] = "0"
            __frame6[1]["arg1"] = function(__arg2)
              return function(__arg3)
                  return idris["Utils.Path.==_Eq__Body"](__arg2)(__arg3)
                end
            end
            __frame6[1]["arg2"] = function(__arg4)
              return function(__arg5)
                  return idris["Utils.Path./=_Eq__Body"](__arg4)(__arg5)
                end
            end
            __frame6[2] = {}
            __frame6[2]["tag"] = "0"
            __frame6[3] = {}
            __frame6[3]["tag"] = "1"
            __frame6[3]["arg1"] = __e2
            __frame6[3]["arg2"] = idris["Data.List.delete"](nil)(__frame6[1])(__frame6[2])(__e3)
            return __frame6[3]
          end
          __frame5[3] = __frame5[2][__frame5[1]["tag"]]
          if __frame5[3] then
            __frame5[4] = __frame5[3]()
          else
            idris["error"]("Impossible else branch")
          end
          local __body1 = __frame5[4]
          __frame5[5] = {}
          __frame5[5]["tag"] = "0"
          __frame5[5]["arg1"] = vol
          __frame5[5]["arg2"] = idris["Data.Maybe.isJust"](nil)(root)
          __frame5[5]["arg3"] = __body1
          __frame5[5]["arg4"] = idris["Data.Maybe.isJust"](nil)(trailSep)
          __frame5[6] = {}
          __frame5[6]["tag"] = "0"
          __frame5[6]["arg1"] = __frame5[5]
          return __frame5[6]
        end
        return __frame4[1]
      end
      return __frame3[1]
    end
    return __frame2[1]
  end
  return __frame1[1]
end)()
idris["Utils.Path.parse"] = function(__arg0)
  return (function()
      return idris["Utils.Path.case[3801]parse"](__arg0)(idris["Text.Parser.Core.parse"](nil)(nil)(1)(idris["Utils.Path.parsePath"])(idris["Utils.Path.lexPath"](__arg0)))
    end)()
end
idris["Utils.Path.isAbsolute"] = function(__arg0)
  return (function()
      return idris["Utils.Path.isAbsolute'"](idris["Utils.Path.parse"](__arg0))
    end)()
end
idris["Utils.Path.isRelative"] = function(__ext0)
  return (function()
      return idris["Prelude.Basics.not"](idris["Utils.Path.isAbsolute"](__ext0))
    end)()
end
idris["Plugin.case[6120]case block in case block in case block in case block in case block in case block in process"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return function(__arg9)
                                      return function(__arg10)
                                          return function(__arg11)
                                              return function(__arg12)
                                                  return function(__arg13)
                                                      return function(__arg14)
                                                          return function(__arg15)
                                                              return function(__arg16)
                                                                  return function(__arg17)
                                                                      return function(__arg18)
                                                                          return function(__arg19)
                                                                              return function(__arg20)
                                                                                  return (function()
                                                                                      local __frame1 = {
                                                                                        nil,
                                                                                        nil,
                                                                                        nil,
                                                                                        nil,
                                                                                        nil,
                                                                                        nil,
                                                                                        nil
                                                                                      }
                                                                                      __frame1[1] = __arg20
                                                                                      __frame1[2] = {
                                                                                        nil
                                                                                      }
                                                                                      __frame1[2]["1"] = function()
                                                                                        local __frame2 = {
                                                                                          nil,
                                                                                          nil,
                                                                                          nil,
                                                                                          nil,
                                                                                          nil,
                                                                                          nil,
                                                                                          nil
                                                                                        }
                                                                                        local __e1 = __frame1[1]["arg1"]
                                                                                        __frame2[1] = __e1
                                                                                        __frame2[2] = {
                                                                                          nil
                                                                                        }
                                                                                        __frame2[2]["0"] = function()
                                                                                          local __e4 = __frame2[1]["arg1"]
                                                                                          return function(__eta0)
                                                                                              local __frame4 = {
                                                                                                nil,
                                                                                                nil,
                                                                                                nil,
                                                                                                nil,
                                                                                                nil,
                                                                                                nil,
                                                                                                nil,
                                                                                                nil,
                                                                                                nil,
                                                                                                nil,
                                                                                                nil,
                                                                                                nil,
                                                                                                nil,
                                                                                                nil,
                                                                                                nil,
                                                                                                nil,
                                                                                                nil,
                                                                                                nil,
                                                                                                nil,
                                                                                                nil,
                                                                                                nil,
                                                                                                nil
                                                                                              }
                                                                                              __frame4[1] = {}
                                                                                              __frame4[1]["tag"] = "0"
                                                                                              __frame4[1]["arg1"] = function(b)
                                                                                                return function(a)
                                                                                                    return function(func)
                                                                                                        return function(__arg149)
                                                                                                            return function(__eta1)
                                                                                                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                                                                                              end
                                                                                                          end
                                                                                                      end
                                                                                                  end
                                                                                              end
                                                                                              __frame4[1]["arg2"] = function(a)
                                                                                                return function(__arg482)
                                                                                                    return function(__eta1)
                                                                                                        return __arg482
                                                                                                      end
                                                                                                  end
                                                                                              end
                                                                                              __frame4[1]["arg3"] = function(b)
                                                                                                return function(a)
                                                                                                    return function(__arg483)
                                                                                                        return function(__arg485)
                                                                                                            return function(__eta1)
                                                                                                                local __act17 = __arg483(__eta1)
                                                                                                                local __act16 = __arg485(__eta1)
                                                                                                                return __act17(__act16)
                                                                                                              end
                                                                                                          end
                                                                                                      end
                                                                                                  end
                                                                                              end
                                                                                              __frame4[2] = {}
                                                                                              __frame4[2]["tag"] = "0"
                                                                                              __frame4[2]["arg1"] = __frame4[1]
                                                                                              __frame4[2]["arg2"] = function(b)
                                                                                                return function(a)
                                                                                                    return function(__arg644)
                                                                                                        return function(__arg645)
                                                                                                            return function(__eta1)
                                                                                                                local __act24 = __arg644(__eta1)
                                                                                                                return __arg645(__act24)(__eta1)
                                                                                                              end
                                                                                                          end
                                                                                                      end
                                                                                                  end
                                                                                              end
                                                                                              __frame4[2]["arg3"] = function(a)
                                                                                                return function(__arg647)
                                                                                                    return function(__eta1)
                                                                                                        local __act51 = __arg647(__eta1)
                                                                                                        return __act51(__eta1)
                                                                                                      end
                                                                                                  end
                                                                                              end
                                                                                              __frame4[3] = {}
                                                                                              __frame4[3]["tag"] = "0"
                                                                                              __frame4[3]["arg1"] = __frame4[2]
                                                                                              __frame4[3]["arg2"] = function(a)
                                                                                                return function(__arg6794)
                                                                                                    return __arg6794
                                                                                                  end
                                                                                              end
                                                                                              __frame4[4] = __e4
                                                                                              __frame4[5] = {
                                                                                                nil
                                                                                              }
                                                                                              __frame4[5]["0"] = function()
                                                                                                local __e8 = __frame4[4]["arg2"]
                                                                                                return __e8
                                                                                              end
                                                                                              __frame4[6] = __frame4[5][__frame4[4]["tag"]]
                                                                                              if __frame4[6] then
                                                                                                __frame4[7] = __frame4[6]()
                                                                                              else
                                                                                                idris["error"]("Impossible else branch")
                                                                                              end
                                                                                              local __act24 = idris["Foreign.nvimCommand"](nil)(__frame4[3])(idris["Prelude.Types.Strings.++"]("echom 'entry filename is: ")(idris["Prelude.Types.Strings.++"](__frame4[7])("'")))(__eta0)
                                                                                              __frame4[8] = __e4
                                                                                              __frame4[9] = {
                                                                                                nil
                                                                                              }
                                                                                              __frame4[9]["0"] = function()
                                                                                                local __e8 = __frame4[8]["arg2"]
                                                                                                return __e8
                                                                                              end
                                                                                              __frame4[10] = __frame4[9][__frame4[8]["tag"]]
                                                                                              if __frame4[10] then
                                                                                                __frame4[11] = __frame4[10]()
                                                                                              else
                                                                                                idris["error"]("Impossible else branch")
                                                                                              end
                                                                                              local __act25 = idris["Plugin.runFind"](idris["Plugin.Parameters..sourceDir"](__arg1))(__frame4[11])(__eta0)
                                                                                              __frame4[12] = __act25
                                                                                              __frame4[13] = {
                                                                                                nil,
                                                                                                nil
                                                                                              }
                                                                                              __frame4[13]["0"] = function()
                                                                                                local __act26 = idris["Plugin.currenttime"](__eta0)
                                                                                                return idris["Plugin.writeToBuffer"](1)(idris["Prelude.Types.Strings.++"]("-- ")(idris["Prelude.Types.Strings.++"](__act26)(idris["Prelude.Types.Strings.++"]("\n")(idris["Prelude.Types.Strings.++"]("Could not find anything on ")(__arg3)))))(__eta0)
                                                                                              end
                                                                                              __frame4[13]["1"] = function()
                                                                                                local __frame5 = {
                                                                                                  nil,
                                                                                                  nil,
                                                                                                  nil,
                                                                                                  nil,
                                                                                                  nil,
                                                                                                  nil,
                                                                                                  nil,
                                                                                                  nil,
                                                                                                  nil,
                                                                                                  nil,
                                                                                                  nil
                                                                                                }
                                                                                                local __e2 = __frame4[12]["arg1"]
                                                                                                local __e3 = __frame4[12]["arg2"]
                                                                                                __frame5[1] = __e3
                                                                                                __frame5[2] = {
                                                                                                  nil
                                                                                                }
                                                                                                __frame5[2]["0"] = function()
                                                                                                  local __frame6 = {
                                                                                                    nil,
                                                                                                    nil,
                                                                                                    nil,
                                                                                                    nil,
                                                                                                    nil,
                                                                                                    nil,
                                                                                                    nil,
                                                                                                    nil
                                                                                                  }
                                                                                                  __frame6[1] = __e4
                                                                                                  __frame6[2] = {
                                                                                                    nil
                                                                                                  }
                                                                                                  __frame6[2]["0"] = function()
                                                                                                    local __e9 = __frame6[1]["arg3"]
                                                                                                    return __e9
                                                                                                  end
                                                                                                  __frame6[3] = __frame6[2][__frame6[1]["tag"]]
                                                                                                  if __frame6[3] then
                                                                                                    __frame6[4] = __frame6[3]()
                                                                                                  else
                                                                                                    idris["error"]("Impossible else branch")
                                                                                                  end
                                                                                                  __frame6[5] = __e4
                                                                                                  __frame6[6] = {
                                                                                                    nil
                                                                                                  }
                                                                                                  __frame6[6]["0"] = function()
                                                                                                    local __e8 = __frame6[5]["arg4"]
                                                                                                    return __e8
                                                                                                  end
                                                                                                  __frame6[7] = __frame6[6][__frame6[5]["tag"]]
                                                                                                  if __frame6[7] then
                                                                                                    __frame6[8] = __frame6[7]()
                                                                                                  else
                                                                                                    idris["error"]("Impossible else branch")
                                                                                                  end
                                                                                                  return idris["Plugin.jumpToDef"](__e2)(__frame6[4])(__frame6[8])(__eta0)
                                                                                                end
                                                                                                __frame5[10] = __frame5[2][__frame5[1]["tag"]]
                                                                                                if __frame5[10] then
                                                                                                  __frame5[11] = __frame5[10]()
                                                                                                else
                                                                                                  local relative = idris["Data.List.filter"](nil)(function(__eta1)
                                                                                                    return idris["Utils.Path.isRelative"](__eta1)
                                                                                                  end)(__act25)
                                                                                                  __frame5[3] = relative
                                                                                                  __frame5[4] = {
                                                                                                    nil,
                                                                                                    nil
                                                                                                  }
                                                                                                  __frame5[4]["0"] = function()
                                                                                                    local __frame6 = {
                                                                                                      nil,
                                                                                                      nil,
                                                                                                      nil
                                                                                                    }
                                                                                                    __frame6[1] = {}
                                                                                                    __frame6[1]["tag"] = "0"
                                                                                                    __frame6[1]["arg1"] = function(b)
                                                                                                      return function(a)
                                                                                                          return function(func)
                                                                                                              return function(__arg149)
                                                                                                                  return function(__eta1)
                                                                                                                      return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                                                                                                    end
                                                                                                                end
                                                                                                            end
                                                                                                        end
                                                                                                    end
                                                                                                    __frame6[1]["arg2"] = function(a)
                                                                                                      return function(__arg482)
                                                                                                          return function(__eta1)
                                                                                                              return __arg482
                                                                                                            end
                                                                                                        end
                                                                                                    end
                                                                                                    __frame6[1]["arg3"] = function(b)
                                                                                                      return function(a)
                                                                                                          return function(__arg483)
                                                                                                              return function(__arg485)
                                                                                                                  return function(__eta1)
                                                                                                                      local __act17 = __arg483(__eta1)
                                                                                                                      local __act16 = __arg485(__eta1)
                                                                                                                      return __act17(__act16)
                                                                                                                    end
                                                                                                                end
                                                                                                            end
                                                                                                        end
                                                                                                    end
                                                                                                    __frame6[2] = {}
                                                                                                    __frame6[2]["tag"] = "0"
                                                                                                    __frame6[2]["arg1"] = __frame6[1]
                                                                                                    __frame6[2]["arg2"] = function(b)
                                                                                                      return function(a)
                                                                                                          return function(__arg644)
                                                                                                              return function(__arg645)
                                                                                                                  return function(__eta1)
                                                                                                                      local __act26 = __arg644(__eta1)
                                                                                                                      return __arg645(__act26)(__eta1)
                                                                                                                    end
                                                                                                                end
                                                                                                            end
                                                                                                        end
                                                                                                    end
                                                                                                    __frame6[2]["arg3"] = function(a)
                                                                                                      return function(__arg647)
                                                                                                          return function(__eta1)
                                                                                                              local __act51 = __arg647(__eta1)
                                                                                                              return __act51(__eta1)
                                                                                                            end
                                                                                                        end
                                                                                                    end
                                                                                                    __frame6[3] = {}
                                                                                                    __frame6[3]["tag"] = "0"
                                                                                                    __frame6[3]["arg1"] = __frame6[2]
                                                                                                    __frame6[3]["arg2"] = function(a)
                                                                                                      return function(__arg6794)
                                                                                                          return __arg6794
                                                                                                        end
                                                                                                    end
                                                                                                    return idris["Foreign.nvimCommand"](nil)(__frame6[3])("echoe \"Can't handle multiple absolute candidates\"")(__eta0)
                                                                                                  end
                                                                                                  __frame5[4]["1"] = function()
                                                                                                    local __frame6 = {
                                                                                                      nil,
                                                                                                      nil,
                                                                                                      nil,
                                                                                                      nil,
                                                                                                      nil,
                                                                                                      nil,
                                                                                                      nil
                                                                                                    }
                                                                                                    local __e7 = __frame5[3]["arg1"]
                                                                                                    local __e6 = __frame5[3]["arg2"]
                                                                                                    __frame6[1] = __e6
                                                                                                    __frame6[2] = {
                                                                                                      nil
                                                                                                    }
                                                                                                    __frame6[2]["0"] = function()
                                                                                                      local __frame7 = {
                                                                                                        nil,
                                                                                                        nil,
                                                                                                        nil,
                                                                                                        nil,
                                                                                                        nil,
                                                                                                        nil,
                                                                                                        nil,
                                                                                                        nil
                                                                                                      }
                                                                                                      __frame7[1] = __e4
                                                                                                      __frame7[2] = {
                                                                                                        nil
                                                                                                      }
                                                                                                      __frame7[2]["0"] = function()
                                                                                                        local __e11 = __frame7[1]["arg3"]
                                                                                                        return __e11
                                                                                                      end
                                                                                                      __frame7[3] = __frame7[2][__frame7[1]["tag"]]
                                                                                                      if __frame7[3] then
                                                                                                        __frame7[4] = __frame7[3]()
                                                                                                      else
                                                                                                        idris["error"]("Impossible else branch")
                                                                                                      end
                                                                                                      __frame7[5] = __e4
                                                                                                      __frame7[6] = {
                                                                                                        nil
                                                                                                      }
                                                                                                      __frame7[6]["0"] = function()
                                                                                                        local __e10 = __frame7[5]["arg4"]
                                                                                                        return __e10
                                                                                                      end
                                                                                                      __frame7[7] = __frame7[6][__frame7[5]["tag"]]
                                                                                                      if __frame7[7] then
                                                                                                        __frame7[8] = __frame7[7]()
                                                                                                      else
                                                                                                        idris["error"]("Impossible else branch")
                                                                                                      end
                                                                                                      return idris["Plugin.jumpToDef"](__e7)(__frame7[4])(__frame7[8])(__eta0)
                                                                                                    end
                                                                                                    __frame6[6] = __frame6[2][__frame6[1]["tag"]]
                                                                                                    if __frame6[6] then
                                                                                                      __frame6[7] = __frame6[6]()
                                                                                                    else
                                                                                                      __frame6[3] = {}
                                                                                                      __frame6[3]["tag"] = "0"
                                                                                                      __frame6[3]["arg1"] = function(b)
                                                                                                        return function(a)
                                                                                                            return function(func)
                                                                                                                return function(__arg149)
                                                                                                                    return function(__eta1)
                                                                                                                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                                                                                                      end
                                                                                                                  end
                                                                                                              end
                                                                                                          end
                                                                                                      end
                                                                                                      __frame6[3]["arg2"] = function(a)
                                                                                                        return function(__arg482)
                                                                                                            return function(__eta1)
                                                                                                                return __arg482
                                                                                                              end
                                                                                                          end
                                                                                                      end
                                                                                                      __frame6[3]["arg3"] = function(b)
                                                                                                        return function(a)
                                                                                                            return function(__arg483)
                                                                                                                return function(__arg485)
                                                                                                                    return function(__eta1)
                                                                                                                        local __act17 = __arg483(__eta1)
                                                                                                                        local __act16 = __arg485(__eta1)
                                                                                                                        return __act17(__act16)
                                                                                                                      end
                                                                                                                  end
                                                                                                              end
                                                                                                          end
                                                                                                      end
                                                                                                      __frame6[4] = {}
                                                                                                      __frame6[4]["tag"] = "0"
                                                                                                      __frame6[4]["arg1"] = __frame6[3]
                                                                                                      __frame6[4]["arg2"] = function(b)
                                                                                                        return function(a)
                                                                                                            return function(__arg644)
                                                                                                                return function(__arg645)
                                                                                                                    return function(__eta1)
                                                                                                                        local __act26 = __arg644(__eta1)
                                                                                                                        return __arg645(__act26)(__eta1)
                                                                                                                      end
                                                                                                                  end
                                                                                                              end
                                                                                                          end
                                                                                                      end
                                                                                                      __frame6[4]["arg3"] = function(a)
                                                                                                        return function(__arg647)
                                                                                                            return function(__eta1)
                                                                                                                local __act51 = __arg647(__eta1)
                                                                                                                return __act51(__eta1)
                                                                                                              end
                                                                                                          end
                                                                                                      end
                                                                                                      __frame6[5] = {}
                                                                                                      __frame6[5]["tag"] = "0"
                                                                                                      __frame6[5]["arg1"] = __frame6[4]
                                                                                                      __frame6[5]["arg2"] = function(a)
                                                                                                        return function(__arg6794)
                                                                                                            return __arg6794
                                                                                                          end
                                                                                                      end
                                                                                                      __frame6[7] = idris["Foreign.nvimCommand"](nil)(__frame6[5])("echoe \"Can't handle multiple relative candidates\"")(__eta0)
                                                                                                    end
                                                                                                    return __frame6[7]
                                                                                                  end
                                                                                                  __frame5[8] = __frame5[4][__frame5[3]["tag"]]
                                                                                                  if __frame5[8] then
                                                                                                    __frame5[9] = __frame5[8]()
                                                                                                  else
                                                                                                    __frame5[5] = {}
                                                                                                    __frame5[5]["tag"] = "0"
                                                                                                    __frame5[5]["arg1"] = function(b)
                                                                                                      return function(a)
                                                                                                          return function(func)
                                                                                                              return function(__arg149)
                                                                                                                  return function(__eta1)
                                                                                                                      return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                                                                                                    end
                                                                                                                end
                                                                                                            end
                                                                                                        end
                                                                                                    end
                                                                                                    __frame5[5]["arg2"] = function(a)
                                                                                                      return function(__arg482)
                                                                                                          return function(__eta1)
                                                                                                              return __arg482
                                                                                                            end
                                                                                                        end
                                                                                                    end
                                                                                                    __frame5[5]["arg3"] = function(b)
                                                                                                      return function(a)
                                                                                                          return function(__arg483)
                                                                                                              return function(__arg485)
                                                                                                                  return function(__eta1)
                                                                                                                      local __act17 = __arg483(__eta1)
                                                                                                                      local __act16 = __arg485(__eta1)
                                                                                                                      return __act17(__act16)
                                                                                                                    end
                                                                                                                end
                                                                                                            end
                                                                                                        end
                                                                                                    end
                                                                                                    __frame5[6] = {}
                                                                                                    __frame5[6]["tag"] = "0"
                                                                                                    __frame5[6]["arg1"] = __frame5[5]
                                                                                                    __frame5[6]["arg2"] = function(b)
                                                                                                      return function(a)
                                                                                                          return function(__arg644)
                                                                                                              return function(__arg645)
                                                                                                                  return function(__eta1)
                                                                                                                      local __act26 = __arg644(__eta1)
                                                                                                                      return __arg645(__act26)(__eta1)
                                                                                                                    end
                                                                                                                end
                                                                                                            end
                                                                                                        end
                                                                                                    end
                                                                                                    __frame5[6]["arg3"] = function(a)
                                                                                                      return function(__arg647)
                                                                                                          return function(__eta1)
                                                                                                              local __act51 = __arg647(__eta1)
                                                                                                              return __act51(__eta1)
                                                                                                            end
                                                                                                        end
                                                                                                    end
                                                                                                    __frame5[7] = {}
                                                                                                    __frame5[7]["tag"] = "0"
                                                                                                    __frame5[7]["arg1"] = __frame5[6]
                                                                                                    __frame5[7]["arg2"] = function(a)
                                                                                                      return function(__arg6794)
                                                                                                          return __arg6794
                                                                                                        end
                                                                                                    end
                                                                                                    __frame5[9] = idris["Foreign.nvimCommand"](nil)(__frame5[7])("echoe \"Can't handle multiple relative candidates\"")(__eta0)
                                                                                                  end
                                                                                                  __frame5[11] = __frame5[9]
                                                                                                end
                                                                                                return __frame5[11]
                                                                                              end
                                                                                              __frame4[21] = __frame4[13][__frame4[12]["tag"]]
                                                                                              if __frame4[21] then
                                                                                                __frame4[22] = __frame4[21]()
                                                                                              else
                                                                                                local relative = idris["Data.List.filter"](nil)(function(__eta1)
                                                                                                  return idris["Utils.Path.isRelative"](__eta1)
                                                                                                end)(__act25)
                                                                                                __frame4[14] = relative
                                                                                                __frame4[15] = {
                                                                                                  nil,
                                                                                                  nil
                                                                                                }
                                                                                                __frame4[15]["0"] = function()
                                                                                                  local __frame5 = {
                                                                                                    nil,
                                                                                                    nil,
                                                                                                    nil
                                                                                                  }
                                                                                                  __frame5[1] = {}
                                                                                                  __frame5[1]["tag"] = "0"
                                                                                                  __frame5[1]["arg1"] = function(b)
                                                                                                    return function(a)
                                                                                                        return function(func)
                                                                                                            return function(__arg149)
                                                                                                                return function(__eta1)
                                                                                                                    return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                                                                                                  end
                                                                                                              end
                                                                                                          end
                                                                                                      end
                                                                                                  end
                                                                                                  __frame5[1]["arg2"] = function(a)
                                                                                                    return function(__arg482)
                                                                                                        return function(__eta1)
                                                                                                            return __arg482
                                                                                                          end
                                                                                                      end
                                                                                                  end
                                                                                                  __frame5[1]["arg3"] = function(b)
                                                                                                    return function(a)
                                                                                                        return function(__arg483)
                                                                                                            return function(__arg485)
                                                                                                                return function(__eta1)
                                                                                                                    local __act17 = __arg483(__eta1)
                                                                                                                    local __act16 = __arg485(__eta1)
                                                                                                                    return __act17(__act16)
                                                                                                                  end
                                                                                                              end
                                                                                                          end
                                                                                                      end
                                                                                                  end
                                                                                                  __frame5[2] = {}
                                                                                                  __frame5[2]["tag"] = "0"
                                                                                                  __frame5[2]["arg1"] = __frame5[1]
                                                                                                  __frame5[2]["arg2"] = function(b)
                                                                                                    return function(a)
                                                                                                        return function(__arg644)
                                                                                                            return function(__arg645)
                                                                                                                return function(__eta1)
                                                                                                                    local __act26 = __arg644(__eta1)
                                                                                                                    return __arg645(__act26)(__eta1)
                                                                                                                  end
                                                                                                              end
                                                                                                          end
                                                                                                      end
                                                                                                  end
                                                                                                  __frame5[2]["arg3"] = function(a)
                                                                                                    return function(__arg647)
                                                                                                        return function(__eta1)
                                                                                                            local __act51 = __arg647(__eta1)
                                                                                                            return __act51(__eta1)
                                                                                                          end
                                                                                                      end
                                                                                                  end
                                                                                                  __frame5[3] = {}
                                                                                                  __frame5[3]["tag"] = "0"
                                                                                                  __frame5[3]["arg1"] = __frame5[2]
                                                                                                  __frame5[3]["arg2"] = function(a)
                                                                                                    return function(__arg6794)
                                                                                                        return __arg6794
                                                                                                      end
                                                                                                  end
                                                                                                  return idris["Foreign.nvimCommand"](nil)(__frame5[3])("echoe \"Can't handle multiple absolute candidates\"")(__eta0)
                                                                                                end
                                                                                                __frame4[15]["1"] = function()
                                                                                                  local __frame5 = {
                                                                                                    nil,
                                                                                                    nil,
                                                                                                    nil,
                                                                                                    nil,
                                                                                                    nil,
                                                                                                    nil,
                                                                                                    nil
                                                                                                  }
                                                                                                  local __e2 = __frame4[14]["arg1"]
                                                                                                  local __e3 = __frame4[14]["arg2"]
                                                                                                  __frame5[1] = __e3
                                                                                                  __frame5[2] = {
                                                                                                    nil
                                                                                                  }
                                                                                                  __frame5[2]["0"] = function()
                                                                                                    local __frame6 = {
                                                                                                      nil,
                                                                                                      nil,
                                                                                                      nil,
                                                                                                      nil,
                                                                                                      nil,
                                                                                                      nil,
                                                                                                      nil,
                                                                                                      nil
                                                                                                    }
                                                                                                    __frame6[1] = __e4
                                                                                                    __frame6[2] = {
                                                                                                      nil
                                                                                                    }
                                                                                                    __frame6[2]["0"] = function()
                                                                                                      local __e9 = __frame6[1]["arg3"]
                                                                                                      return __e9
                                                                                                    end
                                                                                                    __frame6[3] = __frame6[2][__frame6[1]["tag"]]
                                                                                                    if __frame6[3] then
                                                                                                      __frame6[4] = __frame6[3]()
                                                                                                    else
                                                                                                      idris["error"]("Impossible else branch")
                                                                                                    end
                                                                                                    __frame6[5] = __e4
                                                                                                    __frame6[6] = {
                                                                                                      nil
                                                                                                    }
                                                                                                    __frame6[6]["0"] = function()
                                                                                                      local __e8 = __frame6[5]["arg4"]
                                                                                                      return __e8
                                                                                                    end
                                                                                                    __frame6[7] = __frame6[6][__frame6[5]["tag"]]
                                                                                                    if __frame6[7] then
                                                                                                      __frame6[8] = __frame6[7]()
                                                                                                    else
                                                                                                      idris["error"]("Impossible else branch")
                                                                                                    end
                                                                                                    return idris["Plugin.jumpToDef"](__e2)(__frame6[4])(__frame6[8])(__eta0)
                                                                                                  end
                                                                                                  __frame5[6] = __frame5[2][__frame5[1]["tag"]]
                                                                                                  if __frame5[6] then
                                                                                                    __frame5[7] = __frame5[6]()
                                                                                                  else
                                                                                                    __frame5[3] = {}
                                                                                                    __frame5[3]["tag"] = "0"
                                                                                                    __frame5[3]["arg1"] = function(b)
                                                                                                      return function(a)
                                                                                                          return function(func)
                                                                                                              return function(__arg149)
                                                                                                                  return function(__eta1)
                                                                                                                      return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                                                                                                    end
                                                                                                                end
                                                                                                            end
                                                                                                        end
                                                                                                    end
                                                                                                    __frame5[3]["arg2"] = function(a)
                                                                                                      return function(__arg482)
                                                                                                          return function(__eta1)
                                                                                                              return __arg482
                                                                                                            end
                                                                                                        end
                                                                                                    end
                                                                                                    __frame5[3]["arg3"] = function(b)
                                                                                                      return function(a)
                                                                                                          return function(__arg483)
                                                                                                              return function(__arg485)
                                                                                                                  return function(__eta1)
                                                                                                                      local __act17 = __arg483(__eta1)
                                                                                                                      local __act16 = __arg485(__eta1)
                                                                                                                      return __act17(__act16)
                                                                                                                    end
                                                                                                                end
                                                                                                            end
                                                                                                        end
                                                                                                    end
                                                                                                    __frame5[4] = {}
                                                                                                    __frame5[4]["tag"] = "0"
                                                                                                    __frame5[4]["arg1"] = __frame5[3]
                                                                                                    __frame5[4]["arg2"] = function(b)
                                                                                                      return function(a)
                                                                                                          return function(__arg644)
                                                                                                              return function(__arg645)
                                                                                                                  return function(__eta1)
                                                                                                                      local __act26 = __arg644(__eta1)
                                                                                                                      return __arg645(__act26)(__eta1)
                                                                                                                    end
                                                                                                                end
                                                                                                            end
                                                                                                        end
                                                                                                    end
                                                                                                    __frame5[4]["arg3"] = function(a)
                                                                                                      return function(__arg647)
                                                                                                          return function(__eta1)
                                                                                                              local __act51 = __arg647(__eta1)
                                                                                                              return __act51(__eta1)
                                                                                                            end
                                                                                                        end
                                                                                                    end
                                                                                                    __frame5[5] = {}
                                                                                                    __frame5[5]["tag"] = "0"
                                                                                                    __frame5[5]["arg1"] = __frame5[4]
                                                                                                    __frame5[5]["arg2"] = function(a)
                                                                                                      return function(__arg6794)
                                                                                                          return __arg6794
                                                                                                        end
                                                                                                    end
                                                                                                    __frame5[7] = idris["Foreign.nvimCommand"](nil)(__frame5[5])("echoe \"Can't handle multiple relative candidates\"")(__eta0)
                                                                                                  end
                                                                                                  return __frame5[7]
                                                                                                end
                                                                                                __frame4[19] = __frame4[15][__frame4[14]["tag"]]
                                                                                                if __frame4[19] then
                                                                                                  __frame4[20] = __frame4[19]()
                                                                                                else
                                                                                                  __frame4[16] = {}
                                                                                                  __frame4[16]["tag"] = "0"
                                                                                                  __frame4[16]["arg1"] = function(b)
                                                                                                    return function(a)
                                                                                                        return function(func)
                                                                                                            return function(__arg149)
                                                                                                                return function(__eta1)
                                                                                                                    return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                                                                                                  end
                                                                                                              end
                                                                                                          end
                                                                                                      end
                                                                                                  end
                                                                                                  __frame4[16]["arg2"] = function(a)
                                                                                                    return function(__arg482)
                                                                                                        return function(__eta1)
                                                                                                            return __arg482
                                                                                                          end
                                                                                                      end
                                                                                                  end
                                                                                                  __frame4[16]["arg3"] = function(b)
                                                                                                    return function(a)
                                                                                                        return function(__arg483)
                                                                                                            return function(__arg485)
                                                                                                                return function(__eta1)
                                                                                                                    local __act17 = __arg483(__eta1)
                                                                                                                    local __act16 = __arg485(__eta1)
                                                                                                                    return __act17(__act16)
                                                                                                                  end
                                                                                                              end
                                                                                                          end
                                                                                                      end
                                                                                                  end
                                                                                                  __frame4[17] = {}
                                                                                                  __frame4[17]["tag"] = "0"
                                                                                                  __frame4[17]["arg1"] = __frame4[16]
                                                                                                  __frame4[17]["arg2"] = function(b)
                                                                                                    return function(a)
                                                                                                        return function(__arg644)
                                                                                                            return function(__arg645)
                                                                                                                return function(__eta1)
                                                                                                                    local __act26 = __arg644(__eta1)
                                                                                                                    return __arg645(__act26)(__eta1)
                                                                                                                  end
                                                                                                              end
                                                                                                          end
                                                                                                      end
                                                                                                  end
                                                                                                  __frame4[17]["arg3"] = function(a)
                                                                                                    return function(__arg647)
                                                                                                        return function(__eta1)
                                                                                                            local __act51 = __arg647(__eta1)
                                                                                                            return __act51(__eta1)
                                                                                                          end
                                                                                                      end
                                                                                                  end
                                                                                                  __frame4[18] = {}
                                                                                                  __frame4[18]["tag"] = "0"
                                                                                                  __frame4[18]["arg1"] = __frame4[17]
                                                                                                  __frame4[18]["arg2"] = function(a)
                                                                                                    return function(__arg6794)
                                                                                                        return __arg6794
                                                                                                      end
                                                                                                  end
                                                                                                  __frame4[20] = idris["Foreign.nvimCommand"](nil)(__frame4[18])("echoe \"Can't handle multiple relative candidates\"")(__eta0)
                                                                                                end
                                                                                                __frame4[22] = __frame4[20]
                                                                                              end
                                                                                              return __frame4[22]
                                                                                            end
                                                                                        end
                                                                                        __frame2[6] = __frame2[2][__frame2[1]["tag"]]
                                                                                        if __frame2[6] then
                                                                                          __frame2[7] = __frame2[6]()
                                                                                        else
                                                                                          __frame2[3] = {}
                                                                                          __frame2[3]["tag"] = "0"
                                                                                          __frame2[3]["arg1"] = function(b)
                                                                                            return function(a)
                                                                                                return function(func)
                                                                                                    return function(__arg149)
                                                                                                        return function(__eta0)
                                                                                                            return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                                                                                          end
                                                                                                      end
                                                                                                  end
                                                                                              end
                                                                                          end
                                                                                          __frame2[3]["arg2"] = function(a)
                                                                                            return function(__arg482)
                                                                                                return function(__eta0)
                                                                                                    return __arg482
                                                                                                  end
                                                                                              end
                                                                                          end
                                                                                          __frame2[3]["arg3"] = function(b)
                                                                                            return function(a)
                                                                                                return function(__arg483)
                                                                                                    return function(__arg485)
                                                                                                        return function(__eta0)
                                                                                                            local __act17 = __arg483(__eta0)
                                                                                                            local __act16 = __arg485(__eta0)
                                                                                                            return __act17(__act16)
                                                                                                          end
                                                                                                      end
                                                                                                  end
                                                                                              end
                                                                                          end
                                                                                          __frame2[4] = {}
                                                                                          __frame2[4]["tag"] = "0"
                                                                                          __frame2[4]["arg1"] = __frame2[3]
                                                                                          __frame2[4]["arg2"] = function(b)
                                                                                            return function(a)
                                                                                                return function(__arg644)
                                                                                                    return function(__arg645)
                                                                                                        return function(__eta0)
                                                                                                            local __act24 = __arg644(__eta0)
                                                                                                            return __arg645(__act24)(__eta0)
                                                                                                          end
                                                                                                      end
                                                                                                  end
                                                                                              end
                                                                                          end
                                                                                          __frame2[4]["arg3"] = function(a)
                                                                                            return function(__arg647)
                                                                                                return function(__eta0)
                                                                                                    local __act51 = __arg647(__eta0)
                                                                                                    return __act51(__eta0)
                                                                                                  end
                                                                                              end
                                                                                          end
                                                                                          __frame2[5] = {}
                                                                                          __frame2[5]["tag"] = "0"
                                                                                          __frame2[5]["arg1"] = __frame2[4]
                                                                                          __frame2[5]["arg2"] = function(a)
                                                                                            return function(__arg6794)
                                                                                                return __arg6794
                                                                                              end
                                                                                          end
                                                                                          __frame2[7] = idris["Foreign.nvimCommand"](nil)(__frame2[5])("echoe 'Bad match while processing name-at'")
                                                                                        end
                                                                                        return __frame2[7]
                                                                                      end
                                                                                      __frame1[6] = __frame1[2][__frame1[1]["tag"]]
                                                                                      if __frame1[6] then
                                                                                        __frame1[7] = __frame1[6]()
                                                                                      else
                                                                                        __frame1[3] = {}
                                                                                        __frame1[3]["tag"] = "0"
                                                                                        __frame1[3]["arg1"] = function(b)
                                                                                          return function(a)
                                                                                              return function(func)
                                                                                                  return function(__arg149)
                                                                                                      return function(__eta0)
                                                                                                          return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                                                                                        end
                                                                                                    end
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                        __frame1[3]["arg2"] = function(a)
                                                                                          return function(__arg482)
                                                                                              return function(__eta0)
                                                                                                  return __arg482
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                        __frame1[3]["arg3"] = function(b)
                                                                                          return function(a)
                                                                                              return function(__arg483)
                                                                                                  return function(__arg485)
                                                                                                      return function(__eta0)
                                                                                                          local __act17 = __arg483(__eta0)
                                                                                                          local __act16 = __arg485(__eta0)
                                                                                                          return __act17(__act16)
                                                                                                        end
                                                                                                    end
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                        __frame1[4] = {}
                                                                                        __frame1[4]["tag"] = "0"
                                                                                        __frame1[4]["arg1"] = __frame1[3]
                                                                                        __frame1[4]["arg2"] = function(b)
                                                                                          return function(a)
                                                                                              return function(__arg644)
                                                                                                  return function(__arg645)
                                                                                                      return function(__eta0)
                                                                                                          local __act24 = __arg644(__eta0)
                                                                                                          return __arg645(__act24)(__eta0)
                                                                                                        end
                                                                                                    end
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                        __frame1[4]["arg3"] = function(a)
                                                                                          return function(__arg647)
                                                                                              return function(__eta0)
                                                                                                  local __act51 = __arg647(__eta0)
                                                                                                  return __act51(__eta0)
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                        __frame1[5] = {}
                                                                                        __frame1[5]["tag"] = "0"
                                                                                        __frame1[5]["arg1"] = __frame1[4]
                                                                                        __frame1[5]["arg2"] = function(a)
                                                                                          return function(__arg6794)
                                                                                              return __arg6794
                                                                                            end
                                                                                        end
                                                                                        __frame1[7] = idris["Foreign.nvimCommand"](nil)(__frame1[5])("echoe 'Bad match while processing name-at'")
                                                                                      end
                                                                                      return __frame1[7]
                                                                                    end)()
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Plugin.case[6016]case block in case block in case block in case block in case block in process"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return function(__arg9)
                                      return function(__arg10)
                                          return function(__arg11)
                                              return function(__arg12)
                                                  return function(__arg13)
                                                      return function(__arg14)
                                                          return function(__arg15)
                                                              return function(__arg16)
                                                                  return function(__arg17)
                                                                      return function(__arg18)
                                                                          return function(__arg19)
                                                                              return (function()
                                                                                  local __frame1 = {
                                                                                    nil,
                                                                                    nil,
                                                                                    nil,
                                                                                    nil,
                                                                                    nil,
                                                                                    nil,
                                                                                    nil
                                                                                  }
                                                                                  __frame1[1] = __arg19
                                                                                  __frame1[2] = {
                                                                                    nil
                                                                                  }
                                                                                  __frame1[2]["1"] = function()
                                                                                    local __e1 = __frame1[1]["arg1"]
                                                                                    return idris["Plugin.case[6120]case block in case block in case block in case block in case block in case block in process"](__arg0)(__arg1)(__arg2)(__arg3)(__arg4)(__arg5)(__arg6)(__arg7)(__arg8)(__arg9)(__arg10)(__arg11)(__arg12)(__arg13)(__arg14)(__arg15)(__arg16)(__arg17)(__arg18)(__e1)(idris["Data.List.find"](nil)(function(__lamc0)
                                                                                        local __frame3 = {
                                                                                          nil,
                                                                                          nil,
                                                                                          nil,
                                                                                          nil
                                                                                        }
                                                                                        __frame3[1] = __lamc0
                                                                                        __frame3[2] = {
                                                                                          nil
                                                                                        }
                                                                                        __frame3[2]["0"] = function()
                                                                                          local __e3 = __frame3[1]["arg2"]
                                                                                          return idris["Prelude.Types.==_Eq__Nat"](__e1)(__e3)
                                                                                        end
                                                                                        __frame3[3] = __frame3[2][__frame3[1]["tag"]]
                                                                                        if __frame3[3] then
                                                                                          __frame3[4] = __frame3[3]()
                                                                                        else
                                                                                          idris["error"]("Impossible else branch")
                                                                                        end
                                                                                        return __frame3[4]
                                                                                      end)(idris["Plugin.zipWithIndex"](nil)(__arg11)))
                                                                                  end
                                                                                  __frame1[6] = __frame1[2][__frame1[1]["tag"]]
                                                                                  if __frame1[6] then
                                                                                    __frame1[7] = __frame1[6]()
                                                                                  else
                                                                                    __frame1[3] = {}
                                                                                    __frame1[3]["tag"] = "0"
                                                                                    __frame1[3]["arg1"] = function(b)
                                                                                      return function(a)
                                                                                          return function(func)
                                                                                              return function(__arg149)
                                                                                                  return function(__eta0)
                                                                                                      return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                                                                                    end
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                    __frame1[3]["arg2"] = function(a)
                                                                                      return function(__arg482)
                                                                                          return function(__eta0)
                                                                                              return __arg482
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                    __frame1[3]["arg3"] = function(b)
                                                                                      return function(a)
                                                                                          return function(__arg483)
                                                                                              return function(__arg485)
                                                                                                  return function(__eta0)
                                                                                                      local __act17 = __arg483(__eta0)
                                                                                                      local __act16 = __arg485(__eta0)
                                                                                                      return __act17(__act16)
                                                                                                    end
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                    __frame1[4] = {}
                                                                                    __frame1[4]["tag"] = "0"
                                                                                    __frame1[4]["arg1"] = __frame1[3]
                                                                                    __frame1[4]["arg2"] = function(b)
                                                                                      return function(a)
                                                                                          return function(__arg644)
                                                                                              return function(__arg645)
                                                                                                  return function(__eta0)
                                                                                                      local __act24 = __arg644(__eta0)
                                                                                                      return __arg645(__act24)(__eta0)
                                                                                                    end
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                    __frame1[4]["arg3"] = function(a)
                                                                                      return function(__arg647)
                                                                                          return function(__eta0)
                                                                                              local __act51 = __arg647(__eta0)
                                                                                              return __act51(__eta0)
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                    __frame1[5] = {}
                                                                                    __frame1[5]["tag"] = "0"
                                                                                    __frame1[5]["arg1"] = __frame1[4]
                                                                                    __frame1[5]["arg2"] = function(a)
                                                                                      return function(__arg6794)
                                                                                          return __arg6794
                                                                                        end
                                                                                    end
                                                                                    __frame1[7] = idris["Foreign.nvimCommand"](nil)(__frame1[5])("echoe 'Bad match while processing name-at'")
                                                                                  end
                                                                                  return __frame1[7]
                                                                                end)()
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Plugin.case[5969]case block in case block in case block in case block in process"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return function(__arg9)
                                      return function(__arg10)
                                          return function(__arg11)
                                              return function(__arg12)
                                                  return function(__arg13)
                                                      return function(__arg14)
                                                          return function(__arg15)
                                                              return function(__arg16)
                                                                  return (function()
                                                                      local __frame1 = {
                                                                        nil,
                                                                        nil,
                                                                        nil,
                                                                        nil,
                                                                        nil,
                                                                        nil,
                                                                        nil
                                                                      }
                                                                      __frame1[1] = __arg16
                                                                      __frame1[2] = {
                                                                        nil
                                                                      }
                                                                      __frame1[2]["1"] = function()
                                                                        local __frame2 = {
                                                                          nil,
                                                                          nil,
                                                                          nil,
                                                                          nil,
                                                                          nil,
                                                                          nil,
                                                                          nil
                                                                        }
                                                                        local __e1 = __frame1[1]["arg1"]
                                                                        local __e2 = __frame1[1]["arg2"]
                                                                        __frame2[1] = __e2
                                                                        __frame2[2] = {
                                                                          nil
                                                                        }
                                                                        __frame2[2]["1"] = function()
                                                                          local __frame3 = {
                                                                            nil
                                                                          }
                                                                          local __e4 = __frame2[1]["arg1"]
                                                                          local __e5 = __frame2[1]["arg2"]
                                                                          __frame3[1] = {}
                                                                          __frame3[1]["tag"] = "0"
                                                                          __frame3[1]["arg1"] = function(__arg17)
                                                                            return function(__arg18)
                                                                                return idris["Prelude.Types.+_Num__Nat"](__arg17)(__arg18)
                                                                              end
                                                                          end
                                                                          __frame3[1]["arg2"] = function(__arg17)
                                                                            return function(__arg18)
                                                                                return idris["Prelude.Types.*_Num__Nat"](__arg17)(__arg18)
                                                                              end
                                                                          end
                                                                          __frame3[1]["arg3"] = function(__arg17)
                                                                            return idris["Prelude.Types.fromInteger_Num__Nat"](__arg17)
                                                                          end
                                                                          return idris["Plugin.case[6016]case block in case block in case block in case block in case block in process"](__arg0)(__arg1)(__arg2)(__arg3)(__arg4)(__arg5)(__arg6)(__arg7)(__arg8)(__arg9)(__arg10)(__arg11)(__arg12)(__arg13)(__arg14)(__arg15)(__e5)(__e1)(__e4)(idris["Data.Strings.parsePositive"](nil)(__frame3[1])(__e4))
                                                                        end
                                                                        __frame2[6] = __frame2[2][__frame2[1]["tag"]]
                                                                        if __frame2[6] then
                                                                          __frame2[7] = __frame2[6]()
                                                                        else
                                                                          __frame2[3] = {}
                                                                          __frame2[3]["tag"] = "0"
                                                                          __frame2[3]["arg1"] = function(b)
                                                                            return function(a)
                                                                                return function(func)
                                                                                    return function(__arg149)
                                                                                        return function(__eta0)
                                                                                            return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                                                                          end
                                                                                      end
                                                                                  end
                                                                              end
                                                                          end
                                                                          __frame2[3]["arg2"] = function(a)
                                                                            return function(__arg482)
                                                                                return function(__eta0)
                                                                                    return __arg482
                                                                                  end
                                                                              end
                                                                          end
                                                                          __frame2[3]["arg3"] = function(b)
                                                                            return function(a)
                                                                                return function(__arg483)
                                                                                    return function(__arg485)
                                                                                        return function(__eta0)
                                                                                            local __act17 = __arg483(__eta0)
                                                                                            local __act16 = __arg485(__eta0)
                                                                                            return __act17(__act16)
                                                                                          end
                                                                                      end
                                                                                  end
                                                                              end
                                                                          end
                                                                          __frame2[4] = {}
                                                                          __frame2[4]["tag"] = "0"
                                                                          __frame2[4]["arg1"] = __frame2[3]
                                                                          __frame2[4]["arg2"] = function(b)
                                                                            return function(a)
                                                                                return function(__arg644)
                                                                                    return function(__arg645)
                                                                                        return function(__eta0)
                                                                                            local __act24 = __arg644(__eta0)
                                                                                            return __arg645(__act24)(__eta0)
                                                                                          end
                                                                                      end
                                                                                  end
                                                                              end
                                                                          end
                                                                          __frame2[4]["arg3"] = function(a)
                                                                            return function(__arg647)
                                                                                return function(__eta0)
                                                                                    local __act51 = __arg647(__eta0)
                                                                                    return __act51(__eta0)
                                                                                  end
                                                                              end
                                                                          end
                                                                          __frame2[5] = {}
                                                                          __frame2[5]["tag"] = "0"
                                                                          __frame2[5]["arg1"] = __frame2[4]
                                                                          __frame2[5]["arg2"] = function(a)
                                                                            return function(__arg6794)
                                                                                return __arg6794
                                                                              end
                                                                          end
                                                                          __frame2[7] = idris["Foreign.nvimCommand"](nil)(__frame2[5])("echoe 'Bad match while processing name-at'")
                                                                        end
                                                                        return __frame2[7]
                                                                      end
                                                                      __frame1[6] = __frame1[2][__frame1[1]["tag"]]
                                                                      if __frame1[6] then
                                                                        __frame1[7] = __frame1[6]()
                                                                      else
                                                                        __frame1[3] = {}
                                                                        __frame1[3]["tag"] = "0"
                                                                        __frame1[3]["arg1"] = function(b)
                                                                          return function(a)
                                                                              return function(func)
                                                                                  return function(__arg149)
                                                                                      return function(__eta0)
                                                                                          return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                        __frame1[3]["arg2"] = function(a)
                                                                          return function(__arg482)
                                                                              return function(__eta0)
                                                                                  return __arg482
                                                                                end
                                                                            end
                                                                        end
                                                                        __frame1[3]["arg3"] = function(b)
                                                                          return function(a)
                                                                              return function(__arg483)
                                                                                  return function(__arg485)
                                                                                      return function(__eta0)
                                                                                          local __act17 = __arg483(__eta0)
                                                                                          local __act16 = __arg485(__eta0)
                                                                                          return __act17(__act16)
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                        __frame1[4] = {}
                                                                        __frame1[4]["tag"] = "0"
                                                                        __frame1[4]["arg1"] = __frame1[3]
                                                                        __frame1[4]["arg2"] = function(b)
                                                                          return function(a)
                                                                              return function(__arg644)
                                                                                  return function(__arg645)
                                                                                      return function(__eta0)
                                                                                          local __act24 = __arg644(__eta0)
                                                                                          return __arg645(__act24)(__eta0)
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                        __frame1[4]["arg3"] = function(a)
                                                                          return function(__arg647)
                                                                              return function(__eta0)
                                                                                  local __act51 = __arg647(__eta0)
                                                                                  return __act51(__eta0)
                                                                                end
                                                                            end
                                                                        end
                                                                        __frame1[5] = {}
                                                                        __frame1[5]["tag"] = "0"
                                                                        __frame1[5]["arg1"] = __frame1[4]
                                                                        __frame1[5]["arg2"] = function(a)
                                                                          return function(__arg6794)
                                                                              return __arg6794
                                                                            end
                                                                        end
                                                                        __frame1[7] = idris["Foreign.nvimCommand"](nil)(__frame1[5])("echoe 'Bad match while processing name-at'")
                                                                      end
                                                                      return __frame1[7]
                                                                    end)()
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Plugin.case[5613]case block in case block in process"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return (function()
                                      local __frame1 = {
                                        nil,
                                        nil,
                                        nil,
                                        nil
                                      }
                                      __frame1[1] = __arg8
                                      __frame1[2] = {
                                        nil,
                                        nil
                                      }
                                      __frame1[2]["1"] = function()
                                        local __frame2 = {
                                          nil,
                                          nil,
                                          nil,
                                          nil
                                        }
                                        local __e1 = __frame1[1]["arg1"]
                                        __frame2[1] = __e1
                                        __frame2[2] = {
                                          nil,
                                          nil
                                        }
                                        __frame2[2]["1"] = function()
                                          local __frame3 = {
                                            nil,
                                            nil,
                                            nil,
                                            nil,
                                            nil
                                          }
                                          local __e4 = __frame2[1]["arg1"]
                                          local __e5 = __frame2[1]["arg2"]
                                          __frame3[1] = {}
                                          __frame3[1]["tag"] = "1"
                                          __frame3[1]["arg1"] = __e4
                                          __frame3[1]["arg2"] = __e5
                                          local validated = __frame3[1]
                                          __frame3[2] = __e5
                                          __frame3[3] = {
                                            nil,
                                            nil
                                          }
                                          __frame3[3]["0"] = function()
                                            return function(__eta0)
                                                local __frame5 = {
                                                  nil,
                                                  nil,
                                                  nil,
                                                  nil,
                                                  nil,
                                                  nil,
                                                  nil,
                                                  nil
                                                }
                                                __frame5[1] = __e4
                                                __frame5[2] = {
                                                  nil
                                                }
                                                __frame5[2]["0"] = function()
                                                  local __e8 = __frame5[1]["arg2"]
                                                  return __e8
                                                end
                                                __frame5[3] = __frame5[2][__frame5[1]["tag"]]
                                                if __frame5[3] then
                                                  __frame5[4] = __frame5[3]()
                                                else
                                                  idris["error"]("Impossible else branch")
                                                end
                                                local __act24 = idris["Plugin.runFind"](idris["Plugin.Parameters..sourceDir"](__arg1))(__frame5[4])(__eta0)
                                                __frame5[5] = __act24
                                                __frame5[6] = {
                                                  nil,
                                                  nil
                                                }
                                                __frame5[6]["1"] = function()
                                                  local __frame6 = {
                                                    nil,
                                                    nil,
                                                    nil,
                                                    nil,
                                                    nil,
                                                    nil,
                                                    nil,
                                                    nil,
                                                    nil,
                                                    nil,
                                                    nil
                                                  }
                                                  local __e3 = __frame5[5]["arg1"]
                                                  local __e2 = __frame5[5]["arg2"]
                                                  __frame6[1] = __e2
                                                  __frame6[2] = {
                                                    nil
                                                  }
                                                  __frame6[2]["0"] = function()
                                                    local __frame7 = {
                                                      nil,
                                                      nil,
                                                      nil,
                                                      nil,
                                                      nil,
                                                      nil,
                                                      nil,
                                                      nil
                                                    }
                                                    __frame7[1] = __e4
                                                    __frame7[2] = {
                                                      nil
                                                    }
                                                    __frame7[2]["0"] = function()
                                                      local __e9 = __frame7[1]["arg3"]
                                                      return __e9
                                                    end
                                                    __frame7[3] = __frame7[2][__frame7[1]["tag"]]
                                                    if __frame7[3] then
                                                      __frame7[4] = __frame7[3]()
                                                    else
                                                      idris["error"]("Impossible else branch")
                                                    end
                                                    __frame7[5] = __e4
                                                    __frame7[6] = {
                                                      nil
                                                    }
                                                    __frame7[6]["0"] = function()
                                                      local __e8 = __frame7[5]["arg4"]
                                                      return __e8
                                                    end
                                                    __frame7[7] = __frame7[6][__frame7[5]["tag"]]
                                                    if __frame7[7] then
                                                      __frame7[8] = __frame7[7]()
                                                    else
                                                      idris["error"]("Impossible else branch")
                                                    end
                                                    return idris["Plugin.jumpToDef"](__e3)(__frame7[4])(__frame7[8])(__eta0)
                                                  end
                                                  __frame6[10] = __frame6[2][__frame6[1]["tag"]]
                                                  if __frame6[10] then
                                                    __frame6[11] = __frame6[10]()
                                                  else
                                                    local relative = idris["Data.List.filter"](nil)(function(__eta1)
                                                      return idris["Utils.Path.isRelative"](__eta1)
                                                    end)(__act24)
                                                    __frame6[3] = relative
                                                    __frame6[4] = {
                                                      nil,
                                                      nil
                                                    }
                                                    __frame6[4]["0"] = function()
                                                      local __frame7 = {
                                                        nil,
                                                        nil,
                                                        nil
                                                      }
                                                      __frame7[1] = {}
                                                      __frame7[1]["tag"] = "0"
                                                      __frame7[1]["arg1"] = function(b)
                                                        return function(a)
                                                            return function(func)
                                                                return function(__arg149)
                                                                    return function(__eta1)
                                                                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                                                      end
                                                                  end
                                                              end
                                                          end
                                                      end
                                                      __frame7[1]["arg2"] = function(a)
                                                        return function(__arg482)
                                                            return function(__eta1)
                                                                return __arg482
                                                              end
                                                          end
                                                      end
                                                      __frame7[1]["arg3"] = function(b)
                                                        return function(a)
                                                            return function(__arg483)
                                                                return function(__arg485)
                                                                    return function(__eta1)
                                                                        local __act17 = __arg483(__eta1)
                                                                        local __act16 = __arg485(__eta1)
                                                                        return __act17(__act16)
                                                                      end
                                                                  end
                                                              end
                                                          end
                                                      end
                                                      __frame7[2] = {}
                                                      __frame7[2]["tag"] = "0"
                                                      __frame7[2]["arg1"] = __frame7[1]
                                                      __frame7[2]["arg2"] = function(b)
                                                        return function(a)
                                                            return function(__arg644)
                                                                return function(__arg645)
                                                                    return function(__eta1)
                                                                        local __act25 = __arg644(__eta1)
                                                                        return __arg645(__act25)(__eta1)
                                                                      end
                                                                  end
                                                              end
                                                          end
                                                      end
                                                      __frame7[2]["arg3"] = function(a)
                                                        return function(__arg647)
                                                            return function(__eta1)
                                                                local __act51 = __arg647(__eta1)
                                                                return __act51(__eta1)
                                                              end
                                                          end
                                                      end
                                                      __frame7[3] = {}
                                                      __frame7[3]["tag"] = "0"
                                                      __frame7[3]["arg1"] = __frame7[2]
                                                      __frame7[3]["arg2"] = function(a)
                                                        return function(__arg6794)
                                                            return __arg6794
                                                          end
                                                      end
                                                      return idris["Foreign.nvimCommand"](nil)(__frame7[3])("echoe \"Can't handle multiple absolute candidates\"")(__eta0)
                                                    end
                                                    __frame6[4]["1"] = function()
                                                      local __frame7 = {
                                                        nil,
                                                        nil,
                                                        nil,
                                                        nil,
                                                        nil,
                                                        nil,
                                                        nil
                                                      }
                                                      local __e7 = __frame6[3]["arg1"]
                                                      local __e6 = __frame6[3]["arg2"]
                                                      __frame7[1] = __e6
                                                      __frame7[2] = {
                                                        nil
                                                      }
                                                      __frame7[2]["0"] = function()
                                                        local __frame8 = {
                                                          nil,
                                                          nil,
                                                          nil,
                                                          nil,
                                                          nil,
                                                          nil,
                                                          nil,
                                                          nil
                                                        }
                                                        __frame8[1] = __e4
                                                        __frame8[2] = {
                                                          nil
                                                        }
                                                        __frame8[2]["0"] = function()
                                                          local __e11 = __frame8[1]["arg3"]
                                                          return __e11
                                                        end
                                                        __frame8[3] = __frame8[2][__frame8[1]["tag"]]
                                                        if __frame8[3] then
                                                          __frame8[4] = __frame8[3]()
                                                        else
                                                          idris["error"]("Impossible else branch")
                                                        end
                                                        __frame8[5] = __e4
                                                        __frame8[6] = {
                                                          nil
                                                        }
                                                        __frame8[6]["0"] = function()
                                                          local __e10 = __frame8[5]["arg4"]
                                                          return __e10
                                                        end
                                                        __frame8[7] = __frame8[6][__frame8[5]["tag"]]
                                                        if __frame8[7] then
                                                          __frame8[8] = __frame8[7]()
                                                        else
                                                          idris["error"]("Impossible else branch")
                                                        end
                                                        return idris["Plugin.jumpToDef"](__e7)(__frame8[4])(__frame8[8])(__eta0)
                                                      end
                                                      __frame7[6] = __frame7[2][__frame7[1]["tag"]]
                                                      if __frame7[6] then
                                                        __frame7[7] = __frame7[6]()
                                                      else
                                                        __frame7[3] = {}
                                                        __frame7[3]["tag"] = "0"
                                                        __frame7[3]["arg1"] = function(b)
                                                          return function(a)
                                                              return function(func)
                                                                  return function(__arg149)
                                                                      return function(__eta1)
                                                                          return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                        __frame7[3]["arg2"] = function(a)
                                                          return function(__arg482)
                                                              return function(__eta1)
                                                                  return __arg482
                                                                end
                                                            end
                                                        end
                                                        __frame7[3]["arg3"] = function(b)
                                                          return function(a)
                                                              return function(__arg483)
                                                                  return function(__arg485)
                                                                      return function(__eta1)
                                                                          local __act17 = __arg483(__eta1)
                                                                          local __act16 = __arg485(__eta1)
                                                                          return __act17(__act16)
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                        __frame7[4] = {}
                                                        __frame7[4]["tag"] = "0"
                                                        __frame7[4]["arg1"] = __frame7[3]
                                                        __frame7[4]["arg2"] = function(b)
                                                          return function(a)
                                                              return function(__arg644)
                                                                  return function(__arg645)
                                                                      return function(__eta1)
                                                                          local __act25 = __arg644(__eta1)
                                                                          return __arg645(__act25)(__eta1)
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                        __frame7[4]["arg3"] = function(a)
                                                          return function(__arg647)
                                                              return function(__eta1)
                                                                  local __act51 = __arg647(__eta1)
                                                                  return __act51(__eta1)
                                                                end
                                                            end
                                                        end
                                                        __frame7[5] = {}
                                                        __frame7[5]["tag"] = "0"
                                                        __frame7[5]["arg1"] = __frame7[4]
                                                        __frame7[5]["arg2"] = function(a)
                                                          return function(__arg6794)
                                                              return __arg6794
                                                            end
                                                        end
                                                        __frame7[7] = idris["Foreign.nvimCommand"](nil)(__frame7[5])("echoe \"Can't handle multiple relative candidates\"")(__eta0)
                                                      end
                                                      return __frame7[7]
                                                    end
                                                    __frame6[8] = __frame6[4][__frame6[3]["tag"]]
                                                    if __frame6[8] then
                                                      __frame6[9] = __frame6[8]()
                                                    else
                                                      __frame6[5] = {}
                                                      __frame6[5]["tag"] = "0"
                                                      __frame6[5]["arg1"] = function(b)
                                                        return function(a)
                                                            return function(func)
                                                                return function(__arg149)
                                                                    return function(__eta1)
                                                                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                                                      end
                                                                  end
                                                              end
                                                          end
                                                      end
                                                      __frame6[5]["arg2"] = function(a)
                                                        return function(__arg482)
                                                            return function(__eta1)
                                                                return __arg482
                                                              end
                                                          end
                                                      end
                                                      __frame6[5]["arg3"] = function(b)
                                                        return function(a)
                                                            return function(__arg483)
                                                                return function(__arg485)
                                                                    return function(__eta1)
                                                                        local __act17 = __arg483(__eta1)
                                                                        local __act16 = __arg485(__eta1)
                                                                        return __act17(__act16)
                                                                      end
                                                                  end
                                                              end
                                                          end
                                                      end
                                                      __frame6[6] = {}
                                                      __frame6[6]["tag"] = "0"
                                                      __frame6[6]["arg1"] = __frame6[5]
                                                      __frame6[6]["arg2"] = function(b)
                                                        return function(a)
                                                            return function(__arg644)
                                                                return function(__arg645)
                                                                    return function(__eta1)
                                                                        local __act25 = __arg644(__eta1)
                                                                        return __arg645(__act25)(__eta1)
                                                                      end
                                                                  end
                                                              end
                                                          end
                                                      end
                                                      __frame6[6]["arg3"] = function(a)
                                                        return function(__arg647)
                                                            return function(__eta1)
                                                                local __act51 = __arg647(__eta1)
                                                                return __act51(__eta1)
                                                              end
                                                          end
                                                      end
                                                      __frame6[7] = {}
                                                      __frame6[7]["tag"] = "0"
                                                      __frame6[7]["arg1"] = __frame6[6]
                                                      __frame6[7]["arg2"] = function(a)
                                                        return function(__arg6794)
                                                            return __arg6794
                                                          end
                                                      end
                                                      __frame6[9] = idris["Foreign.nvimCommand"](nil)(__frame6[7])("echoe \"Can't handle multiple relative candidates\"")(__eta0)
                                                    end
                                                    __frame6[11] = __frame6[9]
                                                  end
                                                  return __frame6[11]
                                                end
                                                __frame5[6]["0"] = function()
                                                  local __frame6 = {
                                                    nil,
                                                    nil,
                                                    nil
                                                  }
                                                  __frame6[1] = {}
                                                  __frame6[1]["tag"] = "0"
                                                  __frame6[1]["arg1"] = function(b)
                                                    return function(a)
                                                        return function(func)
                                                            return function(__arg149)
                                                                return function(__eta1)
                                                                    return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                                                  end
                                                              end
                                                          end
                                                      end
                                                  end
                                                  __frame6[1]["arg2"] = function(a)
                                                    return function(__arg482)
                                                        return function(__eta1)
                                                            return __arg482
                                                          end
                                                      end
                                                  end
                                                  __frame6[1]["arg3"] = function(b)
                                                    return function(a)
                                                        return function(__arg483)
                                                            return function(__arg485)
                                                                return function(__eta1)
                                                                    local __act17 = __arg483(__eta1)
                                                                    local __act16 = __arg485(__eta1)
                                                                    return __act17(__act16)
                                                                  end
                                                              end
                                                          end
                                                      end
                                                  end
                                                  __frame6[2] = {}
                                                  __frame6[2]["tag"] = "0"
                                                  __frame6[2]["arg1"] = __frame6[1]
                                                  __frame6[2]["arg2"] = function(b)
                                                    return function(a)
                                                        return function(__arg644)
                                                            return function(__arg645)
                                                                return function(__eta1)
                                                                    local __act25 = __arg644(__eta1)
                                                                    return __arg645(__act25)(__eta1)
                                                                  end
                                                              end
                                                          end
                                                      end
                                                  end
                                                  __frame6[2]["arg3"] = function(a)
                                                    return function(__arg647)
                                                        return function(__eta1)
                                                            local __act51 = __arg647(__eta1)
                                                            return __act51(__eta1)
                                                          end
                                                      end
                                                  end
                                                  __frame6[3] = {}
                                                  __frame6[3]["tag"] = "0"
                                                  __frame6[3]["arg1"] = __frame6[2]
                                                  __frame6[3]["arg2"] = function(a)
                                                    return function(__arg6794)
                                                        return __arg6794
                                                      end
                                                  end
                                                  return idris["Foreign.nvimCommand"](nil)(__frame6[3])("echoe 'Candidates not found'")(__eta0)
                                                end
                                                __frame5[7] = __frame5[6][__frame5[5]["tag"]]
                                                if __frame5[7] then
                                                  __frame5[8] = __frame5[7]()
                                                else
                                                  idris["error"]("Impossible else branch")
                                                end
                                                return __frame5[8]
                                              end
                                          end
                                          __frame3[3]["1"] = function()
                                            local __e2 = __frame3[2]["arg1"]
                                            local __e3 = __frame3[2]["arg2"]
                                            local fzfInput = idris["Prelude.Types.map_Functor__List"](nil)(nil)(function(__lamc0)
                                              local __frame5 = {
                                                nil,
                                                nil,
                                                nil,
                                                nil
                                              }
                                              __frame5[1] = __lamc0
                                              __frame5[2] = {
                                                nil
                                              }
                                              __frame5[2]["0"] = function()
                                                local __frame6 = {
                                                  nil,
                                                  nil,
                                                  nil,
                                                  nil
                                                }
                                                local __e7 = __frame5[1]["arg1"]
                                                local __e6 = __frame5[1]["arg2"]
                                                __frame6[1] = __e7
                                                __frame6[2] = {
                                                  nil
                                                }
                                                __frame6[2]["0"] = function()
                                                  local __e12 = __frame6[1]["arg2"]
                                                  return __e12
                                                end
                                                __frame6[3] = __frame6[2][__frame6[1]["tag"]]
                                                if __frame6[3] then
                                                  __frame6[4] = __frame6[3]()
                                                else
                                                  idris["error"]("Impossible else branch")
                                                end
                                                return idris["Prelude.Types.Strings.++"]("[")(idris["Prelude.Types.Strings.++"](idris["Prelude.Show.show_Show__Nat"](__e6))(idris["Prelude.Types.Strings.++"]("] ")(__frame6[4])))
                                              end
                                              __frame5[3] = __frame5[2][__frame5[1]["tag"]]
                                              if __frame5[3] then
                                                __frame5[4] = __frame5[3]()
                                              else
                                                idris["error"]("Impossible else branch")
                                              end
                                              return __frame5[4]
                                            end)(idris["Plugin.zipWithIndex"](nil)(validated))
                                            return idris["Plugin.fzfWindowBottom"](__arg3)(fzfInput)(function(file)
                                                local __frame5 = {
                                                  nil
                                                }
                                                __frame5[1] = {}
                                                __frame5[1]["tag"] = "0"
                                                __frame5[1]["arg1"] = function(b)
                                                  return function(a)
                                                      return function(func)
                                                          return function(__arg149)
                                                              return function(__eta0)
                                                                  return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                                __frame5[1]["arg2"] = function(a)
                                                  return function(__arg482)
                                                      return function(__eta0)
                                                          return __arg482
                                                        end
                                                    end
                                                end
                                                __frame5[1]["arg3"] = function(b)
                                                  return function(a)
                                                      return function(__arg483)
                                                          return function(__arg485)
                                                              return function(__eta0)
                                                                  local __act17 = __arg483(__eta0)
                                                                  local __act16 = __arg485(__eta0)
                                                                  return __act17(__act16)
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                                return idris["Prelude.Interfaces.when"](nil)(__frame5[1])(idris["Prelude.EqOrd./=_Eq__String"](file)(""))(function()
                                                    return function(__eta0)
                                                        local __frame7 = {
                                                          nil,
                                                          nil,
                                                          nil,
                                                          nil
                                                        }
                                                        __frame7[1] = {}
                                                        __frame7[1]["tag"] = "0"
                                                        __frame7[1]["arg1"] = function(b)
                                                          return function(a)
                                                              return function(func)
                                                                  return function(__arg149)
                                                                      return function(__eta1)
                                                                          return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                        __frame7[1]["arg2"] = function(a)
                                                          return function(__arg482)
                                                              return function(__eta1)
                                                                  return __arg482
                                                                end
                                                            end
                                                        end
                                                        __frame7[1]["arg3"] = function(b)
                                                          return function(a)
                                                              return function(__arg483)
                                                                  return function(__arg485)
                                                                      return function(__eta1)
                                                                          local __act17 = __arg483(__eta1)
                                                                          local __act16 = __arg485(__eta1)
                                                                          return __act17(__act16)
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                        __frame7[2] = {}
                                                        __frame7[2]["tag"] = "0"
                                                        __frame7[2]["arg1"] = __frame7[1]
                                                        __frame7[2]["arg2"] = function(b)
                                                          return function(a)
                                                              return function(__arg644)
                                                                  return function(__arg645)
                                                                      return function(__eta1)
                                                                          local __act24 = __arg644(__eta1)
                                                                          return __arg645(__act24)(__eta1)
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                        __frame7[2]["arg3"] = function(a)
                                                          return function(__arg647)
                                                              return function(__eta1)
                                                                  local __act51 = __arg647(__eta1)
                                                                  return __act51(__eta1)
                                                                end
                                                            end
                                                        end
                                                        __frame7[3] = {}
                                                        __frame7[3]["tag"] = "0"
                                                        __frame7[3]["arg1"] = __frame7[2]
                                                        __frame7[3]["arg2"] = function(a)
                                                          return function(__arg6794)
                                                              return __arg6794
                                                            end
                                                        end
                                                        local __act24 = idris["Foreign.nvimCommand"](nil)(__frame7[3])(idris["Prelude.Types.Strings.++"]("echom 'file is: ")(idris["Prelude.Types.Strings.++"](file)("'")))(__eta0)
                                                        __frame7[4] = {}
                                                        __frame7[4]["tag"] = "1"
                                                        __frame7[4]["arg1"] = __e2
                                                        __frame7[4]["arg2"] = __e3
                                                        local rest = __frame7[4]
                                                        return idris["Plugin.case[5969]case block in case block in case block in case block in process"](__arg0)(__arg1)(__arg2)(__arg3)(__arg4)(__arg5)(__arg6)(__arg7)(__e4)(__e3)(__e2)(validated)(rest)(fzfInput)(file)(__act24)(idris["Plugin.matchlist"](file)("\\v\\[([0-9]+)\\].+"))(__eta0)
                                                      end
                                                  end)
                                              end)
                                          end
                                          __frame3[4] = __frame3[3][__frame3[2]["tag"]]
                                          if __frame3[4] then
                                            __frame3[5] = __frame3[4]()
                                          else
                                            idris["error"]("Impossible else branch")
                                          end
                                          return __frame3[5]
                                        end
                                        __frame2[2]["0"] = function()
                                          return function(__eta0)
                                              local __act24 = idris["Plugin.currenttime"](__eta0)
                                              return idris["Plugin.writeToBuffer"](1)(idris["Prelude.Types.Strings.++"]("-- ")(idris["Prelude.Types.Strings.++"](__act24)(idris["Prelude.Types.Strings.++"]("\n")(idris["Prelude.Types.Strings.++"]("Could not find anything on ")(__arg3)))))(__eta0)
                                            end
                                        end
                                        __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                                        if __frame2[3] then
                                          __frame2[4] = __frame2[3]()
                                        else
                                          idris["error"]("Impossible else branch")
                                        end
                                        return __frame2[4]
                                      end
                                      __frame1[2]["0"] = function()
                                        local __frame2 = {
                                          nil,
                                          nil,
                                          nil
                                        }
                                        __frame2[1] = {}
                                        __frame2[1]["tag"] = "0"
                                        __frame2[1]["arg1"] = function(b)
                                          return function(a)
                                              return function(func)
                                                  return function(__arg149)
                                                      return function(__eta0)
                                                          return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                        __frame2[1]["arg2"] = function(a)
                                          return function(__arg482)
                                              return function(__eta0)
                                                  return __arg482
                                                end
                                            end
                                        end
                                        __frame2[1]["arg3"] = function(b)
                                          return function(a)
                                              return function(__arg483)
                                                  return function(__arg485)
                                                      return function(__eta0)
                                                          local __act17 = __arg483(__eta0)
                                                          local __act16 = __arg485(__eta0)
                                                          return __act17(__act16)
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                        __frame2[2] = {}
                                        __frame2[2]["tag"] = "0"
                                        __frame2[2]["arg1"] = __frame2[1]
                                        __frame2[2]["arg2"] = function(b)
                                          return function(a)
                                              return function(__arg644)
                                                  return function(__arg645)
                                                      return function(__eta0)
                                                          local __act24 = __arg644(__eta0)
                                                          return __arg645(__act24)(__eta0)
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                        __frame2[2]["arg3"] = function(a)
                                          return function(__arg647)
                                              return function(__eta0)
                                                  local __act51 = __arg647(__eta0)
                                                  return __act51(__eta0)
                                                end
                                            end
                                        end
                                        __frame2[3] = {}
                                        __frame2[3]["tag"] = "0"
                                        __frame2[3]["arg1"] = __frame2[2]
                                        __frame2[3]["arg2"] = function(a)
                                          return function(__arg6794)
                                              return __arg6794
                                            end
                                        end
                                        return idris["Foreign.nvimCommand"](nil)(__frame2[3])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to NameAt")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__arg7))("'")))
                                      end
                                      __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                                      if __frame1[3] then
                                        __frame1[4] = __frame1[3]()
                                      else
                                        idris["error"]("Impossible else branch")
                                      end
                                      return __frame1[4]
                                    end)()
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Plugin.process"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil,
            nil,
            nil,
            nil,
            nil,
            nil
          }
          __frame1[2]["0"] = function()
            local __e0 = __frame1[1]["arg1"]
            local __e1 = __frame1[1]["arg2"]
            return function(__eta0)
                local __frame3 = {
                  nil,
                  nil,
                  nil,
                  nil,
                  nil
                }
                local __act24 = idris["Foreign.getCmdFromHistory"](__e0)(__eta0)
                __frame3[1] = __act24
                __frame3[2] = {
                  nil
                }
                __frame3[2]["1"] = function()
                  local __frame4 = {
                    nil,
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  local __e2 = __frame3[1]["arg1"]
                  __frame4[1] = __e2
                  __frame4[2] = {
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame4[2]["0"] = function()
                    local __frame5 = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    __frame5[1] = __e1
                    __frame5[2] = {
                      nil
                    }
                    __frame5[2]["0"] = function()
                      local __frame6 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      local __e4 = __frame5[1]["arg1"]
                      __frame6[1] = __e4
                      __frame6[2] = {
                        nil
                      }
                      __frame6[2]["1"] = function()
                        local __frame7 = {
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        local __e6 = __frame6[1]["arg1"]
                        __frame7[1] = __e6
                        __frame7[2] = {
                          nil
                        }
                        __frame7[2]["1"] = function()
                          local __e7 = __frame7[1]["arg1"]
                          local __act25 = idris["Plugin.currenttime"](__eta0)
                          local __act25 = idris["Plugin.writeToBuffer"](1)(idris["Prelude.Types.Strings.++"]("-- ")(idris["Prelude.Types.Strings.++"](__act25)(idris["Prelude.Types.Strings.++"]("\n")(__e7))))(__eta0)
                          return idris["Foreign.deleteCmdInHistory"](__e0)(__eta0)
                        end
                        __frame7[6] = __frame7[2][__frame7[1]["tag"]]
                        if __frame7[6] then
                          __frame7[7] = __frame7[6]()
                        else
                          __frame7[3] = {}
                          __frame7[3]["tag"] = "0"
                          __frame7[3]["arg1"] = function(b)
                            return function(a)
                                return function(func)
                                    return function(__arg149)
                                        return function(__eta1)
                                            return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[3]["arg2"] = function(a)
                            return function(__arg482)
                                return function(__eta1)
                                    return __arg482
                                  end
                              end
                          end
                          __frame7[3]["arg3"] = function(b)
                            return function(a)
                                return function(__arg483)
                                    return function(__arg485)
                                        return function(__eta1)
                                            local __act17 = __arg483(__eta1)
                                            local __act16 = __arg485(__eta1)
                                            return __act17(__act16)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[4] = {}
                          __frame7[4]["tag"] = "0"
                          __frame7[4]["arg1"] = __frame7[3]
                          __frame7[4]["arg2"] = function(b)
                            return function(a)
                                return function(__arg644)
                                    return function(__arg645)
                                        return function(__eta1)
                                            local __act25 = __arg644(__eta1)
                                            return __arg645(__act25)(__eta1)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[4]["arg3"] = function(a)
                            return function(__arg647)
                                return function(__eta1)
                                    local __act51 = __arg647(__eta1)
                                    return __act51(__eta1)
                                  end
                              end
                          end
                          __frame7[5] = {}
                          __frame7[5]["tag"] = "0"
                          __frame7[5]["arg1"] = __frame7[4]
                          __frame7[5]["arg2"] = function(a)
                            return function(__arg6794)
                                return __arg6794
                              end
                          end
                          __frame7[7] = idris["Foreign.nvimCommand"](nil)(__frame7[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to Interpret")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                        end
                        return __frame7[7]
                      end
                      __frame6[6] = __frame6[2][__frame6[1]["tag"]]
                      if __frame6[6] then
                        __frame6[7] = __frame6[6]()
                      else
                        __frame6[3] = {}
                        __frame6[3]["tag"] = "0"
                        __frame6[3]["arg1"] = function(b)
                          return function(a)
                              return function(func)
                                  return function(__arg149)
                                      return function(__eta1)
                                          return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[3]["arg2"] = function(a)
                          return function(__arg482)
                              return function(__eta1)
                                  return __arg482
                                end
                            end
                        end
                        __frame6[3]["arg3"] = function(b)
                          return function(a)
                              return function(__arg483)
                                  return function(__arg485)
                                      return function(__eta1)
                                          local __act17 = __arg483(__eta1)
                                          local __act16 = __arg485(__eta1)
                                          return __act17(__act16)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[4] = {}
                        __frame6[4]["tag"] = "0"
                        __frame6[4]["arg1"] = __frame6[3]
                        __frame6[4]["arg2"] = function(b)
                          return function(a)
                              return function(__arg644)
                                  return function(__arg645)
                                      return function(__eta1)
                                          local __act25 = __arg644(__eta1)
                                          return __arg645(__act25)(__eta1)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[4]["arg3"] = function(a)
                          return function(__arg647)
                              return function(__eta1)
                                  local __act51 = __arg647(__eta1)
                                  return __act51(__eta1)
                                end
                            end
                        end
                        __frame6[5] = {}
                        __frame6[5]["tag"] = "0"
                        __frame6[5]["arg1"] = __frame6[4]
                        __frame6[5]["arg2"] = function(a)
                          return function(__arg6794)
                              return __arg6794
                            end
                        end
                        __frame6[7] = idris["Foreign.nvimCommand"](nil)(__frame6[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to Interpret")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                      end
                      return __frame6[7]
                    end
                    __frame5[6] = __frame5[2][__frame5[1]["tag"]]
                    if __frame5[6] then
                      __frame5[7] = __frame5[6]()
                    else
                      __frame5[3] = {}
                      __frame5[3]["tag"] = "0"
                      __frame5[3]["arg1"] = function(b)
                        return function(a)
                            return function(func)
                                return function(__arg149)
                                    return function(__eta1)
                                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[3]["arg2"] = function(a)
                        return function(__arg482)
                            return function(__eta1)
                                return __arg482
                              end
                          end
                      end
                      __frame5[3]["arg3"] = function(b)
                        return function(a)
                            return function(__arg483)
                                return function(__arg485)
                                    return function(__eta1)
                                        local __act17 = __arg483(__eta1)
                                        local __act16 = __arg485(__eta1)
                                        return __act17(__act16)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[4] = {}
                      __frame5[4]["tag"] = "0"
                      __frame5[4]["arg1"] = __frame5[3]
                      __frame5[4]["arg2"] = function(b)
                        return function(a)
                            return function(__arg644)
                                return function(__arg645)
                                    return function(__eta1)
                                        local __act25 = __arg644(__eta1)
                                        return __arg645(__act25)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[4]["arg3"] = function(a)
                        return function(__arg647)
                            return function(__eta1)
                                local __act51 = __arg647(__eta1)
                                return __act51(__eta1)
                              end
                          end
                      end
                      __frame5[5] = {}
                      __frame5[5]["tag"] = "0"
                      __frame5[5]["arg1"] = __frame5[4]
                      __frame5[5]["arg2"] = function(a)
                        return function(__arg6794)
                            return __arg6794
                          end
                      end
                      __frame5[7] = idris["Foreign.nvimCommand"](nil)(__frame5[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to Interpret")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                    end
                    return __frame5[7]
                  end
                  __frame4[2]["1"] = function()
                    local __e3 = __frame4[1]["arg1"]
                    local __act25 = idris["Plugin.currenttime"](__eta0)
                    local __act25 = idris["Plugin.writeToBuffer"](0)(idris["Prelude.Types.Strings.++"](__act25)(idris["Prelude.Types.Strings.++"]("\nSuccesfully reloaded ")(__e3)))(__eta0)
                    return idris["Foreign.deleteCmdInHistory"](__e0)(__eta0)
                  end
                  __frame4[2]["2"] = function()
                    local __frame5 = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    __frame5[1] = __e1
                    __frame5[2] = {
                      nil
                    }
                    __frame5[2]["0"] = function()
                      local __frame6 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      local __e3 = __frame5[1]["arg1"]
                      __frame6[1] = __e3
                      __frame6[2] = {
                        nil
                      }
                      __frame6[2]["1"] = function()
                        local __frame7 = {
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        local __e7 = __frame6[1]["arg1"]
                        __frame7[1] = __e7
                        __frame7[2] = {
                          nil
                        }
                        __frame7[2]["1"] = function()
                          local __e8 = __frame7[1]["arg1"]
                          local __act25 = idris["Plugin.currenttime"](__eta0)
                          local __act25 = idris["Plugin.writeToBuffer"](1)(idris["Prelude.Types.Strings.++"]("-- ")(idris["Prelude.Types.Strings.++"](__act25)(idris["Prelude.Types.Strings.++"]("\n")(__e8))))(__eta0)
                          return idris["Foreign.deleteCmdInHistory"](__e0)(__eta0)
                        end
                        __frame7[6] = __frame7[2][__frame7[1]["tag"]]
                        if __frame7[6] then
                          __frame7[7] = __frame7[6]()
                        else
                          __frame7[3] = {}
                          __frame7[3]["tag"] = "0"
                          __frame7[3]["arg1"] = function(b)
                            return function(a)
                                return function(func)
                                    return function(__arg149)
                                        return function(__eta1)
                                            return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[3]["arg2"] = function(a)
                            return function(__arg482)
                                return function(__eta1)
                                    return __arg482
                                  end
                              end
                          end
                          __frame7[3]["arg3"] = function(b)
                            return function(a)
                                return function(__arg483)
                                    return function(__arg485)
                                        return function(__eta1)
                                            local __act17 = __arg483(__eta1)
                                            local __act16 = __arg485(__eta1)
                                            return __act17(__act16)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[4] = {}
                          __frame7[4]["tag"] = "0"
                          __frame7[4]["arg1"] = __frame7[3]
                          __frame7[4]["arg2"] = function(b)
                            return function(a)
                                return function(__arg644)
                                    return function(__arg645)
                                        return function(__eta1)
                                            local __act25 = __arg644(__eta1)
                                            return __arg645(__act25)(__eta1)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[4]["arg3"] = function(a)
                            return function(__arg647)
                                return function(__eta1)
                                    local __act51 = __arg647(__eta1)
                                    return __act51(__eta1)
                                  end
                              end
                          end
                          __frame7[5] = {}
                          __frame7[5]["tag"] = "0"
                          __frame7[5]["arg1"] = __frame7[4]
                          __frame7[5]["arg2"] = function(a)
                            return function(__arg6794)
                                return __arg6794
                              end
                          end
                          __frame7[7] = idris["Foreign.nvimCommand"](nil)(__frame7[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to TypeOf")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                        end
                        return __frame7[7]
                      end
                      __frame6[6] = __frame6[2][__frame6[1]["tag"]]
                      if __frame6[6] then
                        __frame6[7] = __frame6[6]()
                      else
                        __frame6[3] = {}
                        __frame6[3]["tag"] = "0"
                        __frame6[3]["arg1"] = function(b)
                          return function(a)
                              return function(func)
                                  return function(__arg149)
                                      return function(__eta1)
                                          return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[3]["arg2"] = function(a)
                          return function(__arg482)
                              return function(__eta1)
                                  return __arg482
                                end
                            end
                        end
                        __frame6[3]["arg3"] = function(b)
                          return function(a)
                              return function(__arg483)
                                  return function(__arg485)
                                      return function(__eta1)
                                          local __act17 = __arg483(__eta1)
                                          local __act16 = __arg485(__eta1)
                                          return __act17(__act16)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[4] = {}
                        __frame6[4]["tag"] = "0"
                        __frame6[4]["arg1"] = __frame6[3]
                        __frame6[4]["arg2"] = function(b)
                          return function(a)
                              return function(__arg644)
                                  return function(__arg645)
                                      return function(__eta1)
                                          local __act25 = __arg644(__eta1)
                                          return __arg645(__act25)(__eta1)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[4]["arg3"] = function(a)
                          return function(__arg647)
                              return function(__eta1)
                                  local __act51 = __arg647(__eta1)
                                  return __act51(__eta1)
                                end
                            end
                        end
                        __frame6[5] = {}
                        __frame6[5]["tag"] = "0"
                        __frame6[5]["arg1"] = __frame6[4]
                        __frame6[5]["arg2"] = function(a)
                          return function(__arg6794)
                              return __arg6794
                            end
                        end
                        __frame6[7] = idris["Foreign.nvimCommand"](nil)(__frame6[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to TypeOf")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                      end
                      return __frame6[7]
                    end
                    __frame5[6] = __frame5[2][__frame5[1]["tag"]]
                    if __frame5[6] then
                      __frame5[7] = __frame5[6]()
                    else
                      __frame5[3] = {}
                      __frame5[3]["tag"] = "0"
                      __frame5[3]["arg1"] = function(b)
                        return function(a)
                            return function(func)
                                return function(__arg149)
                                    return function(__eta1)
                                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[3]["arg2"] = function(a)
                        return function(__arg482)
                            return function(__eta1)
                                return __arg482
                              end
                          end
                      end
                      __frame5[3]["arg3"] = function(b)
                        return function(a)
                            return function(__arg483)
                                return function(__arg485)
                                    return function(__eta1)
                                        local __act17 = __arg483(__eta1)
                                        local __act16 = __arg485(__eta1)
                                        return __act17(__act16)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[4] = {}
                      __frame5[4]["tag"] = "0"
                      __frame5[4]["arg1"] = __frame5[3]
                      __frame5[4]["arg2"] = function(b)
                        return function(a)
                            return function(__arg644)
                                return function(__arg645)
                                    return function(__eta1)
                                        local __act25 = __arg644(__eta1)
                                        return __arg645(__act25)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[4]["arg3"] = function(a)
                        return function(__arg647)
                            return function(__eta1)
                                local __act51 = __arg647(__eta1)
                                return __act51(__eta1)
                              end
                          end
                      end
                      __frame5[5] = {}
                      __frame5[5]["tag"] = "0"
                      __frame5[5]["arg1"] = __frame5[4]
                      __frame5[5]["arg2"] = function(a)
                        return function(__arg6794)
                            return __arg6794
                          end
                      end
                      __frame5[7] = idris["Foreign.nvimCommand"](nil)(__frame5[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to TypeOf")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                    end
                    return __frame5[7]
                  end
                  __frame4[2]["3"] = function()
                    local __frame5 = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    local __e7 = __frame4[1]["arg1"]
                    local __e8 = __frame4[1]["arg2"]
                    local __act25 = idris["Foreign.deleteCmdInHistory"](__e0)(__eta0)
                    __frame5[1] = {}
                    __frame5[1]["tag"] = "3"
                    __frame5[1]["arg1"] = __e7
                    __frame5[1]["arg2"] = __e8
                    __frame5[2] = {}
                    __frame5[2]["tag"] = "1"
                    __frame5[2]["arg1"] = __frame5[1]
                    local __bind0 = __frame5[2]
                    __frame5[3] = __e1
                    __frame5[4] = {
                      nil
                    }
                    __frame5[4]["0"] = function()
                      local __frame6 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      local __e3 = __frame5[3]["arg1"]
                      __frame6[1] = __e3
                      __frame6[2] = {
                        nil
                      }
                      __frame6[2]["1"] = function()
                        local __frame7 = {
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        local __e5 = __frame6[1]["arg1"]
                        local __e4 = __frame6[1]["arg2"]
                        __frame7[1] = __e5
                        __frame7[2] = {
                          nil
                        }
                        __frame7[2]["0"] = function()
                          local __frame8 = {
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          local __e6 = __frame7[1]["arg1"]
                          __frame8[1] = __e4
                          __frame8[2] = {
                            nil
                          }
                          __frame8[2]["0"] = function()
                            local __frame9 = {
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil
                            }
                            __frame9[1] = {}
                            __frame9[1]["tag"] = "0"
                            __frame9[1]["arg1"] = __e6
                            __frame9[2] = {}
                            __frame9[2]["tag"] = "0"
                            __frame9[3] = {}
                            __frame9[3]["tag"] = "1"
                            __frame9[3]["arg1"] = __frame9[1]
                            __frame9[3]["arg2"] = __frame9[2]
                            __frame9[4] = {}
                            __frame9[4]["tag"] = "0"
                            __frame9[4]["arg1"] = __frame9[3]
                            local res = __frame9[4]
                            __frame9[5] = {}
                            __frame9[5]["tag"] = "0"
                            __frame9[5]["arg1"] = function(acc)
                              return function(elem)
                                  return function(func)
                                      return function(init)
                                          return function(input)
                                              return idris["Prelude.Types.foldr_Foldable__List"](nil)(nil)(func)(init)(input)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame9[5]["arg2"] = function(elem)
                              return function(acc)
                                  return function(func)
                                      return function(init)
                                          return function(input)
                                              return idris["Prelude.Types.foldl_Foldable__List"](nil)(nil)(func)(init)(input)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame9[6] = {}
                            __frame9[6]["tag"] = "0"
                            __frame9[6]["arg1"] = function(b)
                              return function(a)
                                  return function(func)
                                      return function(__arg149)
                                          return idris["Prelude.Types.map_Functor__List"](nil)(nil)(func)(__arg149)
                                        end
                                    end
                                end
                            end
                            __frame9[6]["arg2"] = __frame9[5]
                            __frame9[6]["arg3"] = function(b)
                              return function(a)
                                  return function(f)
                                      return function(__i_con0)
                                          return function(__arg1362)
                                              return function(__arg1364)
                                                  return idris["Prelude.Types.traverse_Traversable__List"](nil)(nil)(nil)(__i_con0)(__arg1362)(__arg1364)
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                            __frame9[7] = {}
                            __frame9[7]["tag"] = "0"
                            __frame9[7]["arg1"] = function(b)
                              return function(a)
                                  return function(func)
                                      return function(__arg149)
                                          return idris["Prelude.Types.map_Functor__Maybe"](nil)(nil)(func)(__arg149)
                                        end
                                    end
                                end
                            end
                            __frame9[7]["arg2"] = function(a)
                              return function(__arg482)
                                  return idris["Prelude.Types.pure_Applicative__Maybe"](nil)(__arg482)
                                end
                            end
                            __frame9[7]["arg3"] = function(b)
                              return function(a)
                                  return function(__arg483)
                                      return function(__arg485)
                                          return idris["Prelude.Types.<*>_Applicative__Maybe"](nil)(nil)(__arg483)(__arg485)
                                        end
                                    end
                                end
                            end
                            __frame9[8] = {}
                            __frame9[8]["tag"] = "0"
                            __frame9[8]["arg1"] = __frame9[6]
                            __frame9[8]["arg2"] = __frame9[7]
                            return idris["Plugin.case[5613]case block in case block in process"](__e0)(__arg0)(__e8)(__e7)(__bind0)(__act25)(__e6)(res)(idris["Prelude.Interfaces.sequence"](nil)(nil)(nil)(__frame9[8])(idris["Prelude.Types.map_Functor__List"](nil)(nil)(function(__eta1)
                                return idris["Plugin.validateNameAtEntry"](__eta1)
                              end)(__e6)))(__eta0)
                          end
                          __frame8[6] = __frame8[2][__frame8[1]["tag"]]
                          if __frame8[6] then
                            __frame8[7] = __frame8[6]()
                          else
                            __frame8[3] = {}
                            __frame8[3]["tag"] = "0"
                            __frame8[3]["arg1"] = function(b)
                              return function(a)
                                  return function(func)
                                      return function(__arg149)
                                          return function(__eta1)
                                              return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame8[3]["arg2"] = function(a)
                              return function(__arg482)
                                  return function(__eta1)
                                      return __arg482
                                    end
                                end
                            end
                            __frame8[3]["arg3"] = function(b)
                              return function(a)
                                  return function(__arg483)
                                      return function(__arg485)
                                          return function(__eta1)
                                              local __act17 = __arg483(__eta1)
                                              local __act16 = __arg485(__eta1)
                                              return __act17(__act16)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame8[4] = {}
                            __frame8[4]["tag"] = "0"
                            __frame8[4]["arg1"] = __frame8[3]
                            __frame8[4]["arg2"] = function(b)
                              return function(a)
                                  return function(__arg644)
                                      return function(__arg645)
                                          return function(__eta1)
                                              local __act26 = __arg644(__eta1)
                                              return __arg645(__act26)(__eta1)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame8[4]["arg3"] = function(a)
                              return function(__arg647)
                                  return function(__eta1)
                                      local __act51 = __arg647(__eta1)
                                      return __act51(__eta1)
                                    end
                                end
                            end
                            __frame8[5] = {}
                            __frame8[5]["tag"] = "0"
                            __frame8[5]["arg1"] = __frame8[4]
                            __frame8[5]["arg2"] = function(a)
                              return function(__arg6794)
                                  return __arg6794
                                end
                            end
                            __frame8[7] = idris["Foreign.nvimCommand"](nil)(__frame8[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to NameAt")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                          end
                          return __frame8[7]
                        end
                        __frame7[6] = __frame7[2][__frame7[1]["tag"]]
                        if __frame7[6] then
                          __frame7[7] = __frame7[6]()
                        else
                          __frame7[3] = {}
                          __frame7[3]["tag"] = "0"
                          __frame7[3]["arg1"] = function(b)
                            return function(a)
                                return function(func)
                                    return function(__arg149)
                                        return function(__eta1)
                                            return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[3]["arg2"] = function(a)
                            return function(__arg482)
                                return function(__eta1)
                                    return __arg482
                                  end
                              end
                          end
                          __frame7[3]["arg3"] = function(b)
                            return function(a)
                                return function(__arg483)
                                    return function(__arg485)
                                        return function(__eta1)
                                            local __act17 = __arg483(__eta1)
                                            local __act16 = __arg485(__eta1)
                                            return __act17(__act16)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[4] = {}
                          __frame7[4]["tag"] = "0"
                          __frame7[4]["arg1"] = __frame7[3]
                          __frame7[4]["arg2"] = function(b)
                            return function(a)
                                return function(__arg644)
                                    return function(__arg645)
                                        return function(__eta1)
                                            local __act26 = __arg644(__eta1)
                                            return __arg645(__act26)(__eta1)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[4]["arg3"] = function(a)
                            return function(__arg647)
                                return function(__eta1)
                                    local __act51 = __arg647(__eta1)
                                    return __act51(__eta1)
                                  end
                              end
                          end
                          __frame7[5] = {}
                          __frame7[5]["tag"] = "0"
                          __frame7[5]["arg1"] = __frame7[4]
                          __frame7[5]["arg2"] = function(a)
                            return function(__arg6794)
                                return __arg6794
                              end
                          end
                          __frame7[7] = idris["Foreign.nvimCommand"](nil)(__frame7[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to NameAt")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                        end
                        return __frame7[7]
                      end
                      __frame6[6] = __frame6[2][__frame6[1]["tag"]]
                      if __frame6[6] then
                        __frame6[7] = __frame6[6]()
                      else
                        __frame6[3] = {}
                        __frame6[3]["tag"] = "0"
                        __frame6[3]["arg1"] = function(b)
                          return function(a)
                              return function(func)
                                  return function(__arg149)
                                      return function(__eta1)
                                          return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[3]["arg2"] = function(a)
                          return function(__arg482)
                              return function(__eta1)
                                  return __arg482
                                end
                            end
                        end
                        __frame6[3]["arg3"] = function(b)
                          return function(a)
                              return function(__arg483)
                                  return function(__arg485)
                                      return function(__eta1)
                                          local __act17 = __arg483(__eta1)
                                          local __act16 = __arg485(__eta1)
                                          return __act17(__act16)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[4] = {}
                        __frame6[4]["tag"] = "0"
                        __frame6[4]["arg1"] = __frame6[3]
                        __frame6[4]["arg2"] = function(b)
                          return function(a)
                              return function(__arg644)
                                  return function(__arg645)
                                      return function(__eta1)
                                          local __act26 = __arg644(__eta1)
                                          return __arg645(__act26)(__eta1)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[4]["arg3"] = function(a)
                          return function(__arg647)
                              return function(__eta1)
                                  local __act51 = __arg647(__eta1)
                                  return __act51(__eta1)
                                end
                            end
                        end
                        __frame6[5] = {}
                        __frame6[5]["tag"] = "0"
                        __frame6[5]["arg1"] = __frame6[4]
                        __frame6[5]["arg2"] = function(a)
                          return function(__arg6794)
                              return __arg6794
                            end
                        end
                        __frame6[7] = idris["Foreign.nvimCommand"](nil)(__frame6[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to NameAt")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                      end
                      return __frame6[7]
                    end
                    __frame5[8] = __frame5[4][__frame5[3]["tag"]]
                    if __frame5[8] then
                      __frame5[9] = __frame5[8]()
                    else
                      __frame5[5] = {}
                      __frame5[5]["tag"] = "0"
                      __frame5[5]["arg1"] = function(b)
                        return function(a)
                            return function(func)
                                return function(__arg149)
                                    return function(__eta1)
                                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[5]["arg2"] = function(a)
                        return function(__arg482)
                            return function(__eta1)
                                return __arg482
                              end
                          end
                      end
                      __frame5[5]["arg3"] = function(b)
                        return function(a)
                            return function(__arg483)
                                return function(__arg485)
                                    return function(__eta1)
                                        local __act17 = __arg483(__eta1)
                                        local __act16 = __arg485(__eta1)
                                        return __act17(__act16)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[6] = {}
                      __frame5[6]["tag"] = "0"
                      __frame5[6]["arg1"] = __frame5[5]
                      __frame5[6]["arg2"] = function(b)
                        return function(a)
                            return function(__arg644)
                                return function(__arg645)
                                    return function(__eta1)
                                        local __act26 = __arg644(__eta1)
                                        return __arg645(__act26)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[6]["arg3"] = function(a)
                        return function(__arg647)
                            return function(__eta1)
                                local __act51 = __arg647(__eta1)
                                return __act51(__eta1)
                              end
                          end
                      end
                      __frame5[7] = {}
                      __frame5[7]["tag"] = "0"
                      __frame5[7]["arg1"] = __frame5[6]
                      __frame5[7]["arg2"] = function(a)
                        return function(__arg6794)
                            return __arg6794
                          end
                      end
                      __frame5[9] = idris["Foreign.nvimCommand"](nil)(__frame5[7])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to NameAt")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                    end
                    return __frame5[9]
                  end
                  __frame4[2]["14"] = function()
                    local __frame5 = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    __frame5[1] = __e1
                    __frame5[2] = {
                      nil
                    }
                    __frame5[2]["0"] = function()
                      local __frame6 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      local __e3 = __frame5[1]["arg1"]
                      __frame6[1] = __e3
                      __frame6[2] = {
                        nil
                      }
                      __frame6[2]["1"] = function()
                        local __frame7 = {
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        local __e5 = __frame6[1]["arg1"]
                        __frame7[1] = __e5
                        __frame7[2] = {
                          nil
                        }
                        __frame7[2]["1"] = function()
                          local __e6 = __frame7[1]["arg1"]
                          local __act25 = idris["Plugin.currenttime"](__eta0)
                          local __act25 = idris["Plugin.writeToBuffer"](1)(idris["Prelude.Types.Strings.++"]("-- ")(idris["Prelude.Types.Strings.++"](__act25)(idris["Prelude.Types.Strings.++"]("\n")(__e6))))(__eta0)
                          return idris["Foreign.deleteCmdInHistory"](__e0)(__eta0)
                        end
                        __frame7[6] = __frame7[2][__frame7[1]["tag"]]
                        if __frame7[6] then
                          __frame7[7] = __frame7[6]()
                        else
                          __frame7[3] = {}
                          __frame7[3]["tag"] = "0"
                          __frame7[3]["arg1"] = function(b)
                            return function(a)
                                return function(func)
                                    return function(__arg149)
                                        return function(__eta1)
                                            return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[3]["arg2"] = function(a)
                            return function(__arg482)
                                return function(__eta1)
                                    return __arg482
                                  end
                              end
                          end
                          __frame7[3]["arg3"] = function(b)
                            return function(a)
                                return function(__arg483)
                                    return function(__arg485)
                                        return function(__eta1)
                                            local __act17 = __arg483(__eta1)
                                            local __act16 = __arg485(__eta1)
                                            return __act17(__act16)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[4] = {}
                          __frame7[4]["tag"] = "0"
                          __frame7[4]["arg1"] = __frame7[3]
                          __frame7[4]["arg2"] = function(b)
                            return function(a)
                                return function(__arg644)
                                    return function(__arg645)
                                        return function(__eta1)
                                            local __act25 = __arg644(__eta1)
                                            return __arg645(__act25)(__eta1)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[4]["arg3"] = function(a)
                            return function(__arg647)
                                return function(__eta1)
                                    local __act51 = __arg647(__eta1)
                                    return __act51(__eta1)
                                  end
                              end
                          end
                          __frame7[5] = {}
                          __frame7[5]["tag"] = "0"
                          __frame7[5]["arg1"] = __frame7[4]
                          __frame7[5]["arg2"] = function(a)
                            return function(__arg6794)
                                return __arg6794
                              end
                          end
                          __frame7[7] = idris["Foreign.nvimCommand"](nil)(__frame7[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to DocsFor")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                        end
                        return __frame7[7]
                      end
                      __frame6[6] = __frame6[2][__frame6[1]["tag"]]
                      if __frame6[6] then
                        __frame6[7] = __frame6[6]()
                      else
                        __frame6[3] = {}
                        __frame6[3]["tag"] = "0"
                        __frame6[3]["arg1"] = function(b)
                          return function(a)
                              return function(func)
                                  return function(__arg149)
                                      return function(__eta1)
                                          return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[3]["arg2"] = function(a)
                          return function(__arg482)
                              return function(__eta1)
                                  return __arg482
                                end
                            end
                        end
                        __frame6[3]["arg3"] = function(b)
                          return function(a)
                              return function(__arg483)
                                  return function(__arg485)
                                      return function(__eta1)
                                          local __act17 = __arg483(__eta1)
                                          local __act16 = __arg485(__eta1)
                                          return __act17(__act16)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[4] = {}
                        __frame6[4]["tag"] = "0"
                        __frame6[4]["arg1"] = __frame6[3]
                        __frame6[4]["arg2"] = function(b)
                          return function(a)
                              return function(__arg644)
                                  return function(__arg645)
                                      return function(__eta1)
                                          local __act25 = __arg644(__eta1)
                                          return __arg645(__act25)(__eta1)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[4]["arg3"] = function(a)
                          return function(__arg647)
                              return function(__eta1)
                                  local __act51 = __arg647(__eta1)
                                  return __act51(__eta1)
                                end
                            end
                        end
                        __frame6[5] = {}
                        __frame6[5]["tag"] = "0"
                        __frame6[5]["arg1"] = __frame6[4]
                        __frame6[5]["arg2"] = function(a)
                          return function(__arg6794)
                              return __arg6794
                            end
                        end
                        __frame6[7] = idris["Foreign.nvimCommand"](nil)(__frame6[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to DocsFor")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                      end
                      return __frame6[7]
                    end
                    __frame5[6] = __frame5[2][__frame5[1]["tag"]]
                    if __frame5[6] then
                      __frame5[7] = __frame5[6]()
                    else
                      __frame5[3] = {}
                      __frame5[3]["tag"] = "0"
                      __frame5[3]["arg1"] = function(b)
                        return function(a)
                            return function(func)
                                return function(__arg149)
                                    return function(__eta1)
                                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[3]["arg2"] = function(a)
                        return function(__arg482)
                            return function(__eta1)
                                return __arg482
                              end
                          end
                      end
                      __frame5[3]["arg3"] = function(b)
                        return function(a)
                            return function(__arg483)
                                return function(__arg485)
                                    return function(__eta1)
                                        local __act17 = __arg483(__eta1)
                                        local __act16 = __arg485(__eta1)
                                        return __act17(__act16)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[4] = {}
                      __frame5[4]["tag"] = "0"
                      __frame5[4]["arg1"] = __frame5[3]
                      __frame5[4]["arg2"] = function(b)
                        return function(a)
                            return function(__arg644)
                                return function(__arg645)
                                    return function(__eta1)
                                        local __act25 = __arg644(__eta1)
                                        return __arg645(__act25)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[4]["arg3"] = function(a)
                        return function(__arg647)
                            return function(__eta1)
                                local __act51 = __arg647(__eta1)
                                return __act51(__eta1)
                              end
                          end
                      end
                      __frame5[5] = {}
                      __frame5[5]["tag"] = "0"
                      __frame5[5]["arg1"] = __frame5[4]
                      __frame5[5]["arg2"] = function(a)
                        return function(__arg6794)
                            return __arg6794
                          end
                      end
                      __frame5[7] = idris["Foreign.nvimCommand"](nil)(__frame5[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to DocsFor")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                    end
                    return __frame5[7]
                  end
                  __frame4[2]["4"] = function()
                    local __frame5 = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    local __e11 = __frame4[1]["arg1"]
                    __frame5[1] = __e1
                    __frame5[2] = {
                      nil
                    }
                    __frame5[2]["0"] = function()
                      local __frame6 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      local __e3 = __frame5[1]["arg1"]
                      __frame6[1] = __e3
                      __frame6[2] = {
                        nil
                      }
                      __frame6[2]["1"] = function()
                        local __frame7 = {
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        local __e5 = __frame6[1]["arg1"]
                        local __e4 = __frame6[1]["arg2"]
                        __frame7[1] = __e5
                        __frame7[2] = {
                          nil
                        }
                        __frame7[2]["1"] = function()
                          local __frame8 = {
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          local __e6 = __frame7[1]["arg1"]
                          __frame8[1] = __e4
                          __frame8[2] = {
                            nil
                          }
                          __frame8[2]["0"] = function()
                            local __act25 = idris["Plugin.deleteLine"](idris["Prelude.Types.cast_Cast__Integer_Int"](__e11))(__eta0)
                            local __act26 = idris["Plugin.appendLines"](1)(1)(idris["Prelude.Num.-_Neg__Int"](idris["Prelude.Types.cast_Cast__Integer_Int"](__e11))(bigint.tonumber(bigint:new("1"))))(__e6)(__eta0)
                            return idris["Foreign.deleteCmdInHistory"](__e0)(__eta0)
                          end
                          __frame8[6] = __frame8[2][__frame8[1]["tag"]]
                          if __frame8[6] then
                            __frame8[7] = __frame8[6]()
                          else
                            __frame8[3] = {}
                            __frame8[3]["tag"] = "0"
                            __frame8[3]["arg1"] = function(b)
                              return function(a)
                                  return function(func)
                                      return function(__arg149)
                                          return function(__eta1)
                                              return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame8[3]["arg2"] = function(a)
                              return function(__arg482)
                                  return function(__eta1)
                                      return __arg482
                                    end
                                end
                            end
                            __frame8[3]["arg3"] = function(b)
                              return function(a)
                                  return function(__arg483)
                                      return function(__arg485)
                                          return function(__eta1)
                                              local __act17 = __arg483(__eta1)
                                              local __act16 = __arg485(__eta1)
                                              return __act17(__act16)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame8[4] = {}
                            __frame8[4]["tag"] = "0"
                            __frame8[4]["arg1"] = __frame8[3]
                            __frame8[4]["arg2"] = function(b)
                              return function(a)
                                  return function(__arg644)
                                      return function(__arg645)
                                          return function(__eta1)
                                              local __act25 = __arg644(__eta1)
                                              return __arg645(__act25)(__eta1)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame8[4]["arg3"] = function(a)
                              return function(__arg647)
                                  return function(__eta1)
                                      local __act51 = __arg647(__eta1)
                                      return __act51(__eta1)
                                    end
                                end
                            end
                            __frame8[5] = {}
                            __frame8[5]["tag"] = "0"
                            __frame8[5]["arg1"] = __frame8[4]
                            __frame8[5]["arg2"] = function(a)
                              return function(__arg6794)
                                  return __arg6794
                                end
                            end
                            __frame8[7] = idris["Foreign.nvimCommand"](nil)(__frame8[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to CaseSplit")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                          end
                          return __frame8[7]
                        end
                        __frame7[6] = __frame7[2][__frame7[1]["tag"]]
                        if __frame7[6] then
                          __frame7[7] = __frame7[6]()
                        else
                          __frame7[3] = {}
                          __frame7[3]["tag"] = "0"
                          __frame7[3]["arg1"] = function(b)
                            return function(a)
                                return function(func)
                                    return function(__arg149)
                                        return function(__eta1)
                                            return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[3]["arg2"] = function(a)
                            return function(__arg482)
                                return function(__eta1)
                                    return __arg482
                                  end
                              end
                          end
                          __frame7[3]["arg3"] = function(b)
                            return function(a)
                                return function(__arg483)
                                    return function(__arg485)
                                        return function(__eta1)
                                            local __act17 = __arg483(__eta1)
                                            local __act16 = __arg485(__eta1)
                                            return __act17(__act16)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[4] = {}
                          __frame7[4]["tag"] = "0"
                          __frame7[4]["arg1"] = __frame7[3]
                          __frame7[4]["arg2"] = function(b)
                            return function(a)
                                return function(__arg644)
                                    return function(__arg645)
                                        return function(__eta1)
                                            local __act25 = __arg644(__eta1)
                                            return __arg645(__act25)(__eta1)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[4]["arg3"] = function(a)
                            return function(__arg647)
                                return function(__eta1)
                                    local __act51 = __arg647(__eta1)
                                    return __act51(__eta1)
                                  end
                              end
                          end
                          __frame7[5] = {}
                          __frame7[5]["tag"] = "0"
                          __frame7[5]["arg1"] = __frame7[4]
                          __frame7[5]["arg2"] = function(a)
                            return function(__arg6794)
                                return __arg6794
                              end
                          end
                          __frame7[7] = idris["Foreign.nvimCommand"](nil)(__frame7[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to CaseSplit")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                        end
                        return __frame7[7]
                      end
                      __frame6[6] = __frame6[2][__frame6[1]["tag"]]
                      if __frame6[6] then
                        __frame6[7] = __frame6[6]()
                      else
                        __frame6[3] = {}
                        __frame6[3]["tag"] = "0"
                        __frame6[3]["arg1"] = function(b)
                          return function(a)
                              return function(func)
                                  return function(__arg149)
                                      return function(__eta1)
                                          return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[3]["arg2"] = function(a)
                          return function(__arg482)
                              return function(__eta1)
                                  return __arg482
                                end
                            end
                        end
                        __frame6[3]["arg3"] = function(b)
                          return function(a)
                              return function(__arg483)
                                  return function(__arg485)
                                      return function(__eta1)
                                          local __act17 = __arg483(__eta1)
                                          local __act16 = __arg485(__eta1)
                                          return __act17(__act16)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[4] = {}
                        __frame6[4]["tag"] = "0"
                        __frame6[4]["arg1"] = __frame6[3]
                        __frame6[4]["arg2"] = function(b)
                          return function(a)
                              return function(__arg644)
                                  return function(__arg645)
                                      return function(__eta1)
                                          local __act25 = __arg644(__eta1)
                                          return __arg645(__act25)(__eta1)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[4]["arg3"] = function(a)
                          return function(__arg647)
                              return function(__eta1)
                                  local __act51 = __arg647(__eta1)
                                  return __act51(__eta1)
                                end
                            end
                        end
                        __frame6[5] = {}
                        __frame6[5]["tag"] = "0"
                        __frame6[5]["arg1"] = __frame6[4]
                        __frame6[5]["arg2"] = function(a)
                          return function(__arg6794)
                              return __arg6794
                            end
                        end
                        __frame6[7] = idris["Foreign.nvimCommand"](nil)(__frame6[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to CaseSplit")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                      end
                      return __frame6[7]
                    end
                    __frame5[6] = __frame5[2][__frame5[1]["tag"]]
                    if __frame5[6] then
                      __frame5[7] = __frame5[6]()
                    else
                      __frame5[3] = {}
                      __frame5[3]["tag"] = "0"
                      __frame5[3]["arg1"] = function(b)
                        return function(a)
                            return function(func)
                                return function(__arg149)
                                    return function(__eta1)
                                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[3]["arg2"] = function(a)
                        return function(__arg482)
                            return function(__eta1)
                                return __arg482
                              end
                          end
                      end
                      __frame5[3]["arg3"] = function(b)
                        return function(a)
                            return function(__arg483)
                                return function(__arg485)
                                    return function(__eta1)
                                        local __act17 = __arg483(__eta1)
                                        local __act16 = __arg485(__eta1)
                                        return __act17(__act16)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[4] = {}
                      __frame5[4]["tag"] = "0"
                      __frame5[4]["arg1"] = __frame5[3]
                      __frame5[4]["arg2"] = function(b)
                        return function(a)
                            return function(__arg644)
                                return function(__arg645)
                                    return function(__eta1)
                                        local __act25 = __arg644(__eta1)
                                        return __arg645(__act25)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[4]["arg3"] = function(a)
                        return function(__arg647)
                            return function(__eta1)
                                local __act51 = __arg647(__eta1)
                                return __act51(__eta1)
                              end
                          end
                      end
                      __frame5[5] = {}
                      __frame5[5]["tag"] = "0"
                      __frame5[5]["arg1"] = __frame5[4]
                      __frame5[5]["arg2"] = function(a)
                        return function(__arg6794)
                            return __arg6794
                          end
                      end
                      __frame5[7] = idris["Foreign.nvimCommand"](nil)(__frame5[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to CaseSplit")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                    end
                    return __frame5[7]
                  end
                  __frame4[2]["5"] = function()
                    local __frame5 = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    local __e14 = __frame4[1]["arg1"]
                    __frame5[1] = __e1
                    __frame5[2] = {
                      nil
                    }
                    __frame5[2]["0"] = function()
                      local __frame6 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      local __e3 = __frame5[1]["arg1"]
                      __frame6[1] = __e3
                      __frame6[2] = {
                        nil
                      }
                      __frame6[2]["1"] = function()
                        local __frame7 = {
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        local __e5 = __frame6[1]["arg1"]
                        local __e4 = __frame6[1]["arg2"]
                        __frame7[1] = __e5
                        __frame7[2] = {
                          nil
                        }
                        __frame7[2]["1"] = function()
                          local __frame8 = {
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          local __e6 = __frame7[1]["arg1"]
                          __frame8[1] = __e4
                          __frame8[2] = {
                            nil
                          }
                          __frame8[2]["0"] = function()
                            local __act25 = idris["Plugin.appendLines"](1)(1)(idris["Prelude.Types.cast_Cast__Integer_Int"](__e14))(__e6)(__eta0)
                            return idris["Foreign.deleteCmdInHistory"](__e0)(__eta0)
                          end
                          __frame8[6] = __frame8[2][__frame8[1]["tag"]]
                          if __frame8[6] then
                            __frame8[7] = __frame8[6]()
                          else
                            __frame8[3] = {}
                            __frame8[3]["tag"] = "0"
                            __frame8[3]["arg1"] = function(b)
                              return function(a)
                                  return function(func)
                                      return function(__arg149)
                                          return function(__eta1)
                                              return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame8[3]["arg2"] = function(a)
                              return function(__arg482)
                                  return function(__eta1)
                                      return __arg482
                                    end
                                end
                            end
                            __frame8[3]["arg3"] = function(b)
                              return function(a)
                                  return function(__arg483)
                                      return function(__arg485)
                                          return function(__eta1)
                                              local __act17 = __arg483(__eta1)
                                              local __act16 = __arg485(__eta1)
                                              return __act17(__act16)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame8[4] = {}
                            __frame8[4]["tag"] = "0"
                            __frame8[4]["arg1"] = __frame8[3]
                            __frame8[4]["arg2"] = function(b)
                              return function(a)
                                  return function(__arg644)
                                      return function(__arg645)
                                          return function(__eta1)
                                              local __act25 = __arg644(__eta1)
                                              return __arg645(__act25)(__eta1)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame8[4]["arg3"] = function(a)
                              return function(__arg647)
                                  return function(__eta1)
                                      local __act51 = __arg647(__eta1)
                                      return __act51(__eta1)
                                    end
                                end
                            end
                            __frame8[5] = {}
                            __frame8[5]["tag"] = "0"
                            __frame8[5]["arg1"] = __frame8[4]
                            __frame8[5]["arg2"] = function(a)
                              return function(__arg6794)
                                  return __arg6794
                                end
                            end
                            __frame8[7] = idris["Foreign.nvimCommand"](nil)(__frame8[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to AddClause")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                          end
                          return __frame8[7]
                        end
                        __frame7[6] = __frame7[2][__frame7[1]["tag"]]
                        if __frame7[6] then
                          __frame7[7] = __frame7[6]()
                        else
                          __frame7[3] = {}
                          __frame7[3]["tag"] = "0"
                          __frame7[3]["arg1"] = function(b)
                            return function(a)
                                return function(func)
                                    return function(__arg149)
                                        return function(__eta1)
                                            return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[3]["arg2"] = function(a)
                            return function(__arg482)
                                return function(__eta1)
                                    return __arg482
                                  end
                              end
                          end
                          __frame7[3]["arg3"] = function(b)
                            return function(a)
                                return function(__arg483)
                                    return function(__arg485)
                                        return function(__eta1)
                                            local __act17 = __arg483(__eta1)
                                            local __act16 = __arg485(__eta1)
                                            return __act17(__act16)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[4] = {}
                          __frame7[4]["tag"] = "0"
                          __frame7[4]["arg1"] = __frame7[3]
                          __frame7[4]["arg2"] = function(b)
                            return function(a)
                                return function(__arg644)
                                    return function(__arg645)
                                        return function(__eta1)
                                            local __act25 = __arg644(__eta1)
                                            return __arg645(__act25)(__eta1)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[4]["arg3"] = function(a)
                            return function(__arg647)
                                return function(__eta1)
                                    local __act51 = __arg647(__eta1)
                                    return __act51(__eta1)
                                  end
                              end
                          end
                          __frame7[5] = {}
                          __frame7[5]["tag"] = "0"
                          __frame7[5]["arg1"] = __frame7[4]
                          __frame7[5]["arg2"] = function(a)
                            return function(__arg6794)
                                return __arg6794
                              end
                          end
                          __frame7[7] = idris["Foreign.nvimCommand"](nil)(__frame7[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to AddClause")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                        end
                        return __frame7[7]
                      end
                      __frame6[6] = __frame6[2][__frame6[1]["tag"]]
                      if __frame6[6] then
                        __frame6[7] = __frame6[6]()
                      else
                        __frame6[3] = {}
                        __frame6[3]["tag"] = "0"
                        __frame6[3]["arg1"] = function(b)
                          return function(a)
                              return function(func)
                                  return function(__arg149)
                                      return function(__eta1)
                                          return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[3]["arg2"] = function(a)
                          return function(__arg482)
                              return function(__eta1)
                                  return __arg482
                                end
                            end
                        end
                        __frame6[3]["arg3"] = function(b)
                          return function(a)
                              return function(__arg483)
                                  return function(__arg485)
                                      return function(__eta1)
                                          local __act17 = __arg483(__eta1)
                                          local __act16 = __arg485(__eta1)
                                          return __act17(__act16)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[4] = {}
                        __frame6[4]["tag"] = "0"
                        __frame6[4]["arg1"] = __frame6[3]
                        __frame6[4]["arg2"] = function(b)
                          return function(a)
                              return function(__arg644)
                                  return function(__arg645)
                                      return function(__eta1)
                                          local __act25 = __arg644(__eta1)
                                          return __arg645(__act25)(__eta1)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[4]["arg3"] = function(a)
                          return function(__arg647)
                              return function(__eta1)
                                  local __act51 = __arg647(__eta1)
                                  return __act51(__eta1)
                                end
                            end
                        end
                        __frame6[5] = {}
                        __frame6[5]["tag"] = "0"
                        __frame6[5]["arg1"] = __frame6[4]
                        __frame6[5]["arg2"] = function(a)
                          return function(__arg6794)
                              return __arg6794
                            end
                        end
                        __frame6[7] = idris["Foreign.nvimCommand"](nil)(__frame6[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to AddClause")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                      end
                      return __frame6[7]
                    end
                    __frame5[6] = __frame5[2][__frame5[1]["tag"]]
                    if __frame5[6] then
                      __frame5[7] = __frame5[6]()
                    else
                      __frame5[3] = {}
                      __frame5[3]["tag"] = "0"
                      __frame5[3]["arg1"] = function(b)
                        return function(a)
                            return function(func)
                                return function(__arg149)
                                    return function(__eta1)
                                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[3]["arg2"] = function(a)
                        return function(__arg482)
                            return function(__eta1)
                                return __arg482
                              end
                          end
                      end
                      __frame5[3]["arg3"] = function(b)
                        return function(a)
                            return function(__arg483)
                                return function(__arg485)
                                    return function(__eta1)
                                        local __act17 = __arg483(__eta1)
                                        local __act16 = __arg485(__eta1)
                                        return __act17(__act16)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[4] = {}
                      __frame5[4]["tag"] = "0"
                      __frame5[4]["arg1"] = __frame5[3]
                      __frame5[4]["arg2"] = function(b)
                        return function(a)
                            return function(__arg644)
                                return function(__arg645)
                                    return function(__eta1)
                                        local __act25 = __arg644(__eta1)
                                        return __arg645(__act25)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[4]["arg3"] = function(a)
                        return function(__arg647)
                            return function(__eta1)
                                local __act51 = __arg647(__eta1)
                                return __act51(__eta1)
                              end
                          end
                      end
                      __frame5[5] = {}
                      __frame5[5]["tag"] = "0"
                      __frame5[5]["arg1"] = __frame5[4]
                      __frame5[5]["arg2"] = function(a)
                        return function(__arg6794)
                            return __arg6794
                          end
                      end
                      __frame5[7] = idris["Foreign.nvimCommand"](nil)(__frame5[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to AddClause")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                    end
                    return __frame5[7]
                  end
                  __frame4[2]["7"] = function()
                    local __frame5 = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    local __e17 = __frame4[1]["arg2"]
                    __frame5[1] = __e1
                    __frame5[2] = {
                      nil
                    }
                    __frame5[2]["0"] = function()
                      local __frame6 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      local __e3 = __frame5[1]["arg1"]
                      __frame6[1] = __e3
                      __frame6[2] = {
                        nil
                      }
                      __frame6[2]["1"] = function()
                        local __frame7 = {
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        local __e5 = __frame6[1]["arg1"]
                        local __e4 = __frame6[1]["arg2"]
                        __frame7[1] = __e5
                        __frame7[2] = {
                          nil
                        }
                        __frame7[2]["1"] = function()
                          local __frame8 = {
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          local __e6 = __frame7[1]["arg1"]
                          __frame8[1] = __e4
                          __frame8[2] = {
                            nil
                          }
                          __frame8[2]["0"] = function()
                            local __frame9 = {
                              nil,
                              nil,
                              nil
                            }
                            __frame9[1] = {}
                            __frame9[1]["tag"] = "0"
                            __frame9[1]["arg1"] = function(b)
                              return function(a)
                                  return function(func)
                                      return function(__arg149)
                                          return function(__eta1)
                                              return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame9[1]["arg2"] = function(a)
                              return function(__arg482)
                                  return function(__eta1)
                                      return __arg482
                                    end
                                end
                            end
                            __frame9[1]["arg3"] = function(b)
                              return function(a)
                                  return function(__arg483)
                                      return function(__arg485)
                                          return function(__eta1)
                                              local __act17 = __arg483(__eta1)
                                              local __act16 = __arg485(__eta1)
                                              return __act17(__act16)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame9[2] = {}
                            __frame9[2]["tag"] = "0"
                            __frame9[2]["arg1"] = __frame9[1]
                            __frame9[2]["arg2"] = function(b)
                              return function(a)
                                  return function(__arg644)
                                      return function(__arg645)
                                          return function(__eta1)
                                              local __act25 = __arg644(__eta1)
                                              return __arg645(__act25)(__eta1)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame9[2]["arg3"] = function(a)
                              return function(__arg647)
                                  return function(__eta1)
                                      local __act51 = __arg647(__eta1)
                                      return __act51(__eta1)
                                    end
                                end
                            end
                            __frame9[3] = {}
                            __frame9[3]["tag"] = "0"
                            __frame9[3]["arg1"] = __frame9[2]
                            __frame9[3]["arg2"] = function(a)
                              return function(__arg6794)
                                  return __arg6794
                                end
                            end
                            local __act25 = idris["Foreign.nvimCommand"](nil)(__frame9[3])(idris["Prelude.Types.Strings.++"]("s/")(idris["Prelude.Types.Strings.++"](idris["Prelude.Types.strCons"]("?")(__e17))(idris["Prelude.Types.Strings.++"]("/")(idris["Prelude.Types.Strings.++"](__e6)("/")))))(__eta0)
                            local __act26 = idris["Foreign.putLastSearch"](__e6)(__eta0)
                            return idris["Foreign.deleteCmdInHistory"](__e0)(__eta0)
                          end
                          __frame8[6] = __frame8[2][__frame8[1]["tag"]]
                          if __frame8[6] then
                            __frame8[7] = __frame8[6]()
                          else
                            __frame8[3] = {}
                            __frame8[3]["tag"] = "0"
                            __frame8[3]["arg1"] = function(b)
                              return function(a)
                                  return function(func)
                                      return function(__arg149)
                                          return function(__eta1)
                                              return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame8[3]["arg2"] = function(a)
                              return function(__arg482)
                                  return function(__eta1)
                                      return __arg482
                                    end
                                end
                            end
                            __frame8[3]["arg3"] = function(b)
                              return function(a)
                                  return function(__arg483)
                                      return function(__arg485)
                                          return function(__eta1)
                                              local __act17 = __arg483(__eta1)
                                              local __act16 = __arg485(__eta1)
                                              return __act17(__act16)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame8[4] = {}
                            __frame8[4]["tag"] = "0"
                            __frame8[4]["arg1"] = __frame8[3]
                            __frame8[4]["arg2"] = function(b)
                              return function(a)
                                  return function(__arg644)
                                      return function(__arg645)
                                          return function(__eta1)
                                              local __act25 = __arg644(__eta1)
                                              return __arg645(__act25)(__eta1)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame8[4]["arg3"] = function(a)
                              return function(__arg647)
                                  return function(__eta1)
                                      local __act51 = __arg647(__eta1)
                                      return __act51(__eta1)
                                    end
                                end
                            end
                            __frame8[5] = {}
                            __frame8[5]["tag"] = "0"
                            __frame8[5]["arg1"] = __frame8[4]
                            __frame8[5]["arg2"] = function(a)
                              return function(__arg6794)
                                  return __arg6794
                                end
                            end
                            __frame8[7] = idris["Foreign.nvimCommand"](nil)(__frame8[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to ExprSearch")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                          end
                          return __frame8[7]
                        end
                        __frame7[6] = __frame7[2][__frame7[1]["tag"]]
                        if __frame7[6] then
                          __frame7[7] = __frame7[6]()
                        else
                          __frame7[3] = {}
                          __frame7[3]["tag"] = "0"
                          __frame7[3]["arg1"] = function(b)
                            return function(a)
                                return function(func)
                                    return function(__arg149)
                                        return function(__eta1)
                                            return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[3]["arg2"] = function(a)
                            return function(__arg482)
                                return function(__eta1)
                                    return __arg482
                                  end
                              end
                          end
                          __frame7[3]["arg3"] = function(b)
                            return function(a)
                                return function(__arg483)
                                    return function(__arg485)
                                        return function(__eta1)
                                            local __act17 = __arg483(__eta1)
                                            local __act16 = __arg485(__eta1)
                                            return __act17(__act16)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[4] = {}
                          __frame7[4]["tag"] = "0"
                          __frame7[4]["arg1"] = __frame7[3]
                          __frame7[4]["arg2"] = function(b)
                            return function(a)
                                return function(__arg644)
                                    return function(__arg645)
                                        return function(__eta1)
                                            local __act25 = __arg644(__eta1)
                                            return __arg645(__act25)(__eta1)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[4]["arg3"] = function(a)
                            return function(__arg647)
                                return function(__eta1)
                                    local __act51 = __arg647(__eta1)
                                    return __act51(__eta1)
                                  end
                              end
                          end
                          __frame7[5] = {}
                          __frame7[5]["tag"] = "0"
                          __frame7[5]["arg1"] = __frame7[4]
                          __frame7[5]["arg2"] = function(a)
                            return function(__arg6794)
                                return __arg6794
                              end
                          end
                          __frame7[7] = idris["Foreign.nvimCommand"](nil)(__frame7[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to ExprSearch")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                        end
                        return __frame7[7]
                      end
                      __frame6[6] = __frame6[2][__frame6[1]["tag"]]
                      if __frame6[6] then
                        __frame6[7] = __frame6[6]()
                      else
                        __frame6[3] = {}
                        __frame6[3]["tag"] = "0"
                        __frame6[3]["arg1"] = function(b)
                          return function(a)
                              return function(func)
                                  return function(__arg149)
                                      return function(__eta1)
                                          return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[3]["arg2"] = function(a)
                          return function(__arg482)
                              return function(__eta1)
                                  return __arg482
                                end
                            end
                        end
                        __frame6[3]["arg3"] = function(b)
                          return function(a)
                              return function(__arg483)
                                  return function(__arg485)
                                      return function(__eta1)
                                          local __act17 = __arg483(__eta1)
                                          local __act16 = __arg485(__eta1)
                                          return __act17(__act16)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[4] = {}
                        __frame6[4]["tag"] = "0"
                        __frame6[4]["arg1"] = __frame6[3]
                        __frame6[4]["arg2"] = function(b)
                          return function(a)
                              return function(__arg644)
                                  return function(__arg645)
                                      return function(__eta1)
                                          local __act25 = __arg644(__eta1)
                                          return __arg645(__act25)(__eta1)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[4]["arg3"] = function(a)
                          return function(__arg647)
                              return function(__eta1)
                                  local __act51 = __arg647(__eta1)
                                  return __act51(__eta1)
                                end
                            end
                        end
                        __frame6[5] = {}
                        __frame6[5]["tag"] = "0"
                        __frame6[5]["arg1"] = __frame6[4]
                        __frame6[5]["arg2"] = function(a)
                          return function(__arg6794)
                              return __arg6794
                            end
                        end
                        __frame6[7] = idris["Foreign.nvimCommand"](nil)(__frame6[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to ExprSearch")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                      end
                      return __frame6[7]
                    end
                    __frame5[6] = __frame5[2][__frame5[1]["tag"]]
                    if __frame5[6] then
                      __frame5[7] = __frame5[6]()
                    else
                      __frame5[3] = {}
                      __frame5[3]["tag"] = "0"
                      __frame5[3]["arg1"] = function(b)
                        return function(a)
                            return function(func)
                                return function(__arg149)
                                    return function(__eta1)
                                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[3]["arg2"] = function(a)
                        return function(__arg482)
                            return function(__eta1)
                                return __arg482
                              end
                          end
                      end
                      __frame5[3]["arg3"] = function(b)
                        return function(a)
                            return function(__arg483)
                                return function(__arg485)
                                    return function(__eta1)
                                        local __act17 = __arg483(__eta1)
                                        local __act16 = __arg485(__eta1)
                                        return __act17(__act16)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[4] = {}
                      __frame5[4]["tag"] = "0"
                      __frame5[4]["arg1"] = __frame5[3]
                      __frame5[4]["arg2"] = function(b)
                        return function(a)
                            return function(__arg644)
                                return function(__arg645)
                                    return function(__eta1)
                                        local __act25 = __arg644(__eta1)
                                        return __arg645(__act25)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[4]["arg3"] = function(a)
                        return function(__arg647)
                            return function(__eta1)
                                local __act51 = __arg647(__eta1)
                                return __act51(__eta1)
                              end
                          end
                      end
                      __frame5[5] = {}
                      __frame5[5]["tag"] = "0"
                      __frame5[5]["arg1"] = __frame5[4]
                      __frame5[5]["arg2"] = function(a)
                        return function(__arg6794)
                            return __arg6794
                          end
                      end
                      __frame5[7] = idris["Foreign.nvimCommand"](nil)(__frame5[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to ExprSearch")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                    end
                    return __frame5[7]
                  end
                  __frame4[2]["8"] = function()
                    local __frame5 = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    __frame5[1] = __e1
                    __frame5[2] = {
                      nil
                    }
                    __frame5[2]["0"] = function()
                      local __frame6 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      local __e3 = __frame5[1]["arg1"]
                      __frame6[1] = __e3
                      __frame6[2] = {
                        nil
                      }
                      __frame6[2]["1"] = function()
                        local __frame7 = {
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        local __e5 = __frame6[1]["arg1"]
                        local __e4 = __frame6[1]["arg2"]
                        __frame7[1] = __e5
                        __frame7[2] = {
                          nil
                        }
                        __frame7[2]["1"] = function()
                          local __frame8 = {
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          local __e6 = __frame7[1]["arg1"]
                          __frame8[1] = __e4
                          __frame8[2] = {
                            nil
                          }
                          __frame8[2]["0"] = function()
                            local __act25 = idris["Plugin.writeToBuffer"](0)(idris["Prelude.Types.Strings.++"]("Inline substitution of next expression search is not available\n")(__e6))(__eta0)
                            return idris["Foreign.deleteCmdInHistory"](__e0)(__eta0)
                          end
                          __frame8[6] = __frame8[2][__frame8[1]["tag"]]
                          if __frame8[6] then
                            __frame8[7] = __frame8[6]()
                          else
                            __frame8[3] = {}
                            __frame8[3]["tag"] = "0"
                            __frame8[3]["arg1"] = function(b)
                              return function(a)
                                  return function(func)
                                      return function(__arg149)
                                          return function(__eta1)
                                              return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame8[3]["arg2"] = function(a)
                              return function(__arg482)
                                  return function(__eta1)
                                      return __arg482
                                    end
                                end
                            end
                            __frame8[3]["arg3"] = function(b)
                              return function(a)
                                  return function(__arg483)
                                      return function(__arg485)
                                          return function(__eta1)
                                              local __act17 = __arg483(__eta1)
                                              local __act16 = __arg485(__eta1)
                                              return __act17(__act16)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame8[4] = {}
                            __frame8[4]["tag"] = "0"
                            __frame8[4]["arg1"] = __frame8[3]
                            __frame8[4]["arg2"] = function(b)
                              return function(a)
                                  return function(__arg644)
                                      return function(__arg645)
                                          return function(__eta1)
                                              local __act25 = __arg644(__eta1)
                                              return __arg645(__act25)(__eta1)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame8[4]["arg3"] = function(a)
                              return function(__arg647)
                                  return function(__eta1)
                                      local __act51 = __arg647(__eta1)
                                      return __act51(__eta1)
                                    end
                                end
                            end
                            __frame8[5] = {}
                            __frame8[5]["tag"] = "0"
                            __frame8[5]["arg1"] = __frame8[4]
                            __frame8[5]["arg2"] = function(a)
                              return function(__arg6794)
                                  return __arg6794
                                end
                            end
                            __frame8[7] = idris["Foreign.nvimCommand"](nil)(__frame8[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to ExprSearch")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                          end
                          return __frame8[7]
                        end
                        __frame7[6] = __frame7[2][__frame7[1]["tag"]]
                        if __frame7[6] then
                          __frame7[7] = __frame7[6]()
                        else
                          __frame7[3] = {}
                          __frame7[3]["tag"] = "0"
                          __frame7[3]["arg1"] = function(b)
                            return function(a)
                                return function(func)
                                    return function(__arg149)
                                        return function(__eta1)
                                            return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[3]["arg2"] = function(a)
                            return function(__arg482)
                                return function(__eta1)
                                    return __arg482
                                  end
                              end
                          end
                          __frame7[3]["arg3"] = function(b)
                            return function(a)
                                return function(__arg483)
                                    return function(__arg485)
                                        return function(__eta1)
                                            local __act17 = __arg483(__eta1)
                                            local __act16 = __arg485(__eta1)
                                            return __act17(__act16)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[4] = {}
                          __frame7[4]["tag"] = "0"
                          __frame7[4]["arg1"] = __frame7[3]
                          __frame7[4]["arg2"] = function(b)
                            return function(a)
                                return function(__arg644)
                                    return function(__arg645)
                                        return function(__eta1)
                                            local __act25 = __arg644(__eta1)
                                            return __arg645(__act25)(__eta1)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[4]["arg3"] = function(a)
                            return function(__arg647)
                                return function(__eta1)
                                    local __act51 = __arg647(__eta1)
                                    return __act51(__eta1)
                                  end
                              end
                          end
                          __frame7[5] = {}
                          __frame7[5]["tag"] = "0"
                          __frame7[5]["arg1"] = __frame7[4]
                          __frame7[5]["arg2"] = function(a)
                            return function(__arg6794)
                                return __arg6794
                              end
                          end
                          __frame7[7] = idris["Foreign.nvimCommand"](nil)(__frame7[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to ExprSearch")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                        end
                        return __frame7[7]
                      end
                      __frame6[6] = __frame6[2][__frame6[1]["tag"]]
                      if __frame6[6] then
                        __frame6[7] = __frame6[6]()
                      else
                        __frame6[3] = {}
                        __frame6[3]["tag"] = "0"
                        __frame6[3]["arg1"] = function(b)
                          return function(a)
                              return function(func)
                                  return function(__arg149)
                                      return function(__eta1)
                                          return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[3]["arg2"] = function(a)
                          return function(__arg482)
                              return function(__eta1)
                                  return __arg482
                                end
                            end
                        end
                        __frame6[3]["arg3"] = function(b)
                          return function(a)
                              return function(__arg483)
                                  return function(__arg485)
                                      return function(__eta1)
                                          local __act17 = __arg483(__eta1)
                                          local __act16 = __arg485(__eta1)
                                          return __act17(__act16)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[4] = {}
                        __frame6[4]["tag"] = "0"
                        __frame6[4]["arg1"] = __frame6[3]
                        __frame6[4]["arg2"] = function(b)
                          return function(a)
                              return function(__arg644)
                                  return function(__arg645)
                                      return function(__eta1)
                                          local __act25 = __arg644(__eta1)
                                          return __arg645(__act25)(__eta1)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[4]["arg3"] = function(a)
                          return function(__arg647)
                              return function(__eta1)
                                  local __act51 = __arg647(__eta1)
                                  return __act51(__eta1)
                                end
                            end
                        end
                        __frame6[5] = {}
                        __frame6[5]["tag"] = "0"
                        __frame6[5]["arg1"] = __frame6[4]
                        __frame6[5]["arg2"] = function(a)
                          return function(__arg6794)
                              return __arg6794
                            end
                        end
                        __frame6[7] = idris["Foreign.nvimCommand"](nil)(__frame6[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to ExprSearch")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                      end
                      return __frame6[7]
                    end
                    __frame5[6] = __frame5[2][__frame5[1]["tag"]]
                    if __frame5[6] then
                      __frame5[7] = __frame5[6]()
                    else
                      __frame5[3] = {}
                      __frame5[3]["tag"] = "0"
                      __frame5[3]["arg1"] = function(b)
                        return function(a)
                            return function(func)
                                return function(__arg149)
                                    return function(__eta1)
                                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[3]["arg2"] = function(a)
                        return function(__arg482)
                            return function(__eta1)
                                return __arg482
                              end
                          end
                      end
                      __frame5[3]["arg3"] = function(b)
                        return function(a)
                            return function(__arg483)
                                return function(__arg485)
                                    return function(__eta1)
                                        local __act17 = __arg483(__eta1)
                                        local __act16 = __arg485(__eta1)
                                        return __act17(__act16)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[4] = {}
                      __frame5[4]["tag"] = "0"
                      __frame5[4]["arg1"] = __frame5[3]
                      __frame5[4]["arg2"] = function(b)
                        return function(a)
                            return function(__arg644)
                                return function(__arg645)
                                    return function(__eta1)
                                        local __act25 = __arg644(__eta1)
                                        return __arg645(__act25)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[4]["arg3"] = function(a)
                        return function(__arg647)
                            return function(__eta1)
                                local __act51 = __arg647(__eta1)
                                return __act51(__eta1)
                              end
                          end
                      end
                      __frame5[5] = {}
                      __frame5[5]["tag"] = "0"
                      __frame5[5]["arg1"] = __frame5[4]
                      __frame5[5]["arg2"] = function(a)
                        return function(__arg6794)
                            return __arg6794
                          end
                      end
                      __frame5[7] = idris["Foreign.nvimCommand"](nil)(__frame5[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to ExprSearch")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                    end
                    return __frame5[7]
                  end
                  __frame4[2]["9"] = function()
                    local __frame5 = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    local __e20 = __frame4[1]["arg1"]
                    __frame5[1] = __e1
                    __frame5[2] = {
                      nil
                    }
                    __frame5[2]["0"] = function()
                      local __frame6 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      local __e3 = __frame5[1]["arg1"]
                      __frame6[1] = __e3
                      __frame6[2] = {
                        nil
                      }
                      __frame6[2]["1"] = function()
                        local __frame7 = {
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        local __e5 = __frame6[1]["arg1"]
                        local __e4 = __frame6[1]["arg2"]
                        __frame7[1] = __e5
                        __frame7[2] = {
                          nil
                        }
                        __frame7[2]["1"] = function()
                          local __frame8 = {
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          local __e6 = __frame7[1]["arg1"]
                          __frame8[1] = __e4
                          __frame8[2] = {
                            nil
                          }
                          __frame8[2]["0"] = function()
                            local __act25 = idris["Plugin.appendLines"](1)(1)(idris["Prelude.Types.cast_Cast__Integer_Int"](__e20))(__e6)(__eta0)
                            return idris["Foreign.deleteCmdInHistory"](__e0)(__eta0)
                          end
                          __frame8[6] = __frame8[2][__frame8[1]["tag"]]
                          if __frame8[6] then
                            __frame8[7] = __frame8[6]()
                          else
                            __frame8[3] = {}
                            __frame8[3]["tag"] = "0"
                            __frame8[3]["arg1"] = function(b)
                              return function(a)
                                  return function(func)
                                      return function(__arg149)
                                          return function(__eta1)
                                              return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame8[3]["arg2"] = function(a)
                              return function(__arg482)
                                  return function(__eta1)
                                      return __arg482
                                    end
                                end
                            end
                            __frame8[3]["arg3"] = function(b)
                              return function(a)
                                  return function(__arg483)
                                      return function(__arg485)
                                          return function(__eta1)
                                              local __act17 = __arg483(__eta1)
                                              local __act16 = __arg485(__eta1)
                                              return __act17(__act16)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame8[4] = {}
                            __frame8[4]["tag"] = "0"
                            __frame8[4]["arg1"] = __frame8[3]
                            __frame8[4]["arg2"] = function(b)
                              return function(a)
                                  return function(__arg644)
                                      return function(__arg645)
                                          return function(__eta1)
                                              local __act25 = __arg644(__eta1)
                                              return __arg645(__act25)(__eta1)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame8[4]["arg3"] = function(a)
                              return function(__arg647)
                                  return function(__eta1)
                                      local __act51 = __arg647(__eta1)
                                      return __act51(__eta1)
                                    end
                                end
                            end
                            __frame8[5] = {}
                            __frame8[5]["tag"] = "0"
                            __frame8[5]["arg1"] = __frame8[4]
                            __frame8[5]["arg2"] = function(a)
                              return function(__arg6794)
                                  return __arg6794
                                end
                            end
                            __frame8[7] = idris["Foreign.nvimCommand"](nil)(__frame8[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to GenerateDef")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                          end
                          return __frame8[7]
                        end
                        __frame7[6] = __frame7[2][__frame7[1]["tag"]]
                        if __frame7[6] then
                          __frame7[7] = __frame7[6]()
                        else
                          __frame7[3] = {}
                          __frame7[3]["tag"] = "0"
                          __frame7[3]["arg1"] = function(b)
                            return function(a)
                                return function(func)
                                    return function(__arg149)
                                        return function(__eta1)
                                            return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[3]["arg2"] = function(a)
                            return function(__arg482)
                                return function(__eta1)
                                    return __arg482
                                  end
                              end
                          end
                          __frame7[3]["arg3"] = function(b)
                            return function(a)
                                return function(__arg483)
                                    return function(__arg485)
                                        return function(__eta1)
                                            local __act17 = __arg483(__eta1)
                                            local __act16 = __arg485(__eta1)
                                            return __act17(__act16)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[4] = {}
                          __frame7[4]["tag"] = "0"
                          __frame7[4]["arg1"] = __frame7[3]
                          __frame7[4]["arg2"] = function(b)
                            return function(a)
                                return function(__arg644)
                                    return function(__arg645)
                                        return function(__eta1)
                                            local __act25 = __arg644(__eta1)
                                            return __arg645(__act25)(__eta1)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[4]["arg3"] = function(a)
                            return function(__arg647)
                                return function(__eta1)
                                    local __act51 = __arg647(__eta1)
                                    return __act51(__eta1)
                                  end
                              end
                          end
                          __frame7[5] = {}
                          __frame7[5]["tag"] = "0"
                          __frame7[5]["arg1"] = __frame7[4]
                          __frame7[5]["arg2"] = function(a)
                            return function(__arg6794)
                                return __arg6794
                              end
                          end
                          __frame7[7] = idris["Foreign.nvimCommand"](nil)(__frame7[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to GenerateDef")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                        end
                        return __frame7[7]
                      end
                      __frame6[6] = __frame6[2][__frame6[1]["tag"]]
                      if __frame6[6] then
                        __frame6[7] = __frame6[6]()
                      else
                        __frame6[3] = {}
                        __frame6[3]["tag"] = "0"
                        __frame6[3]["arg1"] = function(b)
                          return function(a)
                              return function(func)
                                  return function(__arg149)
                                      return function(__eta1)
                                          return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[3]["arg2"] = function(a)
                          return function(__arg482)
                              return function(__eta1)
                                  return __arg482
                                end
                            end
                        end
                        __frame6[3]["arg3"] = function(b)
                          return function(a)
                              return function(__arg483)
                                  return function(__arg485)
                                      return function(__eta1)
                                          local __act17 = __arg483(__eta1)
                                          local __act16 = __arg485(__eta1)
                                          return __act17(__act16)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[4] = {}
                        __frame6[4]["tag"] = "0"
                        __frame6[4]["arg1"] = __frame6[3]
                        __frame6[4]["arg2"] = function(b)
                          return function(a)
                              return function(__arg644)
                                  return function(__arg645)
                                      return function(__eta1)
                                          local __act25 = __arg644(__eta1)
                                          return __arg645(__act25)(__eta1)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[4]["arg3"] = function(a)
                          return function(__arg647)
                              return function(__eta1)
                                  local __act51 = __arg647(__eta1)
                                  return __act51(__eta1)
                                end
                            end
                        end
                        __frame6[5] = {}
                        __frame6[5]["tag"] = "0"
                        __frame6[5]["arg1"] = __frame6[4]
                        __frame6[5]["arg2"] = function(a)
                          return function(__arg6794)
                              return __arg6794
                            end
                        end
                        __frame6[7] = idris["Foreign.nvimCommand"](nil)(__frame6[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to GenerateDef")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                      end
                      return __frame6[7]
                    end
                    __frame5[6] = __frame5[2][__frame5[1]["tag"]]
                    if __frame5[6] then
                      __frame5[7] = __frame5[6]()
                    else
                      __frame5[3] = {}
                      __frame5[3]["tag"] = "0"
                      __frame5[3]["arg1"] = function(b)
                        return function(a)
                            return function(func)
                                return function(__arg149)
                                    return function(__eta1)
                                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[3]["arg2"] = function(a)
                        return function(__arg482)
                            return function(__eta1)
                                return __arg482
                              end
                          end
                      end
                      __frame5[3]["arg3"] = function(b)
                        return function(a)
                            return function(__arg483)
                                return function(__arg485)
                                    return function(__eta1)
                                        local __act17 = __arg483(__eta1)
                                        local __act16 = __arg485(__eta1)
                                        return __act17(__act16)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[4] = {}
                      __frame5[4]["tag"] = "0"
                      __frame5[4]["arg1"] = __frame5[3]
                      __frame5[4]["arg2"] = function(b)
                        return function(a)
                            return function(__arg644)
                                return function(__arg645)
                                    return function(__eta1)
                                        local __act25 = __arg644(__eta1)
                                        return __arg645(__act25)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[4]["arg3"] = function(a)
                        return function(__arg647)
                            return function(__eta1)
                                local __act51 = __arg647(__eta1)
                                return __act51(__eta1)
                              end
                          end
                      end
                      __frame5[5] = {}
                      __frame5[5]["tag"] = "0"
                      __frame5[5]["arg1"] = __frame5[4]
                      __frame5[5]["arg2"] = function(a)
                        return function(__arg6794)
                            return __arg6794
                          end
                      end
                      __frame5[7] = idris["Foreign.nvimCommand"](nil)(__frame5[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to GenerateDef")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                    end
                    return __frame5[7]
                  end
                  __frame4[2]["10"] = function()
                    local __frame5 = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    __frame5[1] = __e1
                    __frame5[2] = {
                      nil
                    }
                    __frame5[2]["0"] = function()
                      local __frame6 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      local __e3 = __frame5[1]["arg1"]
                      __frame6[1] = __e3
                      __frame6[2] = {
                        nil
                      }
                      __frame6[2]["1"] = function()
                        local __frame7 = {
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        local __e5 = __frame6[1]["arg1"]
                        local __e4 = __frame6[1]["arg2"]
                        __frame7[1] = __e5
                        __frame7[2] = {
                          nil
                        }
                        __frame7[2]["1"] = function()
                          local __frame8 = {
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          local __e6 = __frame7[1]["arg1"]
                          __frame8[1] = __e4
                          __frame8[2] = {
                            nil
                          }
                          __frame8[2]["0"] = function()
                            local __act25 = idris["Plugin.writeToBuffer"](0)(idris["Prelude.Types.Strings.++"]("Inline substitution of next definition is not available\n")(__e6))(__eta0)
                            return idris["Foreign.deleteCmdInHistory"](__e0)(__eta0)
                          end
                          __frame8[6] = __frame8[2][__frame8[1]["tag"]]
                          if __frame8[6] then
                            __frame8[7] = __frame8[6]()
                          else
                            __frame8[3] = {}
                            __frame8[3]["tag"] = "0"
                            __frame8[3]["arg1"] = function(b)
                              return function(a)
                                  return function(func)
                                      return function(__arg149)
                                          return function(__eta1)
                                              return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame8[3]["arg2"] = function(a)
                              return function(__arg482)
                                  return function(__eta1)
                                      return __arg482
                                    end
                                end
                            end
                            __frame8[3]["arg3"] = function(b)
                              return function(a)
                                  return function(__arg483)
                                      return function(__arg485)
                                          return function(__eta1)
                                              local __act17 = __arg483(__eta1)
                                              local __act16 = __arg485(__eta1)
                                              return __act17(__act16)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame8[4] = {}
                            __frame8[4]["tag"] = "0"
                            __frame8[4]["arg1"] = __frame8[3]
                            __frame8[4]["arg2"] = function(b)
                              return function(a)
                                  return function(__arg644)
                                      return function(__arg645)
                                          return function(__eta1)
                                              local __act25 = __arg644(__eta1)
                                              return __arg645(__act25)(__eta1)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame8[4]["arg3"] = function(a)
                              return function(__arg647)
                                  return function(__eta1)
                                      local __act51 = __arg647(__eta1)
                                      return __act51(__eta1)
                                    end
                                end
                            end
                            __frame8[5] = {}
                            __frame8[5]["tag"] = "0"
                            __frame8[5]["arg1"] = __frame8[4]
                            __frame8[5]["arg2"] = function(a)
                              return function(__arg6794)
                                  return __arg6794
                                end
                            end
                            __frame8[7] = idris["Foreign.nvimCommand"](nil)(__frame8[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to ExprSearch")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                          end
                          return __frame8[7]
                        end
                        __frame7[6] = __frame7[2][__frame7[1]["tag"]]
                        if __frame7[6] then
                          __frame7[7] = __frame7[6]()
                        else
                          __frame7[3] = {}
                          __frame7[3]["tag"] = "0"
                          __frame7[3]["arg1"] = function(b)
                            return function(a)
                                return function(func)
                                    return function(__arg149)
                                        return function(__eta1)
                                            return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[3]["arg2"] = function(a)
                            return function(__arg482)
                                return function(__eta1)
                                    return __arg482
                                  end
                              end
                          end
                          __frame7[3]["arg3"] = function(b)
                            return function(a)
                                return function(__arg483)
                                    return function(__arg485)
                                        return function(__eta1)
                                            local __act17 = __arg483(__eta1)
                                            local __act16 = __arg485(__eta1)
                                            return __act17(__act16)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[4] = {}
                          __frame7[4]["tag"] = "0"
                          __frame7[4]["arg1"] = __frame7[3]
                          __frame7[4]["arg2"] = function(b)
                            return function(a)
                                return function(__arg644)
                                    return function(__arg645)
                                        return function(__eta1)
                                            local __act25 = __arg644(__eta1)
                                            return __arg645(__act25)(__eta1)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[4]["arg3"] = function(a)
                            return function(__arg647)
                                return function(__eta1)
                                    local __act51 = __arg647(__eta1)
                                    return __act51(__eta1)
                                  end
                              end
                          end
                          __frame7[5] = {}
                          __frame7[5]["tag"] = "0"
                          __frame7[5]["arg1"] = __frame7[4]
                          __frame7[5]["arg2"] = function(a)
                            return function(__arg6794)
                                return __arg6794
                              end
                          end
                          __frame7[7] = idris["Foreign.nvimCommand"](nil)(__frame7[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to ExprSearch")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                        end
                        return __frame7[7]
                      end
                      __frame6[6] = __frame6[2][__frame6[1]["tag"]]
                      if __frame6[6] then
                        __frame6[7] = __frame6[6]()
                      else
                        __frame6[3] = {}
                        __frame6[3]["tag"] = "0"
                        __frame6[3]["arg1"] = function(b)
                          return function(a)
                              return function(func)
                                  return function(__arg149)
                                      return function(__eta1)
                                          return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[3]["arg2"] = function(a)
                          return function(__arg482)
                              return function(__eta1)
                                  return __arg482
                                end
                            end
                        end
                        __frame6[3]["arg3"] = function(b)
                          return function(a)
                              return function(__arg483)
                                  return function(__arg485)
                                      return function(__eta1)
                                          local __act17 = __arg483(__eta1)
                                          local __act16 = __arg485(__eta1)
                                          return __act17(__act16)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[4] = {}
                        __frame6[4]["tag"] = "0"
                        __frame6[4]["arg1"] = __frame6[3]
                        __frame6[4]["arg2"] = function(b)
                          return function(a)
                              return function(__arg644)
                                  return function(__arg645)
                                      return function(__eta1)
                                          local __act25 = __arg644(__eta1)
                                          return __arg645(__act25)(__eta1)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[4]["arg3"] = function(a)
                          return function(__arg647)
                              return function(__eta1)
                                  local __act51 = __arg647(__eta1)
                                  return __act51(__eta1)
                                end
                            end
                        end
                        __frame6[5] = {}
                        __frame6[5]["tag"] = "0"
                        __frame6[5]["arg1"] = __frame6[4]
                        __frame6[5]["arg2"] = function(a)
                          return function(__arg6794)
                              return __arg6794
                            end
                        end
                        __frame6[7] = idris["Foreign.nvimCommand"](nil)(__frame6[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to ExprSearch")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                      end
                      return __frame6[7]
                    end
                    __frame5[6] = __frame5[2][__frame5[1]["tag"]]
                    if __frame5[6] then
                      __frame5[7] = __frame5[6]()
                    else
                      __frame5[3] = {}
                      __frame5[3]["tag"] = "0"
                      __frame5[3]["arg1"] = function(b)
                        return function(a)
                            return function(func)
                                return function(__arg149)
                                    return function(__eta1)
                                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[3]["arg2"] = function(a)
                        return function(__arg482)
                            return function(__eta1)
                                return __arg482
                              end
                          end
                      end
                      __frame5[3]["arg3"] = function(b)
                        return function(a)
                            return function(__arg483)
                                return function(__arg485)
                                    return function(__eta1)
                                        local __act17 = __arg483(__eta1)
                                        local __act16 = __arg485(__eta1)
                                        return __act17(__act16)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[4] = {}
                      __frame5[4]["tag"] = "0"
                      __frame5[4]["arg1"] = __frame5[3]
                      __frame5[4]["arg2"] = function(b)
                        return function(a)
                            return function(__arg644)
                                return function(__arg645)
                                    return function(__eta1)
                                        local __act25 = __arg644(__eta1)
                                        return __arg645(__act25)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[4]["arg3"] = function(a)
                        return function(__arg647)
                            return function(__eta1)
                                local __act51 = __arg647(__eta1)
                                return __act51(__eta1)
                              end
                          end
                      end
                      __frame5[5] = {}
                      __frame5[5]["tag"] = "0"
                      __frame5[5]["arg1"] = __frame5[4]
                      __frame5[5]["arg2"] = function(a)
                        return function(__arg6794)
                            return __arg6794
                          end
                      end
                      __frame5[7] = idris["Foreign.nvimCommand"](nil)(__frame5[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to ExprSearch")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                    end
                    return __frame5[7]
                  end
                  __frame4[2]["11"] = function()
                    local __frame5 = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    __frame5[1] = __e1
                    __frame5[2] = {
                      nil
                    }
                    __frame5[2]["0"] = function()
                      local __frame6 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      local __e3 = __frame5[1]["arg1"]
                      __frame6[1] = __e3
                      __frame6[2] = {
                        nil
                      }
                      __frame6[2]["1"] = function()
                        local __frame7 = {
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        local __e5 = __frame6[1]["arg1"]
                        local __e4 = __frame6[1]["arg2"]
                        __frame7[1] = __e5
                        __frame7[2] = {
                          nil
                        }
                        __frame7[2]["1"] = function()
                          local __frame8 = {
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          local __e6 = __frame7[1]["arg1"]
                          __frame8[1] = __e4
                          __frame8[2] = {
                            nil
                          }
                          __frame8[2]["0"] = function()
                            local __act25 = idris["Plugin.writeToBuffer"](1)(idris["Prelude.Types.Strings.++"]("Inline substitution of make lemma is not available\n")(__e6))(__eta0)
                            return idris["Foreign.deleteCmdInHistory"](__e0)(__eta0)
                          end
                          __frame8[6] = __frame8[2][__frame8[1]["tag"]]
                          if __frame8[6] then
                            __frame8[7] = __frame8[6]()
                          else
                            __frame8[3] = {}
                            __frame8[3]["tag"] = "0"
                            __frame8[3]["arg1"] = function(b)
                              return function(a)
                                  return function(func)
                                      return function(__arg149)
                                          return function(__eta1)
                                              return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame8[3]["arg2"] = function(a)
                              return function(__arg482)
                                  return function(__eta1)
                                      return __arg482
                                    end
                                end
                            end
                            __frame8[3]["arg3"] = function(b)
                              return function(a)
                                  return function(__arg483)
                                      return function(__arg485)
                                          return function(__eta1)
                                              local __act17 = __arg483(__eta1)
                                              local __act16 = __arg485(__eta1)
                                              return __act17(__act16)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame8[4] = {}
                            __frame8[4]["tag"] = "0"
                            __frame8[4]["arg1"] = __frame8[3]
                            __frame8[4]["arg2"] = function(b)
                              return function(a)
                                  return function(__arg644)
                                      return function(__arg645)
                                          return function(__eta1)
                                              local __act25 = __arg644(__eta1)
                                              return __arg645(__act25)(__eta1)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame8[4]["arg3"] = function(a)
                              return function(__arg647)
                                  return function(__eta1)
                                      local __act51 = __arg647(__eta1)
                                      return __act51(__eta1)
                                    end
                                end
                            end
                            __frame8[5] = {}
                            __frame8[5]["tag"] = "0"
                            __frame8[5]["arg1"] = __frame8[4]
                            __frame8[5]["arg2"] = function(a)
                              return function(__arg6794)
                                  return __arg6794
                                end
                            end
                            __frame8[7] = idris["Foreign.nvimCommand"](nil)(__frame8[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to ExprSearch")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                          end
                          return __frame8[7]
                        end
                        __frame7[6] = __frame7[2][__frame7[1]["tag"]]
                        if __frame7[6] then
                          __frame7[7] = __frame7[6]()
                        else
                          __frame7[3] = {}
                          __frame7[3]["tag"] = "0"
                          __frame7[3]["arg1"] = function(b)
                            return function(a)
                                return function(func)
                                    return function(__arg149)
                                        return function(__eta1)
                                            return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[3]["arg2"] = function(a)
                            return function(__arg482)
                                return function(__eta1)
                                    return __arg482
                                  end
                              end
                          end
                          __frame7[3]["arg3"] = function(b)
                            return function(a)
                                return function(__arg483)
                                    return function(__arg485)
                                        return function(__eta1)
                                            local __act17 = __arg483(__eta1)
                                            local __act16 = __arg485(__eta1)
                                            return __act17(__act16)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[4] = {}
                          __frame7[4]["tag"] = "0"
                          __frame7[4]["arg1"] = __frame7[3]
                          __frame7[4]["arg2"] = function(b)
                            return function(a)
                                return function(__arg644)
                                    return function(__arg645)
                                        return function(__eta1)
                                            local __act25 = __arg644(__eta1)
                                            return __arg645(__act25)(__eta1)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[4]["arg3"] = function(a)
                            return function(__arg647)
                                return function(__eta1)
                                    local __act51 = __arg647(__eta1)
                                    return __act51(__eta1)
                                  end
                              end
                          end
                          __frame7[5] = {}
                          __frame7[5]["tag"] = "0"
                          __frame7[5]["arg1"] = __frame7[4]
                          __frame7[5]["arg2"] = function(a)
                            return function(__arg6794)
                                return __arg6794
                              end
                          end
                          __frame7[7] = idris["Foreign.nvimCommand"](nil)(__frame7[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to ExprSearch")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                        end
                        return __frame7[7]
                      end
                      __frame6[6] = __frame6[2][__frame6[1]["tag"]]
                      if __frame6[6] then
                        __frame6[7] = __frame6[6]()
                      else
                        __frame6[3] = {}
                        __frame6[3]["tag"] = "0"
                        __frame6[3]["arg1"] = function(b)
                          return function(a)
                              return function(func)
                                  return function(__arg149)
                                      return function(__eta1)
                                          return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[3]["arg2"] = function(a)
                          return function(__arg482)
                              return function(__eta1)
                                  return __arg482
                                end
                            end
                        end
                        __frame6[3]["arg3"] = function(b)
                          return function(a)
                              return function(__arg483)
                                  return function(__arg485)
                                      return function(__eta1)
                                          local __act17 = __arg483(__eta1)
                                          local __act16 = __arg485(__eta1)
                                          return __act17(__act16)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[4] = {}
                        __frame6[4]["tag"] = "0"
                        __frame6[4]["arg1"] = __frame6[3]
                        __frame6[4]["arg2"] = function(b)
                          return function(a)
                              return function(__arg644)
                                  return function(__arg645)
                                      return function(__eta1)
                                          local __act25 = __arg644(__eta1)
                                          return __arg645(__act25)(__eta1)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[4]["arg3"] = function(a)
                          return function(__arg647)
                              return function(__eta1)
                                  local __act51 = __arg647(__eta1)
                                  return __act51(__eta1)
                                end
                            end
                        end
                        __frame6[5] = {}
                        __frame6[5]["tag"] = "0"
                        __frame6[5]["arg1"] = __frame6[4]
                        __frame6[5]["arg2"] = function(a)
                          return function(__arg6794)
                              return __arg6794
                            end
                        end
                        __frame6[7] = idris["Foreign.nvimCommand"](nil)(__frame6[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to ExprSearch")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                      end
                      return __frame6[7]
                    end
                    __frame5[6] = __frame5[2][__frame5[1]["tag"]]
                    if __frame5[6] then
                      __frame5[7] = __frame5[6]()
                    else
                      __frame5[3] = {}
                      __frame5[3]["tag"] = "0"
                      __frame5[3]["arg1"] = function(b)
                        return function(a)
                            return function(func)
                                return function(__arg149)
                                    return function(__eta1)
                                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[3]["arg2"] = function(a)
                        return function(__arg482)
                            return function(__eta1)
                                return __arg482
                              end
                          end
                      end
                      __frame5[3]["arg3"] = function(b)
                        return function(a)
                            return function(__arg483)
                                return function(__arg485)
                                    return function(__eta1)
                                        local __act17 = __arg483(__eta1)
                                        local __act16 = __arg485(__eta1)
                                        return __act17(__act16)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[4] = {}
                      __frame5[4]["tag"] = "0"
                      __frame5[4]["arg1"] = __frame5[3]
                      __frame5[4]["arg2"] = function(b)
                        return function(a)
                            return function(__arg644)
                                return function(__arg645)
                                    return function(__eta1)
                                        local __act25 = __arg644(__eta1)
                                        return __arg645(__act25)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[4]["arg3"] = function(a)
                        return function(__arg647)
                            return function(__eta1)
                                local __act51 = __arg647(__eta1)
                                return __act51(__eta1)
                              end
                          end
                      end
                      __frame5[5] = {}
                      __frame5[5]["tag"] = "0"
                      __frame5[5]["arg1"] = __frame5[4]
                      __frame5[5]["arg2"] = function(a)
                        return function(__arg6794)
                            return __arg6794
                          end
                      end
                      __frame5[7] = idris["Foreign.nvimCommand"](nil)(__frame5[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to ExprSearch")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                    end
                    return __frame5[7]
                  end
                  __frame4[2]["12"] = function()
                    local __frame5 = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    local __e24 = __frame4[1]["arg1"]
                    __frame5[1] = __e1
                    __frame5[2] = {
                      nil
                    }
                    __frame5[2]["0"] = function()
                      local __frame6 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      local __e3 = __frame5[1]["arg1"]
                      __frame6[1] = __e3
                      __frame6[2] = {
                        nil
                      }
                      __frame6[2]["1"] = function()
                        local __frame7 = {
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        local __e5 = __frame6[1]["arg1"]
                        local __e4 = __frame6[1]["arg2"]
                        __frame7[1] = __e5
                        __frame7[2] = {
                          nil
                        }
                        __frame7[2]["1"] = function()
                          local __frame8 = {
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          local __e6 = __frame7[1]["arg1"]
                          __frame8[1] = __e4
                          __frame8[2] = {
                            nil
                          }
                          __frame8[2]["0"] = function()
                            local __act25 = idris["Plugin.deleteLine"](idris["Prelude.Types.cast_Cast__Integer_Int"](__e24))(__eta0)
                            local __act26 = idris["Plugin.appendLines"](1)(1)(idris["Prelude.Num.-_Neg__Int"](idris["Prelude.Types.cast_Cast__Integer_Int"](__e24))(bigint.tonumber(bigint:new("1"))))(__e6)(__eta0)
                            return idris["Foreign.deleteCmdInHistory"](__e0)(__eta0)
                          end
                          __frame8[6] = __frame8[2][__frame8[1]["tag"]]
                          if __frame8[6] then
                            __frame8[7] = __frame8[6]()
                          else
                            __frame8[3] = {}
                            __frame8[3]["tag"] = "0"
                            __frame8[3]["arg1"] = function(b)
                              return function(a)
                                  return function(func)
                                      return function(__arg149)
                                          return function(__eta1)
                                              return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame8[3]["arg2"] = function(a)
                              return function(__arg482)
                                  return function(__eta1)
                                      return __arg482
                                    end
                                end
                            end
                            __frame8[3]["arg3"] = function(b)
                              return function(a)
                                  return function(__arg483)
                                      return function(__arg485)
                                          return function(__eta1)
                                              local __act17 = __arg483(__eta1)
                                              local __act16 = __arg485(__eta1)
                                              return __act17(__act16)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame8[4] = {}
                            __frame8[4]["tag"] = "0"
                            __frame8[4]["arg1"] = __frame8[3]
                            __frame8[4]["arg2"] = function(b)
                              return function(a)
                                  return function(__arg644)
                                      return function(__arg645)
                                          return function(__eta1)
                                              local __act25 = __arg644(__eta1)
                                              return __arg645(__act25)(__eta1)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame8[4]["arg3"] = function(a)
                              return function(__arg647)
                                  return function(__eta1)
                                      local __act51 = __arg647(__eta1)
                                      return __act51(__eta1)
                                    end
                                end
                            end
                            __frame8[5] = {}
                            __frame8[5]["tag"] = "0"
                            __frame8[5]["arg1"] = __frame8[4]
                            __frame8[5]["arg2"] = function(a)
                              return function(__arg6794)
                                  return __arg6794
                                end
                            end
                            __frame8[7] = idris["Foreign.nvimCommand"](nil)(__frame8[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to MakeCase")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                          end
                          return __frame8[7]
                        end
                        __frame7[6] = __frame7[2][__frame7[1]["tag"]]
                        if __frame7[6] then
                          __frame7[7] = __frame7[6]()
                        else
                          __frame7[3] = {}
                          __frame7[3]["tag"] = "0"
                          __frame7[3]["arg1"] = function(b)
                            return function(a)
                                return function(func)
                                    return function(__arg149)
                                        return function(__eta1)
                                            return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[3]["arg2"] = function(a)
                            return function(__arg482)
                                return function(__eta1)
                                    return __arg482
                                  end
                              end
                          end
                          __frame7[3]["arg3"] = function(b)
                            return function(a)
                                return function(__arg483)
                                    return function(__arg485)
                                        return function(__eta1)
                                            local __act17 = __arg483(__eta1)
                                            local __act16 = __arg485(__eta1)
                                            return __act17(__act16)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[4] = {}
                          __frame7[4]["tag"] = "0"
                          __frame7[4]["arg1"] = __frame7[3]
                          __frame7[4]["arg2"] = function(b)
                            return function(a)
                                return function(__arg644)
                                    return function(__arg645)
                                        return function(__eta1)
                                            local __act25 = __arg644(__eta1)
                                            return __arg645(__act25)(__eta1)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[4]["arg3"] = function(a)
                            return function(__arg647)
                                return function(__eta1)
                                    local __act51 = __arg647(__eta1)
                                    return __act51(__eta1)
                                  end
                              end
                          end
                          __frame7[5] = {}
                          __frame7[5]["tag"] = "0"
                          __frame7[5]["arg1"] = __frame7[4]
                          __frame7[5]["arg2"] = function(a)
                            return function(__arg6794)
                                return __arg6794
                              end
                          end
                          __frame7[7] = idris["Foreign.nvimCommand"](nil)(__frame7[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to MakeCase")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                        end
                        return __frame7[7]
                      end
                      __frame6[6] = __frame6[2][__frame6[1]["tag"]]
                      if __frame6[6] then
                        __frame6[7] = __frame6[6]()
                      else
                        __frame6[3] = {}
                        __frame6[3]["tag"] = "0"
                        __frame6[3]["arg1"] = function(b)
                          return function(a)
                              return function(func)
                                  return function(__arg149)
                                      return function(__eta1)
                                          return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[3]["arg2"] = function(a)
                          return function(__arg482)
                              return function(__eta1)
                                  return __arg482
                                end
                            end
                        end
                        __frame6[3]["arg3"] = function(b)
                          return function(a)
                              return function(__arg483)
                                  return function(__arg485)
                                      return function(__eta1)
                                          local __act17 = __arg483(__eta1)
                                          local __act16 = __arg485(__eta1)
                                          return __act17(__act16)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[4] = {}
                        __frame6[4]["tag"] = "0"
                        __frame6[4]["arg1"] = __frame6[3]
                        __frame6[4]["arg2"] = function(b)
                          return function(a)
                              return function(__arg644)
                                  return function(__arg645)
                                      return function(__eta1)
                                          local __act25 = __arg644(__eta1)
                                          return __arg645(__act25)(__eta1)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[4]["arg3"] = function(a)
                          return function(__arg647)
                              return function(__eta1)
                                  local __act51 = __arg647(__eta1)
                                  return __act51(__eta1)
                                end
                            end
                        end
                        __frame6[5] = {}
                        __frame6[5]["tag"] = "0"
                        __frame6[5]["arg1"] = __frame6[4]
                        __frame6[5]["arg2"] = function(a)
                          return function(__arg6794)
                              return __arg6794
                            end
                        end
                        __frame6[7] = idris["Foreign.nvimCommand"](nil)(__frame6[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to MakeCase")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                      end
                      return __frame6[7]
                    end
                    __frame5[6] = __frame5[2][__frame5[1]["tag"]]
                    if __frame5[6] then
                      __frame5[7] = __frame5[6]()
                    else
                      __frame5[3] = {}
                      __frame5[3]["tag"] = "0"
                      __frame5[3]["arg1"] = function(b)
                        return function(a)
                            return function(func)
                                return function(__arg149)
                                    return function(__eta1)
                                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[3]["arg2"] = function(a)
                        return function(__arg482)
                            return function(__eta1)
                                return __arg482
                              end
                          end
                      end
                      __frame5[3]["arg3"] = function(b)
                        return function(a)
                            return function(__arg483)
                                return function(__arg485)
                                    return function(__eta1)
                                        local __act17 = __arg483(__eta1)
                                        local __act16 = __arg485(__eta1)
                                        return __act17(__act16)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[4] = {}
                      __frame5[4]["tag"] = "0"
                      __frame5[4]["arg1"] = __frame5[3]
                      __frame5[4]["arg2"] = function(b)
                        return function(a)
                            return function(__arg644)
                                return function(__arg645)
                                    return function(__eta1)
                                        local __act25 = __arg644(__eta1)
                                        return __arg645(__act25)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[4]["arg3"] = function(a)
                        return function(__arg647)
                            return function(__eta1)
                                local __act51 = __arg647(__eta1)
                                return __act51(__eta1)
                              end
                          end
                      end
                      __frame5[5] = {}
                      __frame5[5]["tag"] = "0"
                      __frame5[5]["arg1"] = __frame5[4]
                      __frame5[5]["arg2"] = function(a)
                        return function(__arg6794)
                            return __arg6794
                          end
                      end
                      __frame5[7] = idris["Foreign.nvimCommand"](nil)(__frame5[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to MakeCase")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                    end
                    return __frame5[7]
                  end
                  __frame4[2]["13"] = function()
                    local __frame5 = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    local __e26 = __frame4[1]["arg1"]
                    __frame5[1] = __e1
                    __frame5[2] = {
                      nil
                    }
                    __frame5[2]["0"] = function()
                      local __frame6 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      local __e3 = __frame5[1]["arg1"]
                      __frame6[1] = __e3
                      __frame6[2] = {
                        nil
                      }
                      __frame6[2]["1"] = function()
                        local __frame7 = {
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        local __e5 = __frame6[1]["arg1"]
                        local __e4 = __frame6[1]["arg2"]
                        __frame7[1] = __e5
                        __frame7[2] = {
                          nil
                        }
                        __frame7[2]["1"] = function()
                          local __frame8 = {
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          local __e6 = __frame7[1]["arg1"]
                          __frame8[1] = __e4
                          __frame8[2] = {
                            nil
                          }
                          __frame8[2]["0"] = function()
                            local __act25 = idris["Plugin.deleteLine"](idris["Prelude.Types.cast_Cast__Integer_Int"](__e26))(__eta0)
                            local __act26 = idris["Plugin.appendLines"](1)(1)(idris["Prelude.Num.-_Neg__Int"](idris["Prelude.Types.cast_Cast__Integer_Int"](__e26))(bigint.tonumber(bigint:new("1"))))(__e6)(__eta0)
                            return idris["Foreign.deleteCmdInHistory"](__e0)(__eta0)
                          end
                          __frame8[6] = __frame8[2][__frame8[1]["tag"]]
                          if __frame8[6] then
                            __frame8[7] = __frame8[6]()
                          else
                            __frame8[3] = {}
                            __frame8[3]["tag"] = "0"
                            __frame8[3]["arg1"] = function(b)
                              return function(a)
                                  return function(func)
                                      return function(__arg149)
                                          return function(__eta1)
                                              return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame8[3]["arg2"] = function(a)
                              return function(__arg482)
                                  return function(__eta1)
                                      return __arg482
                                    end
                                end
                            end
                            __frame8[3]["arg3"] = function(b)
                              return function(a)
                                  return function(__arg483)
                                      return function(__arg485)
                                          return function(__eta1)
                                              local __act17 = __arg483(__eta1)
                                              local __act16 = __arg485(__eta1)
                                              return __act17(__act16)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame8[4] = {}
                            __frame8[4]["tag"] = "0"
                            __frame8[4]["arg1"] = __frame8[3]
                            __frame8[4]["arg2"] = function(b)
                              return function(a)
                                  return function(__arg644)
                                      return function(__arg645)
                                          return function(__eta1)
                                              local __act25 = __arg644(__eta1)
                                              return __arg645(__act25)(__eta1)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame8[4]["arg3"] = function(a)
                              return function(__arg647)
                                  return function(__eta1)
                                      local __act51 = __arg647(__eta1)
                                      return __act51(__eta1)
                                    end
                                end
                            end
                            __frame8[5] = {}
                            __frame8[5]["tag"] = "0"
                            __frame8[5]["arg1"] = __frame8[4]
                            __frame8[5]["arg2"] = function(a)
                              return function(__arg6794)
                                  return __arg6794
                                end
                            end
                            __frame8[7] = idris["Foreign.nvimCommand"](nil)(__frame8[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to MakeWith")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                          end
                          return __frame8[7]
                        end
                        __frame7[6] = __frame7[2][__frame7[1]["tag"]]
                        if __frame7[6] then
                          __frame7[7] = __frame7[6]()
                        else
                          __frame7[3] = {}
                          __frame7[3]["tag"] = "0"
                          __frame7[3]["arg1"] = function(b)
                            return function(a)
                                return function(func)
                                    return function(__arg149)
                                        return function(__eta1)
                                            return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[3]["arg2"] = function(a)
                            return function(__arg482)
                                return function(__eta1)
                                    return __arg482
                                  end
                              end
                          end
                          __frame7[3]["arg3"] = function(b)
                            return function(a)
                                return function(__arg483)
                                    return function(__arg485)
                                        return function(__eta1)
                                            local __act17 = __arg483(__eta1)
                                            local __act16 = __arg485(__eta1)
                                            return __act17(__act16)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[4] = {}
                          __frame7[4]["tag"] = "0"
                          __frame7[4]["arg1"] = __frame7[3]
                          __frame7[4]["arg2"] = function(b)
                            return function(a)
                                return function(__arg644)
                                    return function(__arg645)
                                        return function(__eta1)
                                            local __act25 = __arg644(__eta1)
                                            return __arg645(__act25)(__eta1)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[4]["arg3"] = function(a)
                            return function(__arg647)
                                return function(__eta1)
                                    local __act51 = __arg647(__eta1)
                                    return __act51(__eta1)
                                  end
                              end
                          end
                          __frame7[5] = {}
                          __frame7[5]["tag"] = "0"
                          __frame7[5]["arg1"] = __frame7[4]
                          __frame7[5]["arg2"] = function(a)
                            return function(__arg6794)
                                return __arg6794
                              end
                          end
                          __frame7[7] = idris["Foreign.nvimCommand"](nil)(__frame7[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to MakeWith")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                        end
                        return __frame7[7]
                      end
                      __frame6[6] = __frame6[2][__frame6[1]["tag"]]
                      if __frame6[6] then
                        __frame6[7] = __frame6[6]()
                      else
                        __frame6[3] = {}
                        __frame6[3]["tag"] = "0"
                        __frame6[3]["arg1"] = function(b)
                          return function(a)
                              return function(func)
                                  return function(__arg149)
                                      return function(__eta1)
                                          return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[3]["arg2"] = function(a)
                          return function(__arg482)
                              return function(__eta1)
                                  return __arg482
                                end
                            end
                        end
                        __frame6[3]["arg3"] = function(b)
                          return function(a)
                              return function(__arg483)
                                  return function(__arg485)
                                      return function(__eta1)
                                          local __act17 = __arg483(__eta1)
                                          local __act16 = __arg485(__eta1)
                                          return __act17(__act16)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[4] = {}
                        __frame6[4]["tag"] = "0"
                        __frame6[4]["arg1"] = __frame6[3]
                        __frame6[4]["arg2"] = function(b)
                          return function(a)
                              return function(__arg644)
                                  return function(__arg645)
                                      return function(__eta1)
                                          local __act25 = __arg644(__eta1)
                                          return __arg645(__act25)(__eta1)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[4]["arg3"] = function(a)
                          return function(__arg647)
                              return function(__eta1)
                                  local __act51 = __arg647(__eta1)
                                  return __act51(__eta1)
                                end
                            end
                        end
                        __frame6[5] = {}
                        __frame6[5]["tag"] = "0"
                        __frame6[5]["arg1"] = __frame6[4]
                        __frame6[5]["arg2"] = function(a)
                          return function(__arg6794)
                              return __arg6794
                            end
                        end
                        __frame6[7] = idris["Foreign.nvimCommand"](nil)(__frame6[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to MakeWith")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                      end
                      return __frame6[7]
                    end
                    __frame5[6] = __frame5[2][__frame5[1]["tag"]]
                    if __frame5[6] then
                      __frame5[7] = __frame5[6]()
                    else
                      __frame5[3] = {}
                      __frame5[3]["tag"] = "0"
                      __frame5[3]["arg1"] = function(b)
                        return function(a)
                            return function(func)
                                return function(__arg149)
                                    return function(__eta1)
                                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[3]["arg2"] = function(a)
                        return function(__arg482)
                            return function(__eta1)
                                return __arg482
                              end
                          end
                      end
                      __frame5[3]["arg3"] = function(b)
                        return function(a)
                            return function(__arg483)
                                return function(__arg485)
                                    return function(__eta1)
                                        local __act17 = __arg483(__eta1)
                                        local __act16 = __arg485(__eta1)
                                        return __act17(__act16)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[4] = {}
                      __frame5[4]["tag"] = "0"
                      __frame5[4]["arg1"] = __frame5[3]
                      __frame5[4]["arg2"] = function(b)
                        return function(a)
                            return function(__arg644)
                                return function(__arg645)
                                    return function(__eta1)
                                        local __act25 = __arg644(__eta1)
                                        return __arg645(__act25)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[4]["arg3"] = function(a)
                        return function(__arg647)
                            return function(__eta1)
                                local __act51 = __arg647(__eta1)
                                return __act51(__eta1)
                              end
                          end
                      end
                      __frame5[5] = {}
                      __frame5[5]["tag"] = "0"
                      __frame5[5]["arg1"] = __frame5[4]
                      __frame5[5]["arg2"] = function(a)
                        return function(__arg6794)
                            return __arg6794
                          end
                      end
                      __frame5[7] = idris["Foreign.nvimCommand"](nil)(__frame5[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to MakeWith")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                    end
                    return __frame5[7]
                  end
                  __frame4[2]["17"] = function()
                    local __act25 = idris["Plugin.currenttime"](__eta0)
                    local __act25 = idris["Plugin.writeToBuffer"](1)(idris["Prelude.Types.Strings.++"]("-- ")(idris["Prelude.Types.Strings.++"](__act25)(idris["Prelude.Types.Strings.++"]("\n")(idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1)))))(__eta0)
                    return idris["Foreign.deleteCmdInHistory"](__e0)(__eta0)
                  end
                  __frame4[2]["20"] = function()
                    local __frame5 = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    __frame5[1] = __e1
                    __frame5[2] = {
                      nil
                    }
                    __frame5[2]["0"] = function()
                      local __frame6 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      local __e3 = __frame5[1]["arg1"]
                      __frame6[1] = __e3
                      __frame6[2] = {
                        nil
                      }
                      __frame6[2]["1"] = function()
                        local __frame7 = {
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        local __e5 = __frame6[1]["arg1"]
                        __frame7[1] = __e5
                        __frame7[2] = {
                          nil
                        }
                        __frame7[2]["1"] = function()
                          local __e6 = __frame7[1]["arg1"]
                          local __act25 = idris["Plugin.currenttime"](__eta0)
                          local __act25 = idris["Plugin.writeToBuffer"](1)(idris["Prelude.Types.Strings.++"]("-- ")(idris["Prelude.Types.Strings.++"](__act25)(idris["Prelude.Types.Strings.++"]("\n")(__e6))))(__eta0)
                          return idris["Foreign.deleteCmdInHistory"](__e0)(__eta0)
                        end
                        __frame7[6] = __frame7[2][__frame7[1]["tag"]]
                        if __frame7[6] then
                          __frame7[7] = __frame7[6]()
                        else
                          __frame7[3] = {}
                          __frame7[3]["tag"] = "0"
                          __frame7[3]["arg1"] = function(b)
                            return function(a)
                                return function(func)
                                    return function(__arg149)
                                        return function(__eta1)
                                            return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[3]["arg2"] = function(a)
                            return function(__arg482)
                                return function(__eta1)
                                    return __arg482
                                  end
                              end
                          end
                          __frame7[3]["arg3"] = function(b)
                            return function(a)
                                return function(__arg483)
                                    return function(__arg485)
                                        return function(__eta1)
                                            local __act17 = __arg483(__eta1)
                                            local __act16 = __arg485(__eta1)
                                            return __act17(__act16)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[4] = {}
                          __frame7[4]["tag"] = "0"
                          __frame7[4]["arg1"] = __frame7[3]
                          __frame7[4]["arg2"] = function(b)
                            return function(a)
                                return function(__arg644)
                                    return function(__arg645)
                                        return function(__eta1)
                                            local __act25 = __arg644(__eta1)
                                            return __arg645(__act25)(__eta1)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame7[4]["arg3"] = function(a)
                            return function(__arg647)
                                return function(__eta1)
                                    local __act51 = __arg647(__eta1)
                                    return __act51(__eta1)
                                  end
                              end
                          end
                          __frame7[5] = {}
                          __frame7[5]["tag"] = "0"
                          __frame7[5]["arg1"] = __frame7[4]
                          __frame7[5]["arg2"] = function(a)
                            return function(__arg6794)
                                return __arg6794
                              end
                          end
                          __frame7[7] = idris["Foreign.nvimCommand"](nil)(__frame7[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to BrowseNamespace")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                        end
                        return __frame7[7]
                      end
                      __frame6[6] = __frame6[2][__frame6[1]["tag"]]
                      if __frame6[6] then
                        __frame6[7] = __frame6[6]()
                      else
                        __frame6[3] = {}
                        __frame6[3]["tag"] = "0"
                        __frame6[3]["arg1"] = function(b)
                          return function(a)
                              return function(func)
                                  return function(__arg149)
                                      return function(__eta1)
                                          return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[3]["arg2"] = function(a)
                          return function(__arg482)
                              return function(__eta1)
                                  return __arg482
                                end
                            end
                        end
                        __frame6[3]["arg3"] = function(b)
                          return function(a)
                              return function(__arg483)
                                  return function(__arg485)
                                      return function(__eta1)
                                          local __act17 = __arg483(__eta1)
                                          local __act16 = __arg485(__eta1)
                                          return __act17(__act16)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[4] = {}
                        __frame6[4]["tag"] = "0"
                        __frame6[4]["arg1"] = __frame6[3]
                        __frame6[4]["arg2"] = function(b)
                          return function(a)
                              return function(__arg644)
                                  return function(__arg645)
                                      return function(__eta1)
                                          local __act25 = __arg644(__eta1)
                                          return __arg645(__act25)(__eta1)
                                        end
                                    end
                                end
                            end
                        end
                        __frame6[4]["arg3"] = function(a)
                          return function(__arg647)
                              return function(__eta1)
                                  local __act51 = __arg647(__eta1)
                                  return __act51(__eta1)
                                end
                            end
                        end
                        __frame6[5] = {}
                        __frame6[5]["tag"] = "0"
                        __frame6[5]["arg1"] = __frame6[4]
                        __frame6[5]["arg2"] = function(a)
                          return function(__arg6794)
                              return __arg6794
                            end
                        end
                        __frame6[7] = idris["Foreign.nvimCommand"](nil)(__frame6[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to BrowseNamespace")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                      end
                      return __frame6[7]
                    end
                    __frame5[6] = __frame5[2][__frame5[1]["tag"]]
                    if __frame5[6] then
                      __frame5[7] = __frame5[6]()
                    else
                      __frame5[3] = {}
                      __frame5[3]["tag"] = "0"
                      __frame5[3]["arg1"] = function(b)
                        return function(a)
                            return function(func)
                                return function(__arg149)
                                    return function(__eta1)
                                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[3]["arg2"] = function(a)
                        return function(__arg482)
                            return function(__eta1)
                                return __arg482
                              end
                          end
                      end
                      __frame5[3]["arg3"] = function(b)
                        return function(a)
                            return function(__arg483)
                                return function(__arg485)
                                    return function(__eta1)
                                        local __act17 = __arg483(__eta1)
                                        local __act16 = __arg485(__eta1)
                                        return __act17(__act16)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[4] = {}
                      __frame5[4]["tag"] = "0"
                      __frame5[4]["arg1"] = __frame5[3]
                      __frame5[4]["arg2"] = function(b)
                        return function(a)
                            return function(__arg644)
                                return function(__arg645)
                                    return function(__eta1)
                                        local __act25 = __arg644(__eta1)
                                        return __arg645(__act25)(__eta1)
                                      end
                                  end
                              end
                          end
                      end
                      __frame5[4]["arg3"] = function(a)
                        return function(__arg647)
                            return function(__eta1)
                                local __act51 = __arg647(__eta1)
                                return __act51(__eta1)
                              end
                          end
                      end
                      __frame5[5] = {}
                      __frame5[5]["tag"] = "0"
                      __frame5[5]["arg1"] = __frame5[4]
                      __frame5[5]["arg2"] = function(a)
                        return function(__arg6794)
                            return __arg6794
                          end
                      end
                      __frame5[7] = idris["Foreign.nvimCommand"](nil)(__frame5[5])(idris["Prelude.Types.Strings.++"]("echom 'Invalid response to BrowseNamespace")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))("'")))(__eta0)
                    end
                    return __frame5[7]
                  end
                  __frame4[2]["28"] = function()
                    local __act25 = idris["Plugin.writeToBuffer"](0)(idris["Idris.IDEMode.Commands.show_Show__SExp"](__e1))(__eta0)
                    return idris["Foreign.deleteCmdInHistory"](__e0)(__eta0)
                  end
                  __frame4[4] = __frame4[2][__frame4[1]["tag"]]
                  if __frame4[4] then
                    __frame4[5] = __frame4[4]()
                  else
                    __frame4[3] = {}
                    __frame4[3]["tag"] = "0"
                    __frame4[5] = __frame4[3]
                  end
                  return __frame4[5]
                end
                __frame3[4] = __frame3[2][__frame3[1]["tag"]]
                if __frame3[4] then
                  __frame3[5] = __frame3[4]()
                else
                  __frame3[3] = {}
                  __frame3[3]["tag"] = "0"
                  __frame3[5] = __frame3[3]
                end
                return __frame3[5]
              end
          end
          __frame1[2]["1"] = function()
            local __frame2 = {
              nil,
              nil,
              nil,
              nil,
              nil,
              nil,
              nil
            }
            local __e3 = __frame1[1]["arg2"]
            __frame2[1] = __e3
            __frame2[2] = {
              nil
            }
            __frame2[2]["0"] = function()
              local __frame3 = {
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil
              }
              local __e11 = __frame2[1]["arg1"]
              __frame3[1] = __e11
              __frame3[2] = {
                nil
              }
              __frame3[2]["1"] = function()
                local __frame4 = {
                  nil,
                  nil,
                  nil,
                  nil,
                  nil,
                  nil,
                  nil
                }
                local __e13 = __frame3[1]["arg1"]
                local __e14 = __frame3[1]["arg2"]
                __frame4[1] = __e13
                __frame4[2] = {
                  nil
                }
                __frame4[2]["1"] = function()
                  local __frame5 = {
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame5[1] = __e14
                  __frame5[2] = {
                    nil
                  }
                  __frame5[2]["1"] = function()
                    local __frame6 = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    local __e18 = __frame5[1]["arg2"]
                    __frame6[1] = __e18
                    __frame6[2] = {
                      nil
                    }
                    __frame6[2]["1"] = function()
                      local __frame7 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      local __e21 = __frame6[1]["arg2"]
                      __frame7[1] = __e21
                      __frame7[2] = {
                        nil
                      }
                      __frame7[2]["1"] = function()
                        local __frame8 = {
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        local __e23 = __frame7[1]["arg1"]
                        local __e24 = __frame7[1]["arg2"]
                        __frame8[1] = __e23
                        __frame8[2] = {
                          nil
                        }
                        __frame8[2]["1"] = function()
                          local __frame9 = {
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          __frame9[1] = __e24
                          __frame9[2] = {
                            nil
                          }
                          __frame9[2]["1"] = function()
                            local __frame10 = {
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil
                            }
                            local __e28 = __frame9[1]["arg2"]
                            __frame10[1] = __e28
                            __frame10[2] = {
                              nil
                            }
                            __frame10[2]["0"] = function()
                              return function(__eta0)
                                  local __frame12 = {
                                    nil
                                  }
                                  __frame12[1] = {}
                                  __frame12[1]["tag"] = "0"
                                  return __frame12[1]
                                end
                            end
                            __frame10[6] = __frame10[2][__frame10[1]["tag"]]
                            if __frame10[6] then
                              __frame10[7] = __frame10[6]()
                            else
                              __frame10[3] = {}
                              __frame10[3]["tag"] = "0"
                              __frame10[3]["arg1"] = function(b)
                                return function(a)
                                    return function(func)
                                        return function(__arg149)
                                            return function(__eta0)
                                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                              end
                                          end
                                      end
                                  end
                              end
                              __frame10[3]["arg2"] = function(a)
                                return function(__arg482)
                                    return function(__eta0)
                                        return __arg482
                                      end
                                  end
                              end
                              __frame10[3]["arg3"] = function(b)
                                return function(a)
                                    return function(__arg483)
                                        return function(__arg485)
                                            return function(__eta0)
                                                local __act17 = __arg483(__eta0)
                                                local __act16 = __arg485(__eta0)
                                                return __act17(__act16)
                                              end
                                          end
                                      end
                                  end
                              end
                              __frame10[4] = {}
                              __frame10[4]["tag"] = "0"
                              __frame10[4]["arg1"] = __frame10[3]
                              __frame10[4]["arg2"] = function(b)
                                return function(a)
                                    return function(__arg644)
                                        return function(__arg645)
                                            return function(__eta0)
                                                local __act24 = __arg644(__eta0)
                                                return __arg645(__act24)(__eta0)
                                              end
                                          end
                                      end
                                  end
                              end
                              __frame10[4]["arg3"] = function(a)
                                return function(__arg647)
                                    return function(__eta0)
                                        local __act51 = __arg647(__eta0)
                                        return __act51(__eta0)
                                      end
                                  end
                              end
                              __frame10[5] = {}
                              __frame10[5]["tag"] = "0"
                              __frame10[5]["arg1"] = __frame10[4]
                              __frame10[5]["arg2"] = function(a)
                                return function(__arg6794)
                                    return __arg6794
                                  end
                              end
                              __frame10[7] = idris["Foreign.nvimCommand"](nil)(__frame10[5])("echom 'Invalid message from the server'")
                            end
                            return __frame10[7]
                          end
                          __frame9[6] = __frame9[2][__frame9[1]["tag"]]
                          if __frame9[6] then
                            __frame9[7] = __frame9[6]()
                          else
                            __frame9[3] = {}
                            __frame9[3]["tag"] = "0"
                            __frame9[3]["arg1"] = function(b)
                              return function(a)
                                  return function(func)
                                      return function(__arg149)
                                          return function(__eta0)
                                              return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame9[3]["arg2"] = function(a)
                              return function(__arg482)
                                  return function(__eta0)
                                      return __arg482
                                    end
                                end
                            end
                            __frame9[3]["arg3"] = function(b)
                              return function(a)
                                  return function(__arg483)
                                      return function(__arg485)
                                          return function(__eta0)
                                              local __act17 = __arg483(__eta0)
                                              local __act16 = __arg485(__eta0)
                                              return __act17(__act16)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame9[4] = {}
                            __frame9[4]["tag"] = "0"
                            __frame9[4]["arg1"] = __frame9[3]
                            __frame9[4]["arg2"] = function(b)
                              return function(a)
                                  return function(__arg644)
                                      return function(__arg645)
                                          return function(__eta0)
                                              local __act24 = __arg644(__eta0)
                                              return __arg645(__act24)(__eta0)
                                            end
                                        end
                                    end
                                end
                            end
                            __frame9[4]["arg3"] = function(a)
                              return function(__arg647)
                                  return function(__eta0)
                                      local __act51 = __arg647(__eta0)
                                      return __act51(__eta0)
                                    end
                                end
                            end
                            __frame9[5] = {}
                            __frame9[5]["tag"] = "0"
                            __frame9[5]["arg1"] = __frame9[4]
                            __frame9[5]["arg2"] = function(a)
                              return function(__arg6794)
                                  return __arg6794
                                end
                            end
                            __frame9[7] = idris["Foreign.nvimCommand"](nil)(__frame9[5])("echom 'Invalid message from the server'")
                          end
                          return __frame9[7]
                        end
                        __frame8[6] = __frame8[2][__frame8[1]["tag"]]
                        if __frame8[6] then
                          __frame8[7] = __frame8[6]()
                        else
                          __frame8[3] = {}
                          __frame8[3]["tag"] = "0"
                          __frame8[3]["arg1"] = function(b)
                            return function(a)
                                return function(func)
                                    return function(__arg149)
                                        return function(__eta0)
                                            return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame8[3]["arg2"] = function(a)
                            return function(__arg482)
                                return function(__eta0)
                                    return __arg482
                                  end
                              end
                          end
                          __frame8[3]["arg3"] = function(b)
                            return function(a)
                                return function(__arg483)
                                    return function(__arg485)
                                        return function(__eta0)
                                            local __act17 = __arg483(__eta0)
                                            local __act16 = __arg485(__eta0)
                                            return __act17(__act16)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame8[4] = {}
                          __frame8[4]["tag"] = "0"
                          __frame8[4]["arg1"] = __frame8[3]
                          __frame8[4]["arg2"] = function(b)
                            return function(a)
                                return function(__arg644)
                                    return function(__arg645)
                                        return function(__eta0)
                                            local __act24 = __arg644(__eta0)
                                            return __arg645(__act24)(__eta0)
                                          end
                                      end
                                  end
                              end
                          end
                          __frame8[4]["arg3"] = function(a)
                            return function(__arg647)
                                return function(__eta0)
                                    local __act51 = __arg647(__eta0)
                                    return __act51(__eta0)
                                  end
                              end
                          end
                          __frame8[5] = {}
                          __frame8[5]["tag"] = "0"
                          __frame8[5]["arg1"] = __frame8[4]
                          __frame8[5]["arg2"] = function(a)
                            return function(__arg6794)
                                return __arg6794
                              end
                          end
                          __frame8[7] = idris["Foreign.nvimCommand"](nil)(__frame8[5])("echom 'Invalid message from the server'")
                        end
                        return __frame8[7]
                      end
                      __frame7[6] = __frame7[2][__frame7[1]["tag"]]
                      if __frame7[6] then
                        __frame7[7] = __frame7[6]()
                      else
                        __frame7[3] = {}
                        __frame7[3]["tag"] = "0"
                        __frame7[3]["arg1"] = function(b)
                          return function(a)
                              return function(func)
                                  return function(__arg149)
                                      return function(__eta0)
                                          return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                        end
                                    end
                                end
                            end
                        end
                        __frame7[3]["arg2"] = function(a)
                          return function(__arg482)
                              return function(__eta0)
                                  return __arg482
                                end
                            end
                        end
                        __frame7[3]["arg3"] = function(b)
                          return function(a)
                              return function(__arg483)
                                  return function(__arg485)
                                      return function(__eta0)
                                          local __act17 = __arg483(__eta0)
                                          local __act16 = __arg485(__eta0)
                                          return __act17(__act16)
                                        end
                                    end
                                end
                            end
                        end
                        __frame7[4] = {}
                        __frame7[4]["tag"] = "0"
                        __frame7[4]["arg1"] = __frame7[3]
                        __frame7[4]["arg2"] = function(b)
                          return function(a)
                              return function(__arg644)
                                  return function(__arg645)
                                      return function(__eta0)
                                          local __act24 = __arg644(__eta0)
                                          return __arg645(__act24)(__eta0)
                                        end
                                    end
                                end
                            end
                        end
                        __frame7[4]["arg3"] = function(a)
                          return function(__arg647)
                              return function(__eta0)
                                  local __act51 = __arg647(__eta0)
                                  return __act51(__eta0)
                                end
                            end
                        end
                        __frame7[5] = {}
                        __frame7[5]["tag"] = "0"
                        __frame7[5]["arg1"] = __frame7[4]
                        __frame7[5]["arg2"] = function(a)
                          return function(__arg6794)
                              return __arg6794
                            end
                        end
                        __frame7[7] = idris["Foreign.nvimCommand"](nil)(__frame7[5])("echom 'Invalid message from the server'")
                      end
                      return __frame7[7]
                    end
                    __frame6[6] = __frame6[2][__frame6[1]["tag"]]
                    if __frame6[6] then
                      __frame6[7] = __frame6[6]()
                    else
                      __frame6[3] = {}
                      __frame6[3]["tag"] = "0"
                      __frame6[3]["arg1"] = function(b)
                        return function(a)
                            return function(func)
                                return function(__arg149)
                                    return function(__eta0)
                                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                      end
                                  end
                              end
                          end
                      end
                      __frame6[3]["arg2"] = function(a)
                        return function(__arg482)
                            return function(__eta0)
                                return __arg482
                              end
                          end
                      end
                      __frame6[3]["arg3"] = function(b)
                        return function(a)
                            return function(__arg483)
                                return function(__arg485)
                                    return function(__eta0)
                                        local __act17 = __arg483(__eta0)
                                        local __act16 = __arg485(__eta0)
                                        return __act17(__act16)
                                      end
                                  end
                              end
                          end
                      end
                      __frame6[4] = {}
                      __frame6[4]["tag"] = "0"
                      __frame6[4]["arg1"] = __frame6[3]
                      __frame6[4]["arg2"] = function(b)
                        return function(a)
                            return function(__arg644)
                                return function(__arg645)
                                    return function(__eta0)
                                        local __act24 = __arg644(__eta0)
                                        return __arg645(__act24)(__eta0)
                                      end
                                  end
                              end
                          end
                      end
                      __frame6[4]["arg3"] = function(a)
                        return function(__arg647)
                            return function(__eta0)
                                local __act51 = __arg647(__eta0)
                                return __act51(__eta0)
                              end
                          end
                      end
                      __frame6[5] = {}
                      __frame6[5]["tag"] = "0"
                      __frame6[5]["arg1"] = __frame6[4]
                      __frame6[5]["arg2"] = function(a)
                        return function(__arg6794)
                            return __arg6794
                          end
                      end
                      __frame6[7] = idris["Foreign.nvimCommand"](nil)(__frame6[5])("echom 'Invalid message from the server'")
                    end
                    return __frame6[7]
                  end
                  __frame5[6] = __frame5[2][__frame5[1]["tag"]]
                  if __frame5[6] then
                    __frame5[7] = __frame5[6]()
                  else
                    __frame5[3] = {}
                    __frame5[3]["tag"] = "0"
                    __frame5[3]["arg1"] = function(b)
                      return function(a)
                          return function(func)
                              return function(__arg149)
                                  return function(__eta0)
                                      return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                    end
                                end
                            end
                        end
                    end
                    __frame5[3]["arg2"] = function(a)
                      return function(__arg482)
                          return function(__eta0)
                              return __arg482
                            end
                        end
                    end
                    __frame5[3]["arg3"] = function(b)
                      return function(a)
                          return function(__arg483)
                              return function(__arg485)
                                  return function(__eta0)
                                      local __act17 = __arg483(__eta0)
                                      local __act16 = __arg485(__eta0)
                                      return __act17(__act16)
                                    end
                                end
                            end
                        end
                    end
                    __frame5[4] = {}
                    __frame5[4]["tag"] = "0"
                    __frame5[4]["arg1"] = __frame5[3]
                    __frame5[4]["arg2"] = function(b)
                      return function(a)
                          return function(__arg644)
                              return function(__arg645)
                                  return function(__eta0)
                                      local __act24 = __arg644(__eta0)
                                      return __arg645(__act24)(__eta0)
                                    end
                                end
                            end
                        end
                    end
                    __frame5[4]["arg3"] = function(a)
                      return function(__arg647)
                          return function(__eta0)
                              local __act51 = __arg647(__eta0)
                              return __act51(__eta0)
                            end
                        end
                    end
                    __frame5[5] = {}
                    __frame5[5]["tag"] = "0"
                    __frame5[5]["arg1"] = __frame5[4]
                    __frame5[5]["arg2"] = function(a)
                      return function(__arg6794)
                          return __arg6794
                        end
                    end
                    __frame5[7] = idris["Foreign.nvimCommand"](nil)(__frame5[5])("echom 'Invalid message from the server'")
                  end
                  return __frame5[7]
                end
                __frame4[6] = __frame4[2][__frame4[1]["tag"]]
                if __frame4[6] then
                  __frame4[7] = __frame4[6]()
                else
                  __frame4[3] = {}
                  __frame4[3]["tag"] = "0"
                  __frame4[3]["arg1"] = function(b)
                    return function(a)
                        return function(func)
                            return function(__arg149)
                                return function(__eta0)
                                    return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                  end
                              end
                          end
                      end
                  end
                  __frame4[3]["arg2"] = function(a)
                    return function(__arg482)
                        return function(__eta0)
                            return __arg482
                          end
                      end
                  end
                  __frame4[3]["arg3"] = function(b)
                    return function(a)
                        return function(__arg483)
                            return function(__arg485)
                                return function(__eta0)
                                    local __act17 = __arg483(__eta0)
                                    local __act16 = __arg485(__eta0)
                                    return __act17(__act16)
                                  end
                              end
                          end
                      end
                  end
                  __frame4[4] = {}
                  __frame4[4]["tag"] = "0"
                  __frame4[4]["arg1"] = __frame4[3]
                  __frame4[4]["arg2"] = function(b)
                    return function(a)
                        return function(__arg644)
                            return function(__arg645)
                                return function(__eta0)
                                    local __act24 = __arg644(__eta0)
                                    return __arg645(__act24)(__eta0)
                                  end
                              end
                          end
                      end
                  end
                  __frame4[4]["arg3"] = function(a)
                    return function(__arg647)
                        return function(__eta0)
                            local __act51 = __arg647(__eta0)
                            return __act51(__eta0)
                          end
                      end
                  end
                  __frame4[5] = {}
                  __frame4[5]["tag"] = "0"
                  __frame4[5]["arg1"] = __frame4[4]
                  __frame4[5]["arg2"] = function(a)
                    return function(__arg6794)
                        return __arg6794
                      end
                  end
                  __frame4[7] = idris["Foreign.nvimCommand"](nil)(__frame4[5])("echom 'Invalid message from the server'")
                end
                return __frame4[7]
              end
              __frame3[6] = __frame3[2][__frame3[1]["tag"]]
              if __frame3[6] then
                __frame3[7] = __frame3[6]()
              else
                __frame3[3] = {}
                __frame3[3]["tag"] = "0"
                __frame3[3]["arg1"] = function(b)
                  return function(a)
                      return function(func)
                          return function(__arg149)
                              return function(__eta0)
                                  return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                end
                            end
                        end
                    end
                end
                __frame3[3]["arg2"] = function(a)
                  return function(__arg482)
                      return function(__eta0)
                          return __arg482
                        end
                    end
                end
                __frame3[3]["arg3"] = function(b)
                  return function(a)
                      return function(__arg483)
                          return function(__arg485)
                              return function(__eta0)
                                  local __act17 = __arg483(__eta0)
                                  local __act16 = __arg485(__eta0)
                                  return __act17(__act16)
                                end
                            end
                        end
                    end
                end
                __frame3[4] = {}
                __frame3[4]["tag"] = "0"
                __frame3[4]["arg1"] = __frame3[3]
                __frame3[4]["arg2"] = function(b)
                  return function(a)
                      return function(__arg644)
                          return function(__arg645)
                              return function(__eta0)
                                  local __act24 = __arg644(__eta0)
                                  return __arg645(__act24)(__eta0)
                                end
                            end
                        end
                    end
                end
                __frame3[4]["arg3"] = function(a)
                  return function(__arg647)
                      return function(__eta0)
                          local __act51 = __arg647(__eta0)
                          return __act51(__eta0)
                        end
                    end
                end
                __frame3[5] = {}
                __frame3[5]["tag"] = "0"
                __frame3[5]["arg1"] = __frame3[4]
                __frame3[5]["arg2"] = function(a)
                  return function(__arg6794)
                      return __arg6794
                    end
                end
                __frame3[7] = idris["Foreign.nvimCommand"](nil)(__frame3[5])("echom 'Invalid message from the server'")
              end
              return __frame3[7]
            end
            __frame2[6] = __frame2[2][__frame2[1]["tag"]]
            if __frame2[6] then
              __frame2[7] = __frame2[6]()
            else
              __frame2[3] = {}
              __frame2[3]["tag"] = "0"
              __frame2[3]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta0)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                              end
                          end
                      end
                  end
              end
              __frame2[3]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta0)
                        return __arg482
                      end
                  end
              end
              __frame2[3]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta0)
                                local __act17 = __arg483(__eta0)
                                local __act16 = __arg485(__eta0)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame2[4] = {}
              __frame2[4]["tag"] = "0"
              __frame2[4]["arg1"] = __frame2[3]
              __frame2[4]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta0)
                                local __act24 = __arg644(__eta0)
                                return __arg645(__act24)(__eta0)
                              end
                          end
                      end
                  end
              end
              __frame2[4]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta0)
                        local __act51 = __arg647(__eta0)
                        return __act51(__eta0)
                      end
                  end
              end
              __frame2[5] = {}
              __frame2[5]["tag"] = "0"
              __frame2[5]["arg1"] = __frame2[4]
              __frame2[5]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              __frame2[7] = idris["Foreign.nvimCommand"](nil)(__frame2[5])("echom 'Invalid message from the server'")
            end
            return __frame2[7]
          end
          __frame1[2]["2"] = function()
            local __frame2 = {
              nil,
              nil,
              nil,
              nil,
              nil,
              nil,
              nil
            }
            local __e4 = __frame1[1]["arg1"]
            local __e5 = __frame1[1]["arg2"]
            __frame2[1] = __e5
            __frame2[2] = {
              nil
            }
            __frame2[2]["0"] = function()
              local __frame3 = {
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil
              }
              local __e30 = __frame2[1]["arg1"]
              __frame3[1] = __e30
              __frame3[2] = {
                nil
              }
              __frame3[2]["1"] = function()
                local __frame4 = {
                  nil,
                  nil,
                  nil,
                  nil,
                  nil,
                  nil,
                  nil
                }
                local __e32 = __frame3[1]["arg1"]
                __frame4[1] = __e32
                __frame4[2] = {
                  nil
                }
                __frame4[2]["1"] = function()
                  local __e34 = __frame4[1]["arg1"]
                  return function(__eta0)
                      local __act24 = idris["Plugin.currenttime"](__eta0)
                      local __act24 = idris["Plugin.writeToBuffer"](1)(idris["Prelude.Types.Strings.++"]("-- Error ")(idris["Prelude.Types.Strings.++"](__act24)(idris["Prelude.Types.Strings.++"]("\n")(__e34))))(__eta0)
                      return idris["Foreign.deleteCmdInHistory"](__e4)(__eta0)
                    end
                end
                __frame4[6] = __frame4[2][__frame4[1]["tag"]]
                if __frame4[6] then
                  __frame4[7] = __frame4[6]()
                else
                  __frame4[3] = {}
                  __frame4[3]["tag"] = "0"
                  __frame4[3]["arg1"] = function(b)
                    return function(a)
                        return function(func)
                            return function(__arg149)
                                return function(__eta0)
                                    return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                  end
                              end
                          end
                      end
                  end
                  __frame4[3]["arg2"] = function(a)
                    return function(__arg482)
                        return function(__eta0)
                            return __arg482
                          end
                      end
                  end
                  __frame4[3]["arg3"] = function(b)
                    return function(a)
                        return function(__arg483)
                            return function(__arg485)
                                return function(__eta0)
                                    local __act17 = __arg483(__eta0)
                                    local __act16 = __arg485(__eta0)
                                    return __act17(__act16)
                                  end
                              end
                          end
                      end
                  end
                  __frame4[4] = {}
                  __frame4[4]["tag"] = "0"
                  __frame4[4]["arg1"] = __frame4[3]
                  __frame4[4]["arg2"] = function(b)
                    return function(a)
                        return function(__arg644)
                            return function(__arg645)
                                return function(__eta0)
                                    local __act24 = __arg644(__eta0)
                                    return __arg645(__act24)(__eta0)
                                  end
                              end
                          end
                      end
                  end
                  __frame4[4]["arg3"] = function(a)
                    return function(__arg647)
                        return function(__eta0)
                            local __act51 = __arg647(__eta0)
                            return __act51(__eta0)
                          end
                      end
                  end
                  __frame4[5] = {}
                  __frame4[5]["tag"] = "0"
                  __frame4[5]["arg1"] = __frame4[4]
                  __frame4[5]["arg2"] = function(a)
                    return function(__arg6794)
                        return __arg6794
                      end
                  end
                  __frame4[7] = idris["Foreign.nvimCommand"](nil)(__frame4[5])("echom 'Invalid message from the server'")
                end
                return __frame4[7]
              end
              __frame3[6] = __frame3[2][__frame3[1]["tag"]]
              if __frame3[6] then
                __frame3[7] = __frame3[6]()
              else
                __frame3[3] = {}
                __frame3[3]["tag"] = "0"
                __frame3[3]["arg1"] = function(b)
                  return function(a)
                      return function(func)
                          return function(__arg149)
                              return function(__eta0)
                                  return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                end
                            end
                        end
                    end
                end
                __frame3[3]["arg2"] = function(a)
                  return function(__arg482)
                      return function(__eta0)
                          return __arg482
                        end
                    end
                end
                __frame3[3]["arg3"] = function(b)
                  return function(a)
                      return function(__arg483)
                          return function(__arg485)
                              return function(__eta0)
                                  local __act17 = __arg483(__eta0)
                                  local __act16 = __arg485(__eta0)
                                  return __act17(__act16)
                                end
                            end
                        end
                    end
                end
                __frame3[4] = {}
                __frame3[4]["tag"] = "0"
                __frame3[4]["arg1"] = __frame3[3]
                __frame3[4]["arg2"] = function(b)
                  return function(a)
                      return function(__arg644)
                          return function(__arg645)
                              return function(__eta0)
                                  local __act24 = __arg644(__eta0)
                                  return __arg645(__act24)(__eta0)
                                end
                            end
                        end
                    end
                end
                __frame3[4]["arg3"] = function(a)
                  return function(__arg647)
                      return function(__eta0)
                          local __act51 = __arg647(__eta0)
                          return __act51(__eta0)
                        end
                    end
                end
                __frame3[5] = {}
                __frame3[5]["tag"] = "0"
                __frame3[5]["arg1"] = __frame3[4]
                __frame3[5]["arg2"] = function(a)
                  return function(__arg6794)
                      return __arg6794
                    end
                end
                __frame3[7] = idris["Foreign.nvimCommand"](nil)(__frame3[5])("echom 'Invalid message from the server'")
              end
              return __frame3[7]
            end
            __frame2[6] = __frame2[2][__frame2[1]["tag"]]
            if __frame2[6] then
              __frame2[7] = __frame2[6]()
            else
              __frame2[3] = {}
              __frame2[3]["tag"] = "0"
              __frame2[3]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta0)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                              end
                          end
                      end
                  end
              end
              __frame2[3]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta0)
                        return __arg482
                      end
                  end
              end
              __frame2[3]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta0)
                                local __act17 = __arg483(__eta0)
                                local __act16 = __arg485(__eta0)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame2[4] = {}
              __frame2[4]["tag"] = "0"
              __frame2[4]["arg1"] = __frame2[3]
              __frame2[4]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta0)
                                local __act24 = __arg644(__eta0)
                                return __arg645(__act24)(__eta0)
                              end
                          end
                      end
                  end
              end
              __frame2[4]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta0)
                        local __act51 = __arg647(__eta0)
                        return __act51(__eta0)
                      end
                  end
              end
              __frame2[5] = {}
              __frame2[5]["tag"] = "0"
              __frame2[5]["arg1"] = __frame2[4]
              __frame2[5]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              __frame2[7] = idris["Foreign.nvimCommand"](nil)(__frame2[5])("echom 'Invalid message from the server'")
            end
            return __frame2[7]
          end
          __frame1[2]["3"] = function()
            local __e6 = __frame1[1]["arg1"]
            local __e7 = __frame1[1]["arg2"]
            return function(__eta0)
                local __act24 = idris["Plugin.currenttime"](__eta0)
                local msg = idris["Prelude.Types.Strings.++"](__act24)(idris["Prelude.Types.Strings.++"]("\nServer message: \"")(idris["Prelude.Types.Strings.++"](__e7)("\"")))
                local __act25 = idris["Plugin.writeToBuffer"](0)(msg)(__eta0)
                return idris["Foreign.deleteCmdInHistory"](__e6)(__eta0)
              end
          end
          __frame1[2]["4"] = function()
            local __e8 = __frame1[1]["arg1"]
            return function(__eta0)
                return idris["Foreign.deleteCmdInHistory"](__e8)(__eta0)
              end
          end
          __frame1[2]["5"] = function()
            local __frame2 = {
              nil,
              nil,
              nil,
              nil,
              nil,
              nil,
              nil
            }
            local __e10 = __frame1[1]["arg1"]
            __frame2[1] = __e10
            __frame2[2] = {
              nil
            }
            __frame2[2]["0"] = function()
              local __frame3 = {
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil
              }
              local __e35 = __frame2[1]["arg1"]
              __frame3[1] = __e35
              __frame3[2] = {
                nil
              }
              __frame3[2]["1"] = function()
                local __frame4 = {
                  nil,
                  nil,
                  nil,
                  nil,
                  nil,
                  nil,
                  nil
                }
                local __e37 = __frame3[1]["arg1"]
                local __e38 = __frame3[1]["arg2"]
                __frame4[1] = __e37
                __frame4[2] = {
                  nil
                }
                __frame4[2]["3"] = function()
                  local __frame5 = {
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  local __e39 = __frame4[1]["arg1"]
                  __frame5[1] = __e38
                  __frame5[2] = {
                    nil
                  }
                  __frame5[2]["1"] = function()
                    local __frame6 = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    local __e41 = __frame5[1]["arg1"]
                    local __e42 = __frame5[1]["arg2"]
                    __frame6[1] = __e41
                    __frame6[2] = {
                      nil
                    }
                    __frame6[2]["3"] = function()
                      local __frame7 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      local __e43 = __frame6[1]["arg1"]
                      __frame7[1] = __e42
                      __frame7[2] = {
                        nil
                      }
                      __frame7[2]["0"] = function()
                        return function(__eta0)
                            local __act24 = idris["Plugin.currenttime"](__eta0)
                            local msg = idris["Prelude.Types.Strings.++"](__act24)(idris["Prelude.Types.Strings.++"]("\nIdris2 IDE Mode server version ")(idris["Prelude.Types.Strings.++"](idris["Prelude.Show.show_Show__Integer"](__e39))(idris["Prelude.Types.Strings.++"](".")(idris["Prelude.Show.show_Show__Integer"](__e43)))))
                            return idris["Plugin.writeToBuffer"](0)(msg)(__eta0)
                          end
                      end
                      __frame7[6] = __frame7[2][__frame7[1]["tag"]]
                      if __frame7[6] then
                        __frame7[7] = __frame7[6]()
                      else
                        __frame7[3] = {}
                        __frame7[3]["tag"] = "0"
                        __frame7[3]["arg1"] = function(b)
                          return function(a)
                              return function(func)
                                  return function(__arg149)
                                      return function(__eta0)
                                          return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                        end
                                    end
                                end
                            end
                        end
                        __frame7[3]["arg2"] = function(a)
                          return function(__arg482)
                              return function(__eta0)
                                  return __arg482
                                end
                            end
                        end
                        __frame7[3]["arg3"] = function(b)
                          return function(a)
                              return function(__arg483)
                                  return function(__arg485)
                                      return function(__eta0)
                                          local __act17 = __arg483(__eta0)
                                          local __act16 = __arg485(__eta0)
                                          return __act17(__act16)
                                        end
                                    end
                                end
                            end
                        end
                        __frame7[4] = {}
                        __frame7[4]["tag"] = "0"
                        __frame7[4]["arg1"] = __frame7[3]
                        __frame7[4]["arg2"] = function(b)
                          return function(a)
                              return function(__arg644)
                                  return function(__arg645)
                                      return function(__eta0)
                                          local __act24 = __arg644(__eta0)
                                          return __arg645(__act24)(__eta0)
                                        end
                                    end
                                end
                            end
                        end
                        __frame7[4]["arg3"] = function(a)
                          return function(__arg647)
                              return function(__eta0)
                                  local __act51 = __arg647(__eta0)
                                  return __act51(__eta0)
                                end
                            end
                        end
                        __frame7[5] = {}
                        __frame7[5]["tag"] = "0"
                        __frame7[5]["arg1"] = __frame7[4]
                        __frame7[5]["arg2"] = function(a)
                          return function(__arg6794)
                              return __arg6794
                            end
                        end
                        __frame7[7] = idris["Foreign.nvimCommand"](nil)(__frame7[5])("echom 'Invalid message from the server'")
                      end
                      return __frame7[7]
                    end
                    __frame6[6] = __frame6[2][__frame6[1]["tag"]]
                    if __frame6[6] then
                      __frame6[7] = __frame6[6]()
                    else
                      __frame6[3] = {}
                      __frame6[3]["tag"] = "0"
                      __frame6[3]["arg1"] = function(b)
                        return function(a)
                            return function(func)
                                return function(__arg149)
                                    return function(__eta0)
                                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                      end
                                  end
                              end
                          end
                      end
                      __frame6[3]["arg2"] = function(a)
                        return function(__arg482)
                            return function(__eta0)
                                return __arg482
                              end
                          end
                      end
                      __frame6[3]["arg3"] = function(b)
                        return function(a)
                            return function(__arg483)
                                return function(__arg485)
                                    return function(__eta0)
                                        local __act17 = __arg483(__eta0)
                                        local __act16 = __arg485(__eta0)
                                        return __act17(__act16)
                                      end
                                  end
                              end
                          end
                      end
                      __frame6[4] = {}
                      __frame6[4]["tag"] = "0"
                      __frame6[4]["arg1"] = __frame6[3]
                      __frame6[4]["arg2"] = function(b)
                        return function(a)
                            return function(__arg644)
                                return function(__arg645)
                                    return function(__eta0)
                                        local __act24 = __arg644(__eta0)
                                        return __arg645(__act24)(__eta0)
                                      end
                                  end
                              end
                          end
                      end
                      __frame6[4]["arg3"] = function(a)
                        return function(__arg647)
                            return function(__eta0)
                                local __act51 = __arg647(__eta0)
                                return __act51(__eta0)
                              end
                          end
                      end
                      __frame6[5] = {}
                      __frame6[5]["tag"] = "0"
                      __frame6[5]["arg1"] = __frame6[4]
                      __frame6[5]["arg2"] = function(a)
                        return function(__arg6794)
                            return __arg6794
                          end
                      end
                      __frame6[7] = idris["Foreign.nvimCommand"](nil)(__frame6[5])("echom 'Invalid message from the server'")
                    end
                    return __frame6[7]
                  end
                  __frame5[6] = __frame5[2][__frame5[1]["tag"]]
                  if __frame5[6] then
                    __frame5[7] = __frame5[6]()
                  else
                    __frame5[3] = {}
                    __frame5[3]["tag"] = "0"
                    __frame5[3]["arg1"] = function(b)
                      return function(a)
                          return function(func)
                              return function(__arg149)
                                  return function(__eta0)
                                      return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                    end
                                end
                            end
                        end
                    end
                    __frame5[3]["arg2"] = function(a)
                      return function(__arg482)
                          return function(__eta0)
                              return __arg482
                            end
                        end
                    end
                    __frame5[3]["arg3"] = function(b)
                      return function(a)
                          return function(__arg483)
                              return function(__arg485)
                                  return function(__eta0)
                                      local __act17 = __arg483(__eta0)
                                      local __act16 = __arg485(__eta0)
                                      return __act17(__act16)
                                    end
                                end
                            end
                        end
                    end
                    __frame5[4] = {}
                    __frame5[4]["tag"] = "0"
                    __frame5[4]["arg1"] = __frame5[3]
                    __frame5[4]["arg2"] = function(b)
                      return function(a)
                          return function(__arg644)
                              return function(__arg645)
                                  return function(__eta0)
                                      local __act24 = __arg644(__eta0)
                                      return __arg645(__act24)(__eta0)
                                    end
                                end
                            end
                        end
                    end
                    __frame5[4]["arg3"] = function(a)
                      return function(__arg647)
                          return function(__eta0)
                              local __act51 = __arg647(__eta0)
                              return __act51(__eta0)
                            end
                        end
                    end
                    __frame5[5] = {}
                    __frame5[5]["tag"] = "0"
                    __frame5[5]["arg1"] = __frame5[4]
                    __frame5[5]["arg2"] = function(a)
                      return function(__arg6794)
                          return __arg6794
                        end
                    end
                    __frame5[7] = idris["Foreign.nvimCommand"](nil)(__frame5[5])("echom 'Invalid message from the server'")
                  end
                  return __frame5[7]
                end
                __frame4[6] = __frame4[2][__frame4[1]["tag"]]
                if __frame4[6] then
                  __frame4[7] = __frame4[6]()
                else
                  __frame4[3] = {}
                  __frame4[3]["tag"] = "0"
                  __frame4[3]["arg1"] = function(b)
                    return function(a)
                        return function(func)
                            return function(__arg149)
                                return function(__eta0)
                                    return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                  end
                              end
                          end
                      end
                  end
                  __frame4[3]["arg2"] = function(a)
                    return function(__arg482)
                        return function(__eta0)
                            return __arg482
                          end
                      end
                  end
                  __frame4[3]["arg3"] = function(b)
                    return function(a)
                        return function(__arg483)
                            return function(__arg485)
                                return function(__eta0)
                                    local __act17 = __arg483(__eta0)
                                    local __act16 = __arg485(__eta0)
                                    return __act17(__act16)
                                  end
                              end
                          end
                      end
                  end
                  __frame4[4] = {}
                  __frame4[4]["tag"] = "0"
                  __frame4[4]["arg1"] = __frame4[3]
                  __frame4[4]["arg2"] = function(b)
                    return function(a)
                        return function(__arg644)
                            return function(__arg645)
                                return function(__eta0)
                                    local __act24 = __arg644(__eta0)
                                    return __arg645(__act24)(__eta0)
                                  end
                              end
                          end
                      end
                  end
                  __frame4[4]["arg3"] = function(a)
                    return function(__arg647)
                        return function(__eta0)
                            local __act51 = __arg647(__eta0)
                            return __act51(__eta0)
                          end
                      end
                  end
                  __frame4[5] = {}
                  __frame4[5]["tag"] = "0"
                  __frame4[5]["arg1"] = __frame4[4]
                  __frame4[5]["arg2"] = function(a)
                    return function(__arg6794)
                        return __arg6794
                      end
                  end
                  __frame4[7] = idris["Foreign.nvimCommand"](nil)(__frame4[5])("echom 'Invalid message from the server'")
                end
                return __frame4[7]
              end
              __frame3[6] = __frame3[2][__frame3[1]["tag"]]
              if __frame3[6] then
                __frame3[7] = __frame3[6]()
              else
                __frame3[3] = {}
                __frame3[3]["tag"] = "0"
                __frame3[3]["arg1"] = function(b)
                  return function(a)
                      return function(func)
                          return function(__arg149)
                              return function(__eta0)
                                  return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                end
                            end
                        end
                    end
                end
                __frame3[3]["arg2"] = function(a)
                  return function(__arg482)
                      return function(__eta0)
                          return __arg482
                        end
                    end
                end
                __frame3[3]["arg3"] = function(b)
                  return function(a)
                      return function(__arg483)
                          return function(__arg485)
                              return function(__eta0)
                                  local __act17 = __arg483(__eta0)
                                  local __act16 = __arg485(__eta0)
                                  return __act17(__act16)
                                end
                            end
                        end
                    end
                end
                __frame3[4] = {}
                __frame3[4]["tag"] = "0"
                __frame3[4]["arg1"] = __frame3[3]
                __frame3[4]["arg2"] = function(b)
                  return function(a)
                      return function(__arg644)
                          return function(__arg645)
                              return function(__eta0)
                                  local __act24 = __arg644(__eta0)
                                  return __arg645(__act24)(__eta0)
                                end
                            end
                        end
                    end
                end
                __frame3[4]["arg3"] = function(a)
                  return function(__arg647)
                      return function(__eta0)
                          local __act51 = __arg647(__eta0)
                          return __act51(__eta0)
                        end
                    end
                end
                __frame3[5] = {}
                __frame3[5]["tag"] = "0"
                __frame3[5]["arg1"] = __frame3[4]
                __frame3[5]["arg2"] = function(a)
                  return function(__arg6794)
                      return __arg6794
                    end
                end
                __frame3[7] = idris["Foreign.nvimCommand"](nil)(__frame3[5])("echom 'Invalid message from the server'")
              end
              return __frame3[7]
            end
            __frame2[6] = __frame2[2][__frame2[1]["tag"]]
            if __frame2[6] then
              __frame2[7] = __frame2[6]()
            else
              __frame2[3] = {}
              __frame2[3]["tag"] = "0"
              __frame2[3]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta0)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                              end
                          end
                      end
                  end
              end
              __frame2[3]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta0)
                        return __arg482
                      end
                  end
              end
              __frame2[3]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta0)
                                local __act17 = __arg483(__eta0)
                                local __act16 = __arg485(__eta0)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame2[4] = {}
              __frame2[4]["tag"] = "0"
              __frame2[4]["arg1"] = __frame2[3]
              __frame2[4]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta0)
                                local __act24 = __arg644(__eta0)
                                return __arg645(__act24)(__eta0)
                              end
                          end
                      end
                  end
              end
              __frame2[4]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta0)
                        local __act51 = __arg647(__eta0)
                        return __act51(__eta0)
                      end
                  end
              end
              __frame2[5] = {}
              __frame2[5]["tag"] = "0"
              __frame2[5]["arg1"] = __frame2[4]
              __frame2[5]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              __frame2[7] = idris["Foreign.nvimCommand"](nil)(__frame2[5])("echom 'Invalid message from the server'")
            end
            return __frame2[7]
          end
          __frame1[6] = __frame1[2][__frame1[1]["tag"]]
          if __frame1[6] then
            __frame1[7] = __frame1[6]()
          else
            __frame1[3] = {}
            __frame1[3]["tag"] = "0"
            __frame1[3]["arg1"] = function(b)
              return function(a)
                  return function(func)
                      return function(__arg149)
                          return function(__eta0)
                              return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                            end
                        end
                    end
                end
            end
            __frame1[3]["arg2"] = function(a)
              return function(__arg482)
                  return function(__eta0)
                      return __arg482
                    end
                end
            end
            __frame1[3]["arg3"] = function(b)
              return function(a)
                  return function(__arg483)
                      return function(__arg485)
                          return function(__eta0)
                              local __act17 = __arg483(__eta0)
                              local __act16 = __arg485(__eta0)
                              return __act17(__act16)
                            end
                        end
                    end
                end
            end
            __frame1[4] = {}
            __frame1[4]["tag"] = "0"
            __frame1[4]["arg1"] = __frame1[3]
            __frame1[4]["arg2"] = function(b)
              return function(a)
                  return function(__arg644)
                      return function(__arg645)
                          return function(__eta0)
                              local __act24 = __arg644(__eta0)
                              return __arg645(__act24)(__eta0)
                            end
                        end
                    end
                end
            end
            __frame1[4]["arg3"] = function(a)
              return function(__arg647)
                  return function(__eta0)
                      local __act51 = __arg647(__eta0)
                      return __act51(__eta0)
                    end
                end
            end
            __frame1[5] = {}
            __frame1[5]["tag"] = "0"
            __frame1[5]["arg1"] = __frame1[4]
            __frame1[5]["arg2"] = function(a)
              return function(__arg6794)
                  return __arg6794
                end
            end
            __frame1[7] = idris["Foreign.nvimCommand"](nil)(__frame1[5])("echom 'Invalid message from the server'")
          end
          return __frame1[7]
        end)()
    end
end
idris["Plugin.case[7896]case block in case block in connectIdris2"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return function(__arg9)
                                      return function(__arg10)
                                          return function(__arg11)
                                              return (function()
                                                  local __frame1 = {
                                                    nil,
                                                    nil,
                                                    nil,
                                                    nil
                                                  }
                                                  __frame1[1] = __arg11
                                                  __frame1[2] = {
                                                    nil,
                                                    nil
                                                  }
                                                  __frame1[2]["1"] = function()
                                                    local __e1 = __frame1[1]["arg1"]
                                                    return idris["Plugin.process"](__arg2)(__e1)
                                                  end
                                                  __frame1[2]["0"] = function()
                                                    local __frame2 = {
                                                      nil,
                                                      nil,
                                                      nil
                                                    }
                                                    __frame2[1] = {}
                                                    __frame2[1]["tag"] = "0"
                                                    __frame2[1]["arg1"] = function(b)
                                                      return function(a)
                                                          return function(func)
                                                              return function(__arg149)
                                                                  return function(__eta0)
                                                                      return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                    __frame2[1]["arg2"] = function(a)
                                                      return function(__arg482)
                                                          return function(__eta0)
                                                              return __arg482
                                                            end
                                                        end
                                                    end
                                                    __frame2[1]["arg3"] = function(b)
                                                      return function(a)
                                                          return function(__arg483)
                                                              return function(__arg485)
                                                                  return function(__eta0)
                                                                      local __act17 = __arg483(__eta0)
                                                                      local __act16 = __arg485(__eta0)
                                                                      return __act17(__act16)
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                    __frame2[2] = {}
                                                    __frame2[2]["tag"] = "0"
                                                    __frame2[2]["arg1"] = __frame2[1]
                                                    __frame2[2]["arg2"] = function(b)
                                                      return function(a)
                                                          return function(__arg644)
                                                              return function(__arg645)
                                                                  return function(__eta0)
                                                                      local __act24 = __arg644(__eta0)
                                                                      return __arg645(__act24)(__eta0)
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                    __frame2[2]["arg3"] = function(a)
                                                      return function(__arg647)
                                                          return function(__eta0)
                                                              local __act51 = __arg647(__eta0)
                                                              return __act51(__eta0)
                                                            end
                                                        end
                                                    end
                                                    __frame2[3] = {}
                                                    __frame2[3]["tag"] = "0"
                                                    __frame2[3]["arg1"] = __frame2[2]
                                                    __frame2[3]["arg2"] = function(a)
                                                      return function(__arg6794)
                                                          return __arg6794
                                                        end
                                                    end
                                                    return idris["Foreign.nvimCommand"](nil)(__frame2[3])(idris["Prelude.Types.Strings.++"]("echom 'invalid response: ")(idris["Prelude.Types.Strings.++"](idris["Idris.IDEMode.Commands.show_Show__SExp"](__arg10))("'")))
                                                  end
                                                  __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                                                  if __frame1[3] then
                                                    __frame1[4] = __frame1[3]()
                                                  else
                                                    idris["error"]("Impossible else branch")
                                                  end
                                                  return __frame1[4]
                                                end)()
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Plugin.case[7868]case block in connectIdris2"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return function(__arg9)
                                      return function(__arg10)
                                          return (function()
                                              local __frame1 = {
                                                nil,
                                                nil,
                                                nil,
                                                nil
                                              }
                                              __frame1[1] = __arg10
                                              __frame1[2] = {
                                                nil,
                                                nil
                                              }
                                              __frame1[2]["1"] = function()
                                                local __e2 = __frame1[1]["arg1"]
                                                return idris["Plugin.case[7896]case block in case block in connectIdris2"](__arg0)(__arg1)(__arg2)(__arg3)(__arg4)(__arg5)(__arg6)(__arg7)(__arg8)(__arg9)(__e2)(idris["Commands.getResult"](__e2))
                                              end
                                              __frame1[2]["0"] = function()
                                                local __frame2 = {
                                                  nil,
                                                  nil,
                                                  nil,
                                                  nil
                                                }
                                                local __e5 = __frame1[1]["arg1"]
                                                __frame2[1] = {}
                                                __frame2[1]["tag"] = "0"
                                                __frame2[1]["arg1"] = function(b)
                                                  return function(a)
                                                      return function(func)
                                                          return function(__arg149)
                                                              return function(__eta0)
                                                                  return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                                __frame2[1]["arg2"] = function(a)
                                                  return function(__arg482)
                                                      return function(__eta0)
                                                          return __arg482
                                                        end
                                                    end
                                                end
                                                __frame2[1]["arg3"] = function(b)
                                                  return function(a)
                                                      return function(__arg483)
                                                          return function(__arg485)
                                                              return function(__eta0)
                                                                  local __act17 = __arg483(__eta0)
                                                                  local __act16 = __arg485(__eta0)
                                                                  return __act17(__act16)
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                                __frame2[2] = {}
                                                __frame2[2]["tag"] = "0"
                                                __frame2[2]["arg1"] = __frame2[1]
                                                __frame2[2]["arg2"] = function(b)
                                                  return function(a)
                                                      return function(__arg644)
                                                          return function(__arg645)
                                                              return function(__eta0)
                                                                  local __act24 = __arg644(__eta0)
                                                                  return __arg645(__act24)(__eta0)
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                                __frame2[2]["arg3"] = function(a)
                                                  return function(__arg647)
                                                      return function(__eta0)
                                                          local __act51 = __arg647(__eta0)
                                                          return __act51(__eta0)
                                                        end
                                                    end
                                                end
                                                __frame2[3] = {}
                                                __frame2[3]["tag"] = "0"
                                                __frame2[3]["arg1"] = __frame2[2]
                                                __frame2[3]["arg2"] = function(a)
                                                  return function(__arg6794)
                                                      return __arg6794
                                                    end
                                                end
                                                __frame2[4] = {}
                                                __frame2[4]["tag"] = "0"
                                                __frame2[4]["arg1"] = function(x)
                                                  return idris["Parser.Lexer.Source.show_Show__Token"](x)
                                                end
                                                __frame2[4]["arg2"] = function(d)
                                                  return function(x)
                                                      return idris["Parser.Lexer.Source.showPrec_Show__Token"](d)(x)
                                                    end
                                                end
                                                return idris["Foreign.nvimCommand"](nil)(__frame2[3])(idris["Prelude.Types.Strings.++"]("echom 'invalid response: ")(idris["Prelude.Types.Strings.++"](idris["Parser.Support.show_Show__(ParseError $tok)"](nil)(__frame2[4])(__e5))("'")))
                                              end
                                              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                                              if __frame1[3] then
                                                __frame1[4] = __frame1[3]()
                                              else
                                                idris["error"]("Impossible else branch")
                                              end
                                              return __frame1[4]
                                            end)()
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Text.Lexer.digit"] = (function()
  return idris["Text.Lexer.Core.pred"](function(__eta0)
      return idris["Prelude.Types.isDigit"](__eta0)
    end)
end)()
idris["Text.Lexer.digits"] = (function()
  return idris["Text.Lexer.some"](idris["Text.Lexer.digit"])
end)()
idris["Idris.IDEMode.Parser.ideTokens"] = (function()
  local __frame1 = {
    nil,
    nil,
    nil,
    nil,
    nil,
    nil,
    nil,
    nil,
    nil
  }
  __frame1[1] = {}
  __frame1[1]["tag"] = "0"
  __frame1[1]["arg1"] = idris["Text.Lexer.digits"]
  __frame1[1]["arg2"] = function(x)
    local __frame2 = {
      nil
    }
    __frame2[1] = {}
    __frame2[1]["tag"] = "2"
    __frame2[1]["arg1"] = idris["Prelude.Types.cast_Cast__String_Integer"](x)
    return __frame2[1]
  end
  __frame1[2] = {}
  __frame1[2]["tag"] = "0"
  __frame1[2]["arg1"] = idris["Text.Lexer.stringLit"]
  __frame1[2]["arg2"] = function(x)
    local __frame2 = {
      nil
    }
    __frame2[1] = {}
    __frame2[1]["tag"] = "3"
    __frame2[1]["arg1"] = idris["Data.Maybe.fromMaybe"](nil)(function()
      return ""
    end)(idris["Parser.Support.escape"](idris["Utils.String.stripQuotes"](x)))
    return __frame2[1]
  end
  __frame1[3] = {}
  __frame1[3]["tag"] = "0"
  __frame1[3]["arg1"] = idris["Parser.Lexer.Common.identAllowDashes"]
  __frame1[3]["arg2"] = function(x)
    local __frame2 = {
      nil
    }
    __frame2[1] = {}
    __frame2[1]["tag"] = "5"
    __frame2[1]["arg1"] = x
    return __frame2[1]
  end
  __frame1[4] = {}
  __frame1[4]["tag"] = "0"
  __frame1[4]["arg1"] = idris["Text.Lexer.space"]
  __frame1[4]["arg2"] = function(__eta0)
    local __frame2 = {
      nil
    }
    __frame2[1] = {}
    __frame2[1]["tag"] = "9"
    __frame2[1]["arg1"] = __eta0
    return __frame2[1]
  end
  __frame1[5] = {}
  __frame1[5]["tag"] = "0"
  __frame1[6] = {}
  __frame1[6]["tag"] = "1"
  __frame1[6]["arg1"] = __frame1[4]
  __frame1[6]["arg2"] = __frame1[5]
  __frame1[7] = {}
  __frame1[7]["tag"] = "1"
  __frame1[7]["arg1"] = __frame1[3]
  __frame1[7]["arg2"] = __frame1[6]
  __frame1[8] = {}
  __frame1[8]["tag"] = "1"
  __frame1[8]["arg1"] = __frame1[2]
  __frame1[8]["arg2"] = __frame1[7]
  __frame1[9] = {}
  __frame1[9]["tag"] = "1"
  __frame1[9]["arg1"] = __frame1[1]
  __frame1[9]["arg2"] = __frame1[8]
  return idris["Prelude.Types.List.++"](nil)(idris["Prelude.Types.map_Functor__List"](nil)(nil)(function(x)
      local __frame2 = {
        nil
      }
      __frame2[1] = {}
      __frame2[1]["tag"] = "0"
      __frame2[1]["arg1"] = idris["Text.Lexer.exact"](x)
      __frame2[1]["arg2"] = function(__eta0)
        local __frame3 = {
          nil
        }
        __frame3[1] = {}
        __frame3[1]["tag"] = "8"
        __frame3[1]["arg1"] = __eta0
        return __frame3[1]
      end
      return __frame2[1]
    end)(idris["Idris.IDEMode.Parser.symbols"]))(__frame1[9])
end)()
idris["Idris.IDEMode.Parser.idelex"] = function(__arg0)
  return (function()
      return idris["Idris.IDEMode.Parser.case[405]idelex"](__arg0)(idris["Text.Lexer.Core.lex"](nil)(idris["Idris.IDEMode.Parser.ideTokens"])(__arg0))
    end)()
end
idris["Idris.IDEMode.Parser.ideParser"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  return idris["Prelude.Types.>>=_Monad__(Either $e)"](nil)(nil)(nil)(idris["Utils.Either.mapError"](nil)(nil)(nil)(function(__eta0)
                      local __frame2 = {
                        nil
                      }
                      __frame2[1] = {}
                      __frame2[1]["tag"] = "1"
                      __frame2[1]["arg1"] = __eta0
                      return __frame2[1]
                    end)(idris["Idris.IDEMode.Parser.idelex"](__arg2)))(function(toks)
                      return idris["Prelude.Types.>>=_Monad__(Either $e)"](nil)(nil)(nil)(idris["Utils.Either.mapError"](nil)(nil)(nil)(function(__eta0)
                          return idris["Parser.Support.toGenericParsingError"](nil)(__eta0)
                        end)(idris["Text.Parser.Core.parse"](nil)(nil)(__arg1)(__arg3)(toks)))(function(parsed)
                          local __frame3 = {
                            nil
                          }
                          __frame3[1] = {}
                          __frame3[1]["tag"] = "1"
                          __frame3[1]["arg1"] = idris["Builtin.fst"](nil)(nil)(parsed)
                          return __frame3[1]
                        end)
                    end)
                end)()
            end
        end
    end
end
idris["Idris.IDEMode.Parser.parseSExp"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "8"
      __frame1[1]["arg1"] = 1
      __frame1[1]["arg2"] = idris["Idris.IDEMode.Parser.sexp"]
      __frame1[1]["arg3"] = function()
        return function(c)
            local __frame3 = {
              nil
            }
            __frame3[1] = {}
            __frame3[1]["tag"] = "9"
            __frame3[1]["arg1"] = 1
            __frame3[1]["arg2"] = 1
            __frame3[1]["arg3"] = idris["Parser.Rule.Source.eoi"]
            __frame3[1]["arg4"] = function(___704)
              local __frame4 = {
                nil
              }
              __frame4[1] = {}
              __frame4[1]["tag"] = "0"
              __frame4[1]["arg1"] = c
              return __frame4[1]
            end
            return __frame3[1]
          end
      end
      return idris["Idris.IDEMode.Parser.ideParser"](nil)(0)(__arg0)(__frame1[1])
    end)()
end
idris["Plugin.case[7817]connectIdris2"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return function(__arg9)
                                      return function(__arg10)
                                          return (function()
                                              local __frame1 = {
                                                nil,
                                                nil,
                                                nil,
                                                nil
                                              }
                                              __frame1[1] = __arg10
                                              __frame1[2] = {
                                                nil,
                                                nil
                                              }
                                              __frame1[2][0] = function()
                                                local __frame2 = {
                                                  nil,
                                                  nil,
                                                  nil
                                                }
                                                __frame2[1] = {}
                                                __frame2[1]["tag"] = "0"
                                                __frame2[1]["arg1"] = function(b)
                                                  return function(a)
                                                      return function(func)
                                                          return function(__arg149)
                                                              return function(__eta0)
                                                                  return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                                __frame2[1]["arg2"] = function(a)
                                                  return function(__arg482)
                                                      return function(__eta0)
                                                          return __arg482
                                                        end
                                                    end
                                                end
                                                __frame2[1]["arg3"] = function(b)
                                                  return function(a)
                                                      return function(__arg483)
                                                          return function(__arg485)
                                                              return function(__eta0)
                                                                  local __act17 = __arg483(__eta0)
                                                                  local __act16 = __arg485(__eta0)
                                                                  return __act17(__act16)
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                                __frame2[2] = {}
                                                __frame2[2]["tag"] = "0"
                                                __frame2[2]["arg1"] = __frame2[1]
                                                __frame2[2]["arg2"] = function(b)
                                                  return function(a)
                                                      return function(__arg644)
                                                          return function(__arg645)
                                                              return function(__eta0)
                                                                  local __act24 = __arg644(__eta0)
                                                                  return __arg645(__act24)(__eta0)
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                                __frame2[2]["arg3"] = function(a)
                                                  return function(__arg647)
                                                      return function(__eta0)
                                                          local __act51 = __arg647(__eta0)
                                                          return __act51(__eta0)
                                                        end
                                                    end
                                                end
                                                __frame2[3] = {}
                                                __frame2[3]["tag"] = "0"
                                                __frame2[3]["arg1"] = __frame2[2]
                                                __frame2[3]["arg2"] = function(a)
                                                  return function(__arg6794)
                                                      return __arg6794
                                                    end
                                                end
                                                return idris["Foreign.nvimCommand"](nil)(__frame2[3])("echo 'skipped output'")
                                              end
                                              __frame1[2][1] = function()
                                                return idris["Plugin.case[7868]case block in connectIdris2"](__arg0)(__arg1)(__arg2)(__arg3)(__arg4)(__arg5)(__arg6)(__arg7)(__arg8)(__arg9)(idris["Idris.IDEMode.Parser.parseSExp"](__arg8))
                                              end
                                              __frame1[3] = __frame1[2][__frame1[1]]
                                              if __frame1[3] then
                                                __frame1[4] = __frame1[3]()
                                              else
                                                idris["error"]("Impossible else branch")
                                              end
                                              return __frame1[4]
                                            end)()
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Plugin.connectIdris2"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__ext0)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = {}
                  __frame1[1]["tag"] = "0"
                  __frame1[1]["arg1"] = function(b)
                    return function(a)
                        return function(func)
                            return function(__arg149)
                                return function(__eta0)
                                    return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                  end
                              end
                          end
                      end
                  end
                  __frame1[1]["arg2"] = function(a)
                    return function(__arg482)
                        return function(__eta0)
                            return __arg482
                          end
                      end
                  end
                  __frame1[1]["arg3"] = function(b)
                    return function(a)
                        return function(__arg483)
                            return function(__arg485)
                                return function(__eta0)
                                    local __act17 = __arg483(__eta0)
                                    local __act16 = __arg485(__eta0)
                                    return __act17(__act16)
                                  end
                              end
                          end
                      end
                  end
                  __frame1[2] = {}
                  __frame1[2]["tag"] = "0"
                  __frame1[2]["arg1"] = __frame1[1]
                  __frame1[2]["arg2"] = function(b)
                    return function(a)
                        return function(__arg644)
                            return function(__arg645)
                                return function(__eta0)
                                    local __act24 = __arg644(__eta0)
                                    return __arg645(__act24)(__eta0)
                                  end
                              end
                          end
                      end
                  end
                  __frame1[2]["arg3"] = function(a)
                    return function(__arg647)
                        return function(__eta0)
                            local __act51 = __arg647(__eta0)
                            return __act51(__eta0)
                          end
                      end
                  end
                  __frame1[3] = {}
                  __frame1[3]["tag"] = "0"
                  __frame1[3]["arg1"] = __frame1[2]
                  __frame1[3]["arg2"] = function(a)
                    return function(__arg6794)
                        return __arg6794
                      end
                  end
                  local __act24 = idris["Foreign.nvimCommand"](nil)(__frame1[3])("echom 'Starting connection...'")(__ext0)
                  __frame1[4] = {}
                  __frame1[4]["tag"] = "0"
                  __frame1[4]["arg1"] = function(b)
                    return function(a)
                        return function(func)
                            return function(__arg149)
                                return function(__eta0)
                                    return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                  end
                              end
                          end
                      end
                  end
                  __frame1[4]["arg2"] = function(a)
                    return function(__arg482)
                        return function(__eta0)
                            return __arg482
                          end
                      end
                  end
                  __frame1[4]["arg3"] = function(b)
                    return function(a)
                        return function(__arg483)
                            return function(__arg485)
                                return function(__eta0)
                                    local __act17 = __arg483(__eta0)
                                    local __act16 = __arg485(__eta0)
                                    return __act17(__act16)
                                  end
                              end
                          end
                      end
                  end
                  __frame1[5] = {}
                  __frame1[5]["tag"] = "0"
                  __frame1[5]["arg1"] = __frame1[4]
                  __frame1[5]["arg2"] = function(b)
                    return function(a)
                        return function(__arg644)
                            return function(__arg645)
                                return function(__eta0)
                                    local __act25 = __arg644(__eta0)
                                    return __arg645(__act25)(__eta0)
                                  end
                              end
                          end
                      end
                  end
                  __frame1[5]["arg3"] = function(a)
                    return function(__arg647)
                        return function(__eta0)
                            local __act51 = __arg647(__eta0)
                            return __act51(__eta0)
                          end
                      end
                  end
                  __frame1[6] = {}
                  __frame1[6]["tag"] = "0"
                  __frame1[6]["arg1"] = __frame1[5]
                  __frame1[6]["arg2"] = function(a)
                    return function(__arg6794)
                        return __arg6794
                      end
                  end
                  local __act25 = idris["Foreign.newTCP"](nil)(__frame1[6])(__ext0)
                  __frame1[7] = {}
                  __frame1[7]["tag"] = "0"
                  __frame1[7]["arg1"] = function(b)
                    return function(a)
                        return function(func)
                            return function(__arg149)
                                return function(__eta0)
                                    return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                  end
                              end
                          end
                      end
                  end
                  __frame1[7]["arg2"] = function(a)
                    return function(__arg482)
                        return function(__eta0)
                            return __arg482
                          end
                      end
                  end
                  __frame1[7]["arg3"] = function(b)
                    return function(a)
                        return function(__arg483)
                            return function(__arg485)
                                return function(__eta0)
                                    local __act17 = __arg483(__eta0)
                                    local __act16 = __arg485(__eta0)
                                    return __act17(__act16)
                                  end
                              end
                          end
                      end
                  end
                  __frame1[8] = {}
                  __frame1[8]["tag"] = "0"
                  __frame1[8]["arg1"] = __frame1[7]
                  __frame1[8]["arg2"] = function(b)
                    return function(a)
                        return function(__arg644)
                            return function(__arg645)
                                return function(__eta0)
                                    local __act26 = __arg644(__eta0)
                                    return __arg645(__act26)(__eta0)
                                  end
                              end
                          end
                      end
                  end
                  __frame1[8]["arg3"] = function(a)
                    return function(__arg647)
                        return function(__eta0)
                            local __act51 = __arg647(__eta0)
                            return __act51(__eta0)
                          end
                      end
                  end
                  __frame1[9] = {}
                  __frame1[9]["tag"] = "0"
                  __frame1[9]["arg1"] = __frame1[8]
                  __frame1[9]["arg2"] = function(a)
                    return function(__arg6794)
                        return __arg6794
                      end
                  end
                  local __act26 = idris["Foreign.nvimCommand"](nil)(__frame1[9])("echom 'Created new tcp socket...'")(__ext0)
                  __frame1[10] = {}
                  __frame1[10]["tag"] = "0"
                  __frame1[10]["arg1"] = function(b)
                    return function(a)
                        return function(func)
                            return function(__arg149)
                                return function(__eta0)
                                    return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                  end
                              end
                          end
                      end
                  end
                  __frame1[10]["arg2"] = function(a)
                    return function(__arg482)
                        return function(__eta0)
                            return __arg482
                          end
                      end
                  end
                  __frame1[10]["arg3"] = function(b)
                    return function(a)
                        return function(__arg483)
                            return function(__arg485)
                                return function(__eta0)
                                    local __act17 = __arg483(__eta0)
                                    local __act16 = __arg485(__eta0)
                                    return __act17(__act16)
                                  end
                              end
                          end
                      end
                  end
                  __frame1[11] = {}
                  __frame1[11]["tag"] = "0"
                  __frame1[11]["arg1"] = __frame1[10]
                  __frame1[11]["arg2"] = function(b)
                    return function(a)
                        return function(__arg644)
                            return function(__arg645)
                                return function(__eta0)
                                    local __act27 = __arg644(__eta0)
                                    return __arg645(__act27)(__eta0)
                                  end
                              end
                          end
                      end
                  end
                  __frame1[11]["arg3"] = function(a)
                    return function(__arg647)
                        return function(__eta0)
                            local __act51 = __arg647(__eta0)
                            return __act51(__eta0)
                          end
                      end
                  end
                  __frame1[12] = {}
                  __frame1[12]["tag"] = "0"
                  __frame1[12]["arg1"] = __frame1[11]
                  __frame1[12]["arg2"] = function(a)
                    return function(__arg6794)
                        return __arg6794
                      end
                  end
                  __frame1[13] = {}
                  __frame1[13]["tag"] = "0"
                  __frame1[13]["arg1"] = function(b)
                    return function(a)
                        return function(func)
                            return function(__arg149)
                                return function(__eta0)
                                    return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                  end
                              end
                          end
                      end
                  end
                  __frame1[13]["arg2"] = function(a)
                    return function(__arg482)
                        return function(__eta0)
                            return __arg482
                          end
                      end
                  end
                  __frame1[13]["arg3"] = function(b)
                    return function(a)
                        return function(__arg483)
                            return function(__arg485)
                                return function(__eta0)
                                    local __act17 = __arg483(__eta0)
                                    local __act16 = __arg485(__eta0)
                                    return __act17(__act16)
                                  end
                              end
                          end
                      end
                  end
                  __frame1[14] = {}
                  __frame1[14]["tag"] = "0"
                  __frame1[14]["arg1"] = __frame1[13]
                  __frame1[14]["arg2"] = function(b)
                    return function(a)
                        return function(__arg644)
                            return function(__arg645)
                                return function(__eta0)
                                    local __act27 = __arg644(__eta0)
                                    return __arg645(__act27)(__eta0)
                                  end
                              end
                          end
                      end
                  end
                  __frame1[14]["arg3"] = function(a)
                    return function(__arg647)
                        return function(__eta0)
                            local __act51 = __arg647(__eta0)
                            return __act51(__eta0)
                          end
                      end
                  end
                  __frame1[15] = {}
                  __frame1[15]["tag"] = "0"
                  __frame1[15]["arg1"] = __frame1[14]
                  __frame1[15]["arg2"] = function(a)
                    return function(__arg6794)
                        return __arg6794
                      end
                  end
                  local __act27 = idris["Foreign.connect"](nil)(__frame1[12])(__act25)(__arg1)(__arg2)(idris["Foreign.readStart"](nil)(__frame1[15])(__act25)(function(recv)
                    local __frame2 = {
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    __frame2[1] = {}
                    __frame2[1]["tag"] = "0"
                    local msgs = idris["Plugin.splitMessages"](recv)(__frame2[1])
                    __frame2[2] = {}
                    __frame2[2]["tag"] = "0"
                    __frame2[2]["arg1"] = function(acc)
                      return function(elem)
                          return function(func)
                              return function(init)
                                  return function(input)
                                      return idris["Prelude.Types.foldr_Foldable__List"](nil)(nil)(func)(init)(input)
                                    end
                                end
                            end
                        end
                    end
                    __frame2[2]["arg2"] = function(elem)
                      return function(acc)
                          return function(func)
                              return function(init)
                                  return function(input)
                                      return idris["Prelude.Types.foldl_Foldable__List"](nil)(nil)(func)(init)(input)
                                    end
                                end
                            end
                        end
                    end
                    __frame2[3] = {}
                    __frame2[3]["tag"] = "0"
                    __frame2[3]["arg1"] = function(b)
                      return function(a)
                          return function(func)
                              return function(__arg149)
                                  return function(__eta0)
                                      return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                    end
                                end
                            end
                        end
                    end
                    __frame2[3]["arg2"] = function(a)
                      return function(__arg482)
                          return function(__eta0)
                              return __arg482
                            end
                        end
                    end
                    __frame2[3]["arg3"] = function(b)
                      return function(a)
                          return function(__arg483)
                              return function(__arg485)
                                  return function(__eta0)
                                      local __act17 = __arg483(__eta0)
                                      local __act16 = __arg485(__eta0)
                                      return __act17(__act16)
                                    end
                                end
                            end
                        end
                    end
                    __frame2[4] = {}
                    __frame2[4]["tag"] = "0"
                    __frame2[4]["arg1"] = __frame2[2]
                    __frame2[4]["arg2"] = __frame2[3]
                    return idris["Prelude.Interfaces.for_"](nil)(nil)(nil)(nil)(__frame2[4])(msgs)(function(msg)
                        local head = idris["Prelude.Types.substr"](bigint:new("0"))(bigint:new("1") + bigint:new("1") + bigint:new("1") + bigint:new("1") + bigint:new("1") + bigint:new("0"))(msg)
                        return idris["Plugin.case[7817]connectIdris2"](__arg2)(__arg1)(__arg0)(__act24)(__act25)(__act26)(recv)(msgs)(msg)(head)(idris["Prelude.EqOrd.==_Eq__String"](head)("(:out"))
                      end)
                  end)(function(err)
                    local __frame2 = {
                      nil,
                      nil,
                      nil
                    }
                    __frame2[1] = {}
                    __frame2[1]["tag"] = "0"
                    __frame2[1]["arg1"] = function(b)
                      return function(a)
                          return function(func)
                              return function(__arg149)
                                  return function(__eta0)
                                      return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                    end
                                end
                            end
                        end
                    end
                    __frame2[1]["arg2"] = function(a)
                      return function(__arg482)
                          return function(__eta0)
                              return __arg482
                            end
                        end
                    end
                    __frame2[1]["arg3"] = function(b)
                      return function(a)
                          return function(__arg483)
                              return function(__arg485)
                                  return function(__eta0)
                                      local __act17 = __arg483(__eta0)
                                      local __act16 = __arg485(__eta0)
                                      return __act17(__act16)
                                    end
                                end
                            end
                        end
                    end
                    __frame2[2] = {}
                    __frame2[2]["tag"] = "0"
                    __frame2[2]["arg1"] = __frame2[1]
                    __frame2[2]["arg2"] = function(b)
                      return function(a)
                          return function(__arg644)
                              return function(__arg645)
                                  return function(__eta0)
                                      local __act27 = __arg644(__eta0)
                                      return __arg645(__act27)(__eta0)
                                    end
                                end
                            end
                        end
                    end
                    __frame2[2]["arg3"] = function(a)
                      return function(__arg647)
                          return function(__eta0)
                              local __act51 = __arg647(__eta0)
                              return __act51(__eta0)
                            end
                        end
                    end
                    __frame2[3] = {}
                    __frame2[3]["tag"] = "0"
                    __frame2[3]["arg1"] = __frame2[2]
                    __frame2[3]["arg2"] = function(a)
                      return function(__arg6794)
                          return __arg6794
                        end
                    end
                    return idris["Foreign.nvimCommand"](nil)(__frame2[3])(idris["Prelude.Types.Strings.++"]("echom 'read err: ")(idris["Prelude.Types.Strings.++"](err)("'")))
                  end)(function(__eta0)
                    local __frame2 = {
                      nil
                    }
                    __frame2[1] = {}
                    __frame2[1]["tag"] = "0"
                    return __frame2[1]
                  end))(function(err)
                    local __frame2 = {
                      nil,
                      nil,
                      nil
                    }
                    __frame2[1] = {}
                    __frame2[1]["tag"] = "0"
                    __frame2[1]["arg1"] = function(b)
                      return function(a)
                          return function(func)
                              return function(__arg149)
                                  return function(__eta0)
                                      return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                    end
                                end
                            end
                        end
                    end
                    __frame2[1]["arg2"] = function(a)
                      return function(__arg482)
                          return function(__eta0)
                              return __arg482
                            end
                        end
                    end
                    __frame2[1]["arg3"] = function(b)
                      return function(a)
                          return function(__arg483)
                              return function(__arg485)
                                  return function(__eta0)
                                      local __act17 = __arg483(__eta0)
                                      local __act16 = __arg485(__eta0)
                                      return __act17(__act16)
                                    end
                                end
                            end
                        end
                    end
                    __frame2[2] = {}
                    __frame2[2]["tag"] = "0"
                    __frame2[2]["arg1"] = __frame2[1]
                    __frame2[2]["arg2"] = function(b)
                      return function(a)
                          return function(__arg644)
                              return function(__arg645)
                                  return function(__eta0)
                                      local __act27 = __arg644(__eta0)
                                      return __arg645(__act27)(__eta0)
                                    end
                                end
                            end
                        end
                    end
                    __frame2[2]["arg3"] = function(a)
                      return function(__arg647)
                          return function(__eta0)
                              local __act51 = __arg647(__eta0)
                              return __act51(__eta0)
                            end
                        end
                    end
                    __frame2[3] = {}
                    __frame2[3]["tag"] = "0"
                    __frame2[3]["arg1"] = __frame2[2]
                    __frame2[3]["arg2"] = function(a)
                      return function(__arg6794)
                          return __arg6794
                        end
                    end
                    return idris["Foreign.nvimCommand"](nil)(__frame2[3])(idris["Prelude.Types.Strings.++"]("echom 'connect error: ")(idris["Prelude.Types.Strings.++"](err)("'")))
                  end)(__ext0)
                  return __act25
                end)()
            end
        end
    end
end
idris["Plugin.case[8259]case block in spawnAndConnectIdris2"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return function(__arg9)
                                      return function(__arg10)
                                          return function(__arg11)
                                              return function(__arg12)
                                                  return function(__arg13)
                                                      return function(__arg14)
                                                          return function(__arg15)
                                                              return function(__arg16)
                                                                  return function(__arg17)
                                                                      return (function()
                                                                          local __frame1 = {
                                                                            nil,
                                                                            nil,
                                                                            nil,
                                                                            nil
                                                                          }
                                                                          __frame1[1] = __arg17
                                                                          __frame1[2] = {
                                                                            nil,
                                                                            nil
                                                                          }
                                                                          __frame1[2][0] = function()
                                                                            return function(__eta0)
                                                                                local __frame3 = {
                                                                                  nil,
                                                                                  nil,
                                                                                  nil,
                                                                                  nil
                                                                                }
                                                                                local __act24 = idris["Plugin.connectIdris2"](__arg8)(__arg6)(__arg7)(__eta0)
                                                                                local __act25 = idris["Foreign.setGlobalClient"](__act24)(__eta0)
                                                                                __frame3[1] = {}
                                                                                __frame3[1]["tag"] = "1"
                                                                                __frame3[1]["arg1"] = __act24
                                                                                __arg3["val"] = __frame3[1]
                                                                                local __act26 = {
                                                                                  tag = 
                                                                                    "0"
                                                                                }
                                                                                __frame3[2] = {}
                                                                                __frame3[2]["tag"] = "0"
                                                                                __frame3[2]["arg1"] = function(b)
                                                                                  return function(a)
                                                                                      return function(func)
                                                                                          return function(__arg149)
                                                                                              return function(__eta1)
                                                                                                  return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                                __frame3[2]["arg2"] = function(a)
                                                                                  return function(__arg482)
                                                                                      return function(__eta1)
                                                                                          return __arg482
                                                                                        end
                                                                                    end
                                                                                end
                                                                                __frame3[2]["arg3"] = function(b)
                                                                                  return function(a)
                                                                                      return function(__arg483)
                                                                                          return function(__arg485)
                                                                                              return function(__eta1)
                                                                                                  local __act17 = __arg483(__eta1)
                                                                                                  local __act16 = __arg485(__eta1)
                                                                                                  return __act17(__act16)
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                                __frame3[3] = {}
                                                                                __frame3[3]["tag"] = "0"
                                                                                __frame3[3]["arg1"] = __frame3[2]
                                                                                __frame3[3]["arg2"] = function(b)
                                                                                  return function(a)
                                                                                      return function(__arg644)
                                                                                          return function(__arg645)
                                                                                              return function(__eta1)
                                                                                                  local __act27 = __arg644(__eta1)
                                                                                                  return __arg645(__act27)(__eta1)
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                                __frame3[3]["arg3"] = function(a)
                                                                                  return function(__arg647)
                                                                                      return function(__eta1)
                                                                                          local __act51 = __arg647(__eta1)
                                                                                          return __act51(__eta1)
                                                                                        end
                                                                                    end
                                                                                end
                                                                                __frame3[4] = {}
                                                                                __frame3[4]["tag"] = "0"
                                                                                __frame3[4]["arg1"] = __frame3[3]
                                                                                __frame3[4]["arg2"] = function(a)
                                                                                  return function(__arg6794)
                                                                                      return __arg6794
                                                                                    end
                                                                                end
                                                                                return idris["Foreign.readStop"](nil)(__frame3[4])(__arg10)(__eta0)
                                                                              end
                                                                          end
                                                                          __frame1[2][1] = function()
                                                                            return function(__eta0)
                                                                                local __frame3 = {
                                                                                  nil,
                                                                                  nil,
                                                                                  nil,
                                                                                  nil,
                                                                                  nil,
                                                                                  nil
                                                                                }
                                                                                __frame3[1] = {}
                                                                                __frame3[1]["tag"] = "0"
                                                                                __frame3[1]["arg1"] = function(b)
                                                                                  return function(a)
                                                                                      return function(func)
                                                                                          return function(__arg149)
                                                                                              return function(__eta1)
                                                                                                  return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                                __frame3[1]["arg2"] = function(a)
                                                                                  return function(__arg482)
                                                                                      return function(__eta1)
                                                                                          return __arg482
                                                                                        end
                                                                                    end
                                                                                end
                                                                                __frame3[1]["arg3"] = function(b)
                                                                                  return function(a)
                                                                                      return function(__arg483)
                                                                                          return function(__arg485)
                                                                                              return function(__eta1)
                                                                                                  local __act17 = __arg483(__eta1)
                                                                                                  local __act16 = __arg485(__eta1)
                                                                                                  return __act17(__act16)
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                                __frame3[2] = {}
                                                                                __frame3[2]["tag"] = "0"
                                                                                __frame3[2]["arg1"] = __frame3[1]
                                                                                __frame3[2]["arg2"] = function(b)
                                                                                  return function(a)
                                                                                      return function(__arg644)
                                                                                          return function(__arg645)
                                                                                              return function(__eta1)
                                                                                                  local __act24 = __arg644(__eta1)
                                                                                                  return __arg645(__act24)(__eta1)
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                                __frame3[2]["arg3"] = function(a)
                                                                                  return function(__arg647)
                                                                                      return function(__eta1)
                                                                                          local __act51 = __arg647(__eta1)
                                                                                          return __act51(__eta1)
                                                                                        end
                                                                                    end
                                                                                end
                                                                                __frame3[3] = {}
                                                                                __frame3[3]["tag"] = "0"
                                                                                __frame3[3]["arg1"] = __frame3[2]
                                                                                __frame3[3]["arg2"] = function(a)
                                                                                  return function(__arg6794)
                                                                                      return __arg6794
                                                                                    end
                                                                                end
                                                                                local __act24 = idris["Foreign.nvimCommand"](nil)(__frame3[3])(idris["Prelude.Types.Strings.++"]("echom 'wrong port ")(idris["Prelude.Types.Strings.++"](__arg15)("'")))(__eta0)
                                                                                __frame3[4] = {}
                                                                                __frame3[4]["tag"] = "0"
                                                                                __frame3[4]["arg1"] = function(b)
                                                                                  return function(a)
                                                                                      return function(func)
                                                                                          return function(__arg149)
                                                                                              return function(__eta1)
                                                                                                  return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                                __frame3[4]["arg2"] = function(a)
                                                                                  return function(__arg482)
                                                                                      return function(__eta1)
                                                                                          return __arg482
                                                                                        end
                                                                                    end
                                                                                end
                                                                                __frame3[4]["arg3"] = function(b)
                                                                                  return function(a)
                                                                                      return function(__arg483)
                                                                                          return function(__arg485)
                                                                                              return function(__eta1)
                                                                                                  local __act17 = __arg483(__eta1)
                                                                                                  local __act16 = __arg485(__eta1)
                                                                                                  return __act17(__act16)
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                                __frame3[5] = {}
                                                                                __frame3[5]["tag"] = "0"
                                                                                __frame3[5]["arg1"] = __frame3[4]
                                                                                __frame3[5]["arg2"] = function(b)
                                                                                  return function(a)
                                                                                      return function(__arg644)
                                                                                          return function(__arg645)
                                                                                              return function(__eta1)
                                                                                                  local __act25 = __arg644(__eta1)
                                                                                                  return __arg645(__act25)(__eta1)
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                                __frame3[5]["arg3"] = function(a)
                                                                                  return function(__arg647)
                                                                                      return function(__eta1)
                                                                                          local __act51 = __arg647(__eta1)
                                                                                          return __act51(__eta1)
                                                                                        end
                                                                                    end
                                                                                end
                                                                                __frame3[6] = {}
                                                                                __frame3[6]["tag"] = "0"
                                                                                __frame3[6]["arg1"] = __frame3[5]
                                                                                __frame3[6]["arg2"] = function(a)
                                                                                  return function(__arg6794)
                                                                                      return __arg6794
                                                                                    end
                                                                                end
                                                                                return idris["Plugin.quitServer"](nil)(__frame3[6])(__arg2)(__eta0)
                                                                              end
                                                                          end
                                                                          __frame1[3] = __frame1[2][__frame1[1]]
                                                                          if __frame1[3] then
                                                                            __frame1[4] = __frame1[3]()
                                                                          else
                                                                            idris["error"]("Impossible else branch")
                                                                          end
                                                                          return __frame1[4]
                                                                        end)()
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Plugin.spawnAndConnectIdris2"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return (function()
                              local __frame1 = {
                                nil,
                                nil,
                                nil,
                                nil
                              }
                              __frame1[1] = __arg5
                              __frame1[2] = {
                                nil
                              }
                              __frame1[2]["0"] = function()
                                local __frame2 = {
                                  nil,
                                  nil,
                                  nil,
                                  nil
                                }
                                local __e2 = __frame1[1]["arg1"]
                                local __e3 = __frame1[1]["arg2"]
                                __frame2[1] = __arg6
                                __frame2[2] = {
                                  nil
                                }
                                __frame2[2]["0"] = function()
                                  local __frame3 = {
                                    nil,
                                    nil,
                                    nil,
                                    nil,
                                    nil,
                                    nil,
                                    nil,
                                    nil
                                  }
                                  local __e6 = __frame2[1]["arg1"]
                                  local __e7 = __frame2[1]["arg2"]
                                  __frame3[1] = __arg1
                                  __frame3[2] = {
                                    nil
                                  }
                                  __frame3[2]["0"] = function()
                                    local __e1 = __frame3[1]["arg1"]
                                    return __e1
                                  end
                                  __frame3[3] = __frame3[2][__frame3[1]["tag"]]
                                  if __frame3[3] then
                                    __frame3[4] = __frame3[3]()
                                  else
                                    idris["error"]("Impossible else branch")
                                  end
                                  __frame3[5] = __frame3[4]
                                  __frame3[6] = {
                                    nil
                                  }
                                  __frame3[6]["0"] = function()
                                    local __frame4 = {
                                      nil,
                                      nil,
                                      nil,
                                      nil
                                    }
                                    local __e5 = __frame3[5]["arg2"]
                                    __frame4[1] = __arg1
                                    __frame4[2] = {
                                      nil
                                    }
                                    __frame4[2]["0"] = function()
                                      local __e8 = __frame4[1]["arg2"]
                                      return __e8(nil)(function(__eta0)
                                          return __arg3["val"]
                                        end)
                                    end
                                    __frame4[3] = __frame4[2][__frame4[1]["tag"]]
                                    if __frame4[3] then
                                      __frame4[4] = __frame4[3]()
                                    else
                                      idris["error"]("Impossible else branch")
                                    end
                                    return __e5(nil)(nil)(__frame4[4])(function(___0)
                                        local __frame5 = {
                                          nil,
                                          nil,
                                          nil,
                                          nil
                                        }
                                        __frame5[1] = ___0
                                        __frame5[2] = {
                                          nil,
                                          nil
                                        }
                                        __frame5[2]["0"] = function()
                                          local __frame6 = {
                                            nil,
                                            nil,
                                            nil,
                                            nil,
                                            nil,
                                            nil,
                                            nil,
                                            nil
                                          }
                                          __frame6[1] = __arg1
                                          __frame6[2] = {
                                            nil
                                          }
                                          __frame6[2]["0"] = function()
                                            local __e9 = __frame6[1]["arg1"]
                                            return __e9
                                          end
                                          __frame6[3] = __frame6[2][__frame6[1]["tag"]]
                                          if __frame6[3] then
                                            __frame6[4] = __frame6[3]()
                                          else
                                            idris["error"]("Impossible else branch")
                                          end
                                          __frame6[5] = __frame6[4]
                                          __frame6[6] = {
                                            nil
                                          }
                                          __frame6[6]["0"] = function()
                                            local __e9 = __frame6[5]["arg2"]
                                            return __e9(nil)(nil)(idris["Foreign.newPipe"](nil)(__arg1))(function(stdout)
                                                local __frame8 = {
                                                  nil,
                                                  nil,
                                                  nil,
                                                  nil,
                                                  nil,
                                                  nil,
                                                  nil,
                                                  nil
                                                }
                                                local opts = idris["Plugin.spawnOpts"](idris["Prelude.Types.Strings.++"](__e2)(idris["Prelude.Types.Strings.++"](":")(idris["Prelude.Show.show_Show__Int"](__e3))))(stdout)
                                                __frame8[1] = __arg1
                                                __frame8[2] = {
                                                  nil
                                                }
                                                __frame8[2]["0"] = function()
                                                  local __e12 = __frame8[1]["arg1"]
                                                  return __e12
                                                end
                                                __frame8[3] = __frame8[2][__frame8[1]["tag"]]
                                                if __frame8[3] then
                                                  __frame8[4] = __frame8[3]()
                                                else
                                                  idris["error"]("Impossible else branch")
                                                end
                                                __frame8[5] = __frame8[4]
                                                __frame8[6] = {
                                                  nil
                                                }
                                                __frame8[6]["0"] = function()
                                                  local __e12 = __frame8[5]["arg2"]
                                                  return __e12(nil)(nil)(idris["Foreign.spawn"](nil)(__arg1)("idris2")(opts)(function(code)
                                                      return function(signal)
                                                          local __frame11 = {
                                                            nil,
                                                            nil,
                                                            nil
                                                          }
                                                          __frame11[1] = {}
                                                          __frame11[1]["tag"] = "0"
                                                          __frame11[1]["arg1"] = function(b)
                                                            return function(a)
                                                                return function(func)
                                                                    return function(__arg149)
                                                                        return function(__eta0)
                                                                            return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                                                                          end
                                                                      end
                                                                  end
                                                              end
                                                          end
                                                          __frame11[1]["arg2"] = function(a)
                                                            return function(__arg482)
                                                                return function(__eta0)
                                                                    return __arg482
                                                                  end
                                                              end
                                                          end
                                                          __frame11[1]["arg3"] = function(b)
                                                            return function(a)
                                                                return function(__arg483)
                                                                    return function(__arg485)
                                                                        return function(__eta0)
                                                                            local __act17 = __arg483(__eta0)
                                                                            local __act16 = __arg485(__eta0)
                                                                            return __act17(__act16)
                                                                          end
                                                                      end
                                                                  end
                                                              end
                                                          end
                                                          __frame11[2] = {}
                                                          __frame11[2]["tag"] = "0"
                                                          __frame11[2]["arg1"] = __frame11[1]
                                                          __frame11[2]["arg2"] = function(b)
                                                            return function(a)
                                                                return function(__arg644)
                                                                    return function(__arg645)
                                                                        return function(__eta0)
                                                                            local __act24 = __arg644(__eta0)
                                                                            return __arg645(__act24)(__eta0)
                                                                          end
                                                                      end
                                                                  end
                                                              end
                                                          end
                                                          __frame11[2]["arg3"] = function(a)
                                                            return function(__arg647)
                                                                return function(__eta0)
                                                                    local __act51 = __arg647(__eta0)
                                                                    return __act51(__eta0)
                                                                  end
                                                              end
                                                          end
                                                          __frame11[3] = {}
                                                          __frame11[3]["tag"] = "0"
                                                          __frame11[3]["arg1"] = __frame11[2]
                                                          __frame11[3]["arg2"] = function(a)
                                                            return function(__arg6794)
                                                                return __arg6794
                                                              end
                                                          end
                                                          return idris["Foreign.nvimCommand"](nil)(__frame11[3])(idris["Prelude.Types.Strings.++"]("echom 'Idris2 process closed with code ")(idris["Prelude.Types.Strings.++"](idris["Prelude.Show.show_Show__Int"](code))("'")))
                                                        end
                                                    end))(function(d)
                                                      local __frame10 = {
                                                        nil,
                                                        nil,
                                                        nil,
                                                        nil,
                                                        nil,
                                                        nil,
                                                        nil,
                                                        nil
                                                      }
                                                      local handle = idris["System.FFI.Lua.Dict.prim__getField"](nil)(d)("handle")
                                                      __frame10[1] = __arg1
                                                      __frame10[2] = {
                                                        nil
                                                      }
                                                      __frame10[2]["0"] = function()
                                                        local __e15 = __frame10[1]["arg1"]
                                                        return __e15
                                                      end
                                                      __frame10[3] = __frame10[2][__frame10[1]["tag"]]
                                                      if __frame10[3] then
                                                        __frame10[4] = __frame10[3]()
                                                      else
                                                        idris["error"]("Impossible else branch")
                                                      end
                                                      __frame10[5] = __frame10[4]
                                                      __frame10[6] = {
                                                        nil
                                                      }
                                                      __frame10[6]["0"] = function()
                                                        local __frame11 = {
                                                          nil,
                                                          nil,
                                                          nil,
                                                          nil
                                                        }
                                                        local __e15 = __frame10[5]["arg2"]
                                                        __frame11[1] = __arg1
                                                        __frame11[2] = {
                                                          nil
                                                        }
                                                        __frame11[2]["0"] = function()
                                                          local __e17 = __frame11[1]["arg2"]
                                                          return __e17(nil)(function(__eta0)
                                                              local __frame13 = {
                                                                nil
                                                              }
                                                              __frame13[1] = {}
                                                              __frame13[1]["tag"] = "1"
                                                              __frame13[1]["arg1"] = handle
                                                              __arg3["val"] = __frame13[1]
                                                              return {
                                                                  tag = 
                                                                    "0"
                                                                }
                                                            end)
                                                        end
                                                        __frame11[3] = __frame11[2][__frame11[1]["tag"]]
                                                        if __frame11[3] then
                                                          __frame11[4] = __frame11[3]()
                                                        else
                                                          idris["error"]("Impossible else branch")
                                                        end
                                                        return __e15(nil)(nil)(__frame11[4])(function(___8194)
                                                            return idris["Foreign.readStart"](nil)(__arg1)(stdout)(function(msg)
                                                                return function(__eta0)
                                                                    local __frame14 = {
                                                                      nil,
                                                                      nil,
                                                                      nil,
                                                                      nil
                                                                    }
                                                                    __frame14[1] = {}
                                                                    __frame14[1]["tag"] = "0"
                                                                    __frame14[1]["arg1"] = function(b)
                                                                      return function(a)
                                                                          return function(func)
                                                                              return function(__arg149)
                                                                                  return function(__eta1)
                                                                                      return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                    __frame14[1]["arg2"] = function(a)
                                                                      return function(__arg482)
                                                                          return function(__eta1)
                                                                              return __arg482
                                                                            end
                                                                        end
                                                                    end
                                                                    __frame14[1]["arg3"] = function(b)
                                                                      return function(a)
                                                                          return function(__arg483)
                                                                              return function(__arg485)
                                                                                  return function(__eta1)
                                                                                      local __act17 = __arg483(__eta1)
                                                                                      local __act16 = __arg485(__eta1)
                                                                                      return __act17(__act16)
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                    __frame14[2] = {}
                                                                    __frame14[2]["tag"] = "0"
                                                                    __frame14[2]["arg1"] = __frame14[1]
                                                                    __frame14[2]["arg2"] = function(b)
                                                                      return function(a)
                                                                          return function(__arg644)
                                                                              return function(__arg645)
                                                                                  return function(__eta1)
                                                                                      local __act24 = __arg644(__eta1)
                                                                                      return __arg645(__act24)(__eta1)
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                    __frame14[2]["arg3"] = function(a)
                                                                      return function(__arg647)
                                                                          return function(__eta1)
                                                                              local __act51 = __arg647(__eta1)
                                                                              return __act51(__eta1)
                                                                            end
                                                                        end
                                                                    end
                                                                    __frame14[3] = {}
                                                                    __frame14[3]["tag"] = "0"
                                                                    __frame14[3]["arg1"] = __frame14[2]
                                                                    __frame14[3]["arg2"] = function(a)
                                                                      return function(__arg6794)
                                                                          return __arg6794
                                                                        end
                                                                    end
                                                                    local __act24 = idris["Foreign.nvimCommand"](nil)(__frame14[3])(idris["Prelude.Types.Strings.++"]("echom 'server: ")(idris["Prelude.Types.Strings.++"](msg)("'")))(__eta0)
                                                                    __frame14[4] = {}
                                                                    __frame14[4]["tag"] = "0"
                                                                    local ___1 = __frame14[4]
                                                                    return idris["Plugin.case[8259]case block in spawnAndConnectIdris2"](nil)(__arg1)(__arg3)(__arg4)(__e2)(__e3)(__e6)(__e7)(__arg2)(___1)(stdout)(opts)(d)(handle)(___8194)(msg)(__act24)(idris["Prelude.EqOrd.==_Eq__String"](idris["Data.Strings.trim"](msg))(idris["Prelude.Show.show_Show__Int"](__e3)))(__eta0)
                                                                  end
                                                              end)(function(err)
                                                                return function(__eta0)
                                                                    local __frame14 = {
                                                                      nil,
                                                                      nil,
                                                                      nil,
                                                                      nil,
                                                                      nil,
                                                                      nil
                                                                    }
                                                                    __frame14[1] = {}
                                                                    __frame14[1]["tag"] = "0"
                                                                    __frame14[1]["arg1"] = function(b)
                                                                      return function(a)
                                                                          return function(func)
                                                                              return function(__arg149)
                                                                                  return function(__eta1)
                                                                                      return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                    __frame14[1]["arg2"] = function(a)
                                                                      return function(__arg482)
                                                                          return function(__eta1)
                                                                              return __arg482
                                                                            end
                                                                        end
                                                                    end
                                                                    __frame14[1]["arg3"] = function(b)
                                                                      return function(a)
                                                                          return function(__arg483)
                                                                              return function(__arg485)
                                                                                  return function(__eta1)
                                                                                      local __act17 = __arg483(__eta1)
                                                                                      local __act16 = __arg485(__eta1)
                                                                                      return __act17(__act16)
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                    __frame14[2] = {}
                                                                    __frame14[2]["tag"] = "0"
                                                                    __frame14[2]["arg1"] = __frame14[1]
                                                                    __frame14[2]["arg2"] = function(b)
                                                                      return function(a)
                                                                          return function(__arg644)
                                                                              return function(__arg645)
                                                                                  return function(__eta1)
                                                                                      local __act24 = __arg644(__eta1)
                                                                                      return __arg645(__act24)(__eta1)
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                    __frame14[2]["arg3"] = function(a)
                                                                      return function(__arg647)
                                                                          return function(__eta1)
                                                                              local __act51 = __arg647(__eta1)
                                                                              return __act51(__eta1)
                                                                            end
                                                                        end
                                                                    end
                                                                    __frame14[3] = {}
                                                                    __frame14[3]["tag"] = "0"
                                                                    __frame14[3]["arg1"] = __frame14[2]
                                                                    __frame14[3]["arg2"] = function(a)
                                                                      return function(__arg6794)
                                                                          return __arg6794
                                                                        end
                                                                    end
                                                                    local __act24 = idris["Foreign.nvimCommand"](nil)(__frame14[3])(idris["Prelude.Types.Strings.++"]("echom 'err: ")(idris["Prelude.Types.Strings.++"](err)("'")))(__eta0)
                                                                    __frame14[4] = {}
                                                                    __frame14[4]["tag"] = "0"
                                                                    __frame14[4]["arg1"] = function(b)
                                                                      return function(a)
                                                                          return function(func)
                                                                              return function(__arg149)
                                                                                  return function(__eta1)
                                                                                      return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                    __frame14[4]["arg2"] = function(a)
                                                                      return function(__arg482)
                                                                          return function(__eta1)
                                                                              return __arg482
                                                                            end
                                                                        end
                                                                    end
                                                                    __frame14[4]["arg3"] = function(b)
                                                                      return function(a)
                                                                          return function(__arg483)
                                                                              return function(__arg485)
                                                                                  return function(__eta1)
                                                                                      local __act17 = __arg483(__eta1)
                                                                                      local __act16 = __arg485(__eta1)
                                                                                      return __act17(__act16)
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                    __frame14[5] = {}
                                                                    __frame14[5]["tag"] = "0"
                                                                    __frame14[5]["arg1"] = __frame14[4]
                                                                    __frame14[5]["arg2"] = function(b)
                                                                      return function(a)
                                                                          return function(__arg644)
                                                                              return function(__arg645)
                                                                                  return function(__eta1)
                                                                                      local __act25 = __arg644(__eta1)
                                                                                      return __arg645(__act25)(__eta1)
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                    __frame14[5]["arg3"] = function(a)
                                                                      return function(__arg647)
                                                                          return function(__eta1)
                                                                              local __act51 = __arg647(__eta1)
                                                                              return __act51(__eta1)
                                                                            end
                                                                        end
                                                                    end
                                                                    __frame14[6] = {}
                                                                    __frame14[6]["tag"] = "0"
                                                                    __frame14[6]["arg1"] = __frame14[5]
                                                                    __frame14[6]["arg2"] = function(a)
                                                                      return function(__arg6794)
                                                                          return __arg6794
                                                                        end
                                                                    end
                                                                    return idris["Plugin.quitServer"](nil)(__frame14[6])(__arg3)(__eta0)
                                                                  end
                                                              end)(function(__eta0)
                                                                local __frame13 = {
                                                                  nil,
                                                                  nil,
                                                                  nil,
                                                                  nil,
                                                                  nil,
                                                                  nil
                                                                }
                                                                __frame13[1] = {}
                                                                __frame13[1]["tag"] = "0"
                                                                __frame13[1]["arg1"] = function(b)
                                                                  return function(a)
                                                                      return function(func)
                                                                          return function(__arg149)
                                                                              return function(__eta1)
                                                                                  return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                                __frame13[1]["arg2"] = function(a)
                                                                  return function(__arg482)
                                                                      return function(__eta1)
                                                                          return __arg482
                                                                        end
                                                                    end
                                                                end
                                                                __frame13[1]["arg3"] = function(b)
                                                                  return function(a)
                                                                      return function(__arg483)
                                                                          return function(__arg485)
                                                                              return function(__eta1)
                                                                                  local __act17 = __arg483(__eta1)
                                                                                  local __act16 = __arg485(__eta1)
                                                                                  return __act17(__act16)
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                                __frame13[2] = {}
                                                                __frame13[2]["tag"] = "0"
                                                                __frame13[2]["arg1"] = __frame13[1]
                                                                __frame13[2]["arg2"] = function(b)
                                                                  return function(a)
                                                                      return function(__arg644)
                                                                          return function(__arg645)
                                                                              return function(__eta1)
                                                                                  local __act24 = __arg644(__eta1)
                                                                                  return __arg645(__act24)(__eta1)
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                                __frame13[2]["arg3"] = function(a)
                                                                  return function(__arg647)
                                                                      return function(__eta1)
                                                                          local __act51 = __arg647(__eta1)
                                                                          return __act51(__eta1)
                                                                        end
                                                                    end
                                                                end
                                                                __frame13[3] = {}
                                                                __frame13[3]["tag"] = "0"
                                                                __frame13[3]["arg1"] = __frame13[2]
                                                                __frame13[3]["arg2"] = function(a)
                                                                  return function(__arg6794)
                                                                      return __arg6794
                                                                    end
                                                                end
                                                                local __act24 = idris["Foreign.nvimCommand"](nil)(__frame13[3])("echom 'Idris2 stdout closed'")(__eta0)
                                                                __frame13[4] = {}
                                                                __frame13[4]["tag"] = "0"
                                                                __frame13[4]["arg1"] = function(b)
                                                                  return function(a)
                                                                      return function(func)
                                                                          return function(__arg149)
                                                                              return function(__eta1)
                                                                                  return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                                __frame13[4]["arg2"] = function(a)
                                                                  return function(__arg482)
                                                                      return function(__eta1)
                                                                          return __arg482
                                                                        end
                                                                    end
                                                                end
                                                                __frame13[4]["arg3"] = function(b)
                                                                  return function(a)
                                                                      return function(__arg483)
                                                                          return function(__arg485)
                                                                              return function(__eta1)
                                                                                  local __act17 = __arg483(__eta1)
                                                                                  local __act16 = __arg485(__eta1)
                                                                                  return __act17(__act16)
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                                __frame13[5] = {}
                                                                __frame13[5]["tag"] = "0"
                                                                __frame13[5]["arg1"] = __frame13[4]
                                                                __frame13[5]["arg2"] = function(b)
                                                                  return function(a)
                                                                      return function(__arg644)
                                                                          return function(__arg645)
                                                                              return function(__eta1)
                                                                                  local __act25 = __arg644(__eta1)
                                                                                  return __arg645(__act25)(__eta1)
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                                __frame13[5]["arg3"] = function(a)
                                                                  return function(__arg647)
                                                                      return function(__eta1)
                                                                          local __act51 = __arg647(__eta1)
                                                                          return __act51(__eta1)
                                                                        end
                                                                    end
                                                                end
                                                                __frame13[6] = {}
                                                                __frame13[6]["tag"] = "0"
                                                                __frame13[6]["arg1"] = __frame13[5]
                                                                __frame13[6]["arg2"] = function(a)
                                                                  return function(__arg6794)
                                                                      return __arg6794
                                                                    end
                                                                end
                                                                return idris["Plugin.quitServer"](nil)(__frame13[6])(__arg3)(__eta0)
                                                              end)
                                                          end)
                                                      end
                                                      __frame10[7] = __frame10[6][__frame10[5]["tag"]]
                                                      if __frame10[7] then
                                                        __frame10[8] = __frame10[7]()
                                                      else
                                                        idris["error"]("Impossible else branch")
                                                      end
                                                      return __frame10[8]
                                                    end)
                                                end
                                                __frame8[7] = __frame8[6][__frame8[5]["tag"]]
                                                if __frame8[7] then
                                                  __frame8[8] = __frame8[7]()
                                                else
                                                  idris["error"]("Impossible else branch")
                                                end
                                                return __frame8[8]
                                              end)
                                          end
                                          __frame6[7] = __frame6[6][__frame6[5]["tag"]]
                                          if __frame6[7] then
                                            __frame6[8] = __frame6[7]()
                                          else
                                            idris["error"]("Impossible else branch")
                                          end
                                          return __frame6[8]
                                        end
                                        __frame5[2]["1"] = function()
                                          return idris["Foreign.nvimCommand"](nil)(__arg1)("echom 'Idris2 process already spawned'")
                                        end
                                        __frame5[3] = __frame5[2][__frame5[1]["tag"]]
                                        if __frame5[3] then
                                          __frame5[4] = __frame5[3]()
                                        else
                                          idris["error"]("Impossible else branch")
                                        end
                                        return __frame5[4]
                                      end)
                                  end
                                  __frame3[7] = __frame3[6][__frame3[5]["tag"]]
                                  if __frame3[7] then
                                    __frame3[8] = __frame3[7]()
                                  else
                                    idris["error"]("Impossible else branch")
                                  end
                                  return __frame3[8]
                                end
                                __frame2[3] = __frame2[2][__frame2[1]["tag"]]
                                if __frame2[3] then
                                  __frame2[4] = __frame2[3]()
                                else
                                  idris["error"]("Impossible else branch")
                                end
                                return __frame2[4]
                              end
                              __frame1[3] = __frame1[2][__frame1[1]["tag"]]
                              if __frame1[3] then
                                __frame1[4] = __frame1[3]()
                              else
                                idris["error"]("Impossible else branch")
                              end
                              return __frame1[4]
                            end)()
                        end
                    end
                end
            end
        end
    end
end
idris["Commands.buildCommand"] = function(__arg0)
  return function(__ext0)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil,
            nil
          }
          local __act24 = idris["Foreign.genHistoryIndex"](__ext0)
          local __act25 = idris["Foreign.putCmdInHistory"](__act24)(__arg0)(__ext0)
          __frame1[1] = {}
          __frame1[1]["tag"] = "3"
          __frame1[1]["arg1"] = idris["Prelude.Types.cast_Cast__Int_Integer"](__act24)
          __frame1[2] = {}
          __frame1[2]["tag"] = "0"
          __frame1[3] = {}
          __frame1[3]["tag"] = "1"
          __frame1[3]["arg1"] = __frame1[1]
          __frame1[3]["arg2"] = __frame1[2]
          __frame1[4] = {}
          __frame1[4]["tag"] = "1"
          __frame1[4]["arg1"] = idris["Idris.IDEMode.Commands.toSExp_SExpable__IDECommand"](__arg0)
          __frame1[4]["arg2"] = __frame1[3]
          __frame1[5] = {}
          __frame1[5]["tag"] = "0"
          __frame1[5]["arg1"] = __frame1[4]
          local s = idris["Idris.IDEMode.Commands.show_Show__SExp"](__frame1[5])
          return idris["Prelude.Types.Strings.++"](idris["Utils.Hex.leftPad"]("0")(bigint:new("1") + bigint:new("1") + bigint:new("1") + bigint:new("1") + bigint:new("1") + bigint:new("1") + bigint:new("0"))(idris["Utils.Hex.asHex"](idris["Prelude.Types.cast_Cast__Nat_Int"](idris["Prelude.Types.Strings.length"](s)))))(s)
        end)()
    end
end
idris["Commands.loadCurrent"] = function(__ext0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      __frame1[1]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[1]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[1]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[2] = {}
      __frame1[2]["tag"] = "0"
      __frame1[2]["arg1"] = __frame1[1]
      __frame1[2]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act24 = __arg644(__eta0)
                        return __arg645(__act24)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[2]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[3] = {}
      __frame1[3]["tag"] = "0"
      __frame1[3]["arg1"] = __frame1[2]
      __frame1[3]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act24 = idris["Foreign.saveBuffer"](nil)(__frame1[3])(__ext0)
      local __act25 = idris["Foreign.getGlobalClient"](__ext0)
      __frame1[4] = {}
      __frame1[4]["tag"] = "0"
      __frame1[4]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[4]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[4]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[5] = {}
      __frame1[5]["tag"] = "0"
      __frame1[5]["arg1"] = __frame1[4]
      __frame1[5]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act26 = __arg644(__eta0)
                        return __arg645(__act26)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[5]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[6] = {}
      __frame1[6]["tag"] = "0"
      __frame1[6]["arg1"] = __frame1[5]
      __frame1[6]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act26 = idris["Foreign.filePath"](nil)(__frame1[6])(__ext0)
      __frame1[7] = {}
      __frame1[7]["tag"] = "0"
      __frame1[8] = {}
      __frame1[8]["tag"] = "1"
      __frame1[8]["arg1"] = __act26
      __frame1[8]["arg2"] = __frame1[7]
      local __act27 = idris["Commands.buildCommand"](__frame1[8])(__ext0)
      __frame1[9] = {}
      __frame1[9]["tag"] = "0"
      __frame1[9]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[9]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[9]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[10] = {}
      __frame1[10]["tag"] = "0"
      __frame1[10]["arg1"] = __frame1[9]
      __frame1[10]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act28 = __arg644(__eta0)
                        return __arg645(__act28)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[10]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[11] = {}
      __frame1[11]["tag"] = "0"
      __frame1[11]["arg1"] = __frame1[10]
      __frame1[11]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      return idris["Foreign.write"](nil)(__frame1[11])(__act25)(__act27)(__ext0)
    end)()
end
idris["Commands.case[6253]case block in loadCommands"] = function(__arg0)
  return function(__arg1)
      return (function()
          local __frame1 = {
            nil,
            nil,
            nil,
            nil
          }
          __frame1[1] = __arg1
          __frame1[2] = {
            nil,
            nil
          }
          __frame1[2][0] = function()
            return function(__eta0)
                return idris["Commands.loadCurrent"](__eta0)
              end
          end
          __frame1[2][1] = function()
            return function(__eta0)
                local __frame3 = {
                  nil
                }
                __frame3[1] = {}
                __frame3[1]["tag"] = "0"
                return __frame3[1]
              end
          end
          __frame1[3] = __frame1[2][__frame1[1]]
          if __frame1[3] then
            __frame1[4] = __frame1[3]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame1[4]
        end)()
    end
end
idris["Commands.typeOfSel"] = function(__ext0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      __frame1[1]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[1]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[1]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[2] = {}
      __frame1[2]["tag"] = "0"
      __frame1[2]["arg1"] = __frame1[1]
      __frame1[2]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act24 = __arg644(__eta0)
                        return __arg645(__act24)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[2]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[3] = {}
      __frame1[3]["tag"] = "0"
      __frame1[3]["arg1"] = __frame1[2]
      __frame1[3]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act24 = idris["Foreign.isBufferModified"](nil)(__frame1[3])(__ext0)
      __frame1[4] = {}
      __frame1[4]["tag"] = "0"
      __frame1[4]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[4]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[4]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      local __act24 = idris["Prelude.Interfaces.when"](nil)(__frame1[4])(__act24)(function()
        return function(__eta0)
            return idris["Commands.loadCurrent"](__eta0)
          end
      end)(__ext0)
      local __act25 = idris["Foreign.getGlobalClient"](__ext0)
      __frame1[5] = {}
      __frame1[5]["tag"] = "0"
      __frame1[5]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[5]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[5]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[6] = {}
      __frame1[6]["tag"] = "0"
      __frame1[6]["arg1"] = __frame1[5]
      __frame1[6]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act26 = __arg644(__eta0)
                        return __arg645(__act26)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[6]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[7] = {}
      __frame1[7]["tag"] = "0"
      __frame1[7]["arg1"] = __frame1[6]
      __frame1[7]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act26 = idris["Prelude.Interfaces.<$>"](nil)(nil)(nil)(function(__eta0)
        return function(__eta1)
            return function(__eta2)
                return function(__eta3)
                    return function(__eta4)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(__eta2)(__eta3)(__eta4)
                      end
                  end
              end
          end
      end)(function(__eta0)
        return idris["Commands.extractName"](__eta0)
      end)(idris["Foreign.getSelection"](nil)(__frame1[7]))(__ext0)
      __frame1[8] = {}
      __frame1[8]["tag"] = "0"
      __frame1[9] = {}
      __frame1[9]["tag"] = "2"
      __frame1[9]["arg1"] = __act26
      __frame1[9]["arg2"] = __frame1[8]
      local __act27 = idris["Commands.buildCommand"](__frame1[9])(__ext0)
      __frame1[10] = {}
      __frame1[10]["tag"] = "0"
      __frame1[10]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[10]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[10]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[11] = {}
      __frame1[11]["tag"] = "0"
      __frame1[11]["arg1"] = __frame1[10]
      __frame1[11]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act28 = __arg644(__eta0)
                        return __arg645(__act28)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[11]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[12] = {}
      __frame1[12]["tag"] = "0"
      __frame1[12]["arg1"] = __frame1[11]
      __frame1[12]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      return idris["Foreign.write"](nil)(__frame1[12])(__act25)(__act27)(__ext0)
    end)()
end
idris["Commands.case[6346]case block in case block in case block in case block in loadCommands"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return (function()
                      local __frame1 = {
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame1[1] = __arg4
                      __frame1[2] = {
                        nil,
                        nil
                      }
                      __frame1[2][0] = function()
                        return function(__eta0)
                            return idris["Commands.typeOfSel"](__eta0)
                          end
                      end
                      __frame1[2][1] = function()
                        return function(__eta0)
                            local __frame3 = {
                              nil
                            }
                            __frame3[1] = {}
                            __frame3[1]["tag"] = "0"
                            return __frame3[1]
                          end
                      end
                      __frame1[3] = __frame1[2][__frame1[1]]
                      if __frame1[3] then
                        __frame1[4] = __frame1[3]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame1[4]
                    end)()
                end
            end
        end
    end
end
idris["Commands.typeOfPrompt"] = function(__ext0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      __frame1[1]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[1]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[1]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[2] = {}
      __frame1[2]["tag"] = "0"
      __frame1[2]["arg1"] = __frame1[1]
      __frame1[2]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act24 = __arg644(__eta0)
                        return __arg645(__act24)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[2]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[3] = {}
      __frame1[3]["tag"] = "0"
      __frame1[3]["arg1"] = __frame1[2]
      __frame1[3]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act24 = idris["Foreign.isBufferModified"](nil)(__frame1[3])(__ext0)
      __frame1[4] = {}
      __frame1[4]["tag"] = "0"
      __frame1[4]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[4]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[4]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      local __act24 = idris["Prelude.Interfaces.when"](nil)(__frame1[4])(__act24)(function()
        return function(__eta0)
            return idris["Commands.loadCurrent"](__eta0)
          end
      end)(__ext0)
      local __act25 = idris["Foreign.getGlobalClient"](__ext0)
      __frame1[5] = {}
      __frame1[5]["tag"] = "0"
      __frame1[5]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[5]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[5]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[6] = {}
      __frame1[6]["tag"] = "0"
      __frame1[6]["arg1"] = __frame1[5]
      __frame1[6]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act26 = __arg644(__eta0)
                        return __arg645(__act26)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[6]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[7] = {}
      __frame1[7]["tag"] = "0"
      __frame1[7]["arg1"] = __frame1[6]
      __frame1[7]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act26 = idris["Prelude.Interfaces.<$>"](nil)(nil)(nil)(function(__eta0)
        return function(__eta1)
            return function(__eta2)
                return function(__eta3)
                    return function(__eta4)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(__eta2)(__eta3)(__eta4)
                      end
                  end
              end
          end
      end)(function(__eta0)
        return idris["Commands.extractName"](__eta0)
      end)(idris["Foreign.nvimEval"](nil)(nil)(__frame1[7])("input('> ')"))(__ext0)
      __frame1[8] = {}
      __frame1[8]["tag"] = "0"
      __frame1[9] = {}
      __frame1[9]["tag"] = "2"
      __frame1[9]["arg1"] = __act26
      __frame1[9]["arg2"] = __frame1[8]
      local __act27 = idris["Commands.buildCommand"](__frame1[9])(__ext0)
      __frame1[10] = {}
      __frame1[10]["tag"] = "0"
      __frame1[10]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[10]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[10]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[11] = {}
      __frame1[11]["tag"] = "0"
      __frame1[11]["arg1"] = __frame1[10]
      __frame1[11]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act28 = __arg644(__eta0)
                        return __arg645(__act28)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[11]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[12] = {}
      __frame1[12]["tag"] = "0"
      __frame1[12]["arg1"] = __frame1[11]
      __frame1[12]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      return idris["Foreign.write"](nil)(__frame1[12])(__act25)(__act27)(__ext0)
    end)()
end
idris["Commands.case[6309]case block in case block in case block in loadCommands"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return (function()
                  local __frame1 = {
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame1[1] = __arg3
                  __frame1[2] = {
                    nil,
                    nil
                  }
                  __frame1[2][0] = function()
                    return function(__eta0)
                        return idris["Commands.typeOfPrompt"](__eta0)
                      end
                  end
                  __frame1[2][1] = function()
                    return function(__eta0)
                        local __frame3 = {
                          nil
                        }
                        __frame3[1] = {}
                        __frame3[1]["tag"] = "0"
                        return __frame3[1]
                      end
                  end
                  __frame1[3] = __frame1[2][__frame1[1]]
                  if __frame1[3] then
                    __frame1[4] = __frame1[3]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame1[4]
                end)()
            end
        end
    end
end
idris["Commands.typeOf"] = function(__ext0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      __frame1[1]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[1]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[1]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[2] = {}
      __frame1[2]["tag"] = "0"
      __frame1[2]["arg1"] = __frame1[1]
      __frame1[2]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act24 = __arg644(__eta0)
                        return __arg645(__act24)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[2]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[3] = {}
      __frame1[3]["tag"] = "0"
      __frame1[3]["arg1"] = __frame1[2]
      __frame1[3]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act24 = idris["Foreign.isBufferModified"](nil)(__frame1[3])(__ext0)
      __frame1[4] = {}
      __frame1[4]["tag"] = "0"
      __frame1[4]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[4]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[4]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      local __act24 = idris["Prelude.Interfaces.when"](nil)(__frame1[4])(__act24)(function()
        return function(__eta0)
            return idris["Commands.loadCurrent"](__eta0)
          end
      end)(__ext0)
      local __act25 = idris["Foreign.getGlobalClient"](__ext0)
      __frame1[5] = {}
      __frame1[5]["tag"] = "0"
      __frame1[5]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[5]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[5]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[6] = {}
      __frame1[6]["tag"] = "0"
      __frame1[6]["arg1"] = __frame1[5]
      __frame1[6]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act26 = __arg644(__eta0)
                        return __arg645(__act26)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[6]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[7] = {}
      __frame1[7]["tag"] = "0"
      __frame1[7]["arg1"] = __frame1[6]
      __frame1[7]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act26 = idris["Prelude.Interfaces.<$>"](nil)(nil)(nil)(function(__eta0)
        return function(__eta1)
            return function(__eta2)
                return function(__eta3)
                    return function(__eta4)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(__eta2)(__eta3)(__eta4)
                      end
                  end
              end
          end
      end)(function(__eta0)
        return idris["Commands.extractName"](__eta0)
      end)(idris["Foreign.cursorWord"](nil)(__frame1[7]))(__ext0)
      __frame1[8] = {}
      __frame1[8]["tag"] = "0"
      __frame1[9] = {}
      __frame1[9]["tag"] = "2"
      __frame1[9]["arg1"] = __act26
      __frame1[9]["arg2"] = __frame1[8]
      local __act27 = idris["Commands.buildCommand"](__frame1[9])(__ext0)
      __frame1[10] = {}
      __frame1[10]["tag"] = "0"
      __frame1[10]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[10]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[10]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[11] = {}
      __frame1[11]["tag"] = "0"
      __frame1[11]["arg1"] = __frame1[10]
      __frame1[11]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act28 = __arg644(__eta0)
                        return __arg645(__act28)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[11]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[12] = {}
      __frame1[12]["tag"] = "0"
      __frame1[12]["arg1"] = __frame1[11]
      __frame1[12]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      return idris["Foreign.write"](nil)(__frame1[12])(__act25)(__act27)(__ext0)
    end)()
end
idris["Commands.case[6278]case block in case block in loadCommands"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return (function()
              local __frame1 = {
                nil,
                nil,
                nil,
                nil
              }
              __frame1[1] = __arg2
              __frame1[2] = {
                nil,
                nil
              }
              __frame1[2][0] = function()
                return function(__eta0)
                    return idris["Commands.typeOf"](__eta0)
                  end
              end
              __frame1[2][1] = function()
                return function(__eta0)
                    local __frame3 = {
                      nil
                    }
                    __frame3[1] = {}
                    __frame3[1]["tag"] = "0"
                    return __frame3[1]
                  end
              end
              __frame1[3] = __frame1[2][__frame1[1]]
              if __frame1[3] then
                __frame1[4] = __frame1[3]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame1[4]
            end)()
        end
    end
end
idris["Commands.nameAtSel"] = function(__ext0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      __frame1[1]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[1]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[1]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[2] = {}
      __frame1[2]["tag"] = "0"
      __frame1[2]["arg1"] = __frame1[1]
      __frame1[2]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act24 = __arg644(__eta0)
                        return __arg645(__act24)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[2]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[3] = {}
      __frame1[3]["tag"] = "0"
      __frame1[3]["arg1"] = __frame1[2]
      __frame1[3]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act24 = idris["Foreign.isBufferModified"](nil)(__frame1[3])(__ext0)
      __frame1[4] = {}
      __frame1[4]["tag"] = "0"
      __frame1[4]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[4]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[4]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      local __act24 = idris["Prelude.Interfaces.when"](nil)(__frame1[4])(__act24)(function()
        return function(__eta0)
            return idris["Commands.loadCurrent"](__eta0)
          end
      end)(__ext0)
      local __act25 = idris["Foreign.getGlobalClient"](__ext0)
      __frame1[5] = {}
      __frame1[5]["tag"] = "0"
      __frame1[5]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[5]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[5]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[6] = {}
      __frame1[6]["tag"] = "0"
      __frame1[6]["arg1"] = __frame1[5]
      __frame1[6]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act26 = __arg644(__eta0)
                        return __arg645(__act26)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[6]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[7] = {}
      __frame1[7]["tag"] = "0"
      __frame1[7]["arg1"] = __frame1[6]
      __frame1[7]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act26 = idris["Prelude.Interfaces.<$>"](nil)(nil)(nil)(function(__eta0)
        return function(__eta1)
            return function(__eta2)
                return function(__eta3)
                    return function(__eta4)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(__eta2)(__eta3)(__eta4)
                      end
                  end
              end
          end
      end)(function(__eta0)
        return idris["Commands.extractName"](__eta0)
      end)(idris["Foreign.getSelection"](nil)(__frame1[7]))(__ext0)
      __frame1[8] = {}
      __frame1[8]["tag"] = "0"
      __frame1[9] = {}
      __frame1[9]["tag"] = "3"
      __frame1[9]["arg1"] = __act26
      __frame1[9]["arg2"] = __frame1[8]
      local __act27 = idris["Commands.buildCommand"](__frame1[9])(__ext0)
      __frame1[10] = {}
      __frame1[10]["tag"] = "0"
      __frame1[10]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[10]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[10]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[11] = {}
      __frame1[11]["tag"] = "0"
      __frame1[11]["arg1"] = __frame1[10]
      __frame1[11]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act28 = __arg644(__eta0)
                        return __arg645(__act28)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[11]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[12] = {}
      __frame1[12]["tag"] = "0"
      __frame1[12]["arg1"] = __frame1[11]
      __frame1[12]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      return idris["Foreign.write"](nil)(__frame1[12])(__act25)(__act27)(__ext0)
    end)()
end
idris["Commands.case[6493]case block in case block in case block in case block in case block in case block in case block in loadCommands"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return (function()
                                  local __frame1 = {
                                    nil,
                                    nil,
                                    nil,
                                    nil
                                  }
                                  __frame1[1] = __arg7
                                  __frame1[2] = {
                                    nil,
                                    nil
                                  }
                                  __frame1[2][0] = function()
                                    return function(__eta0)
                                        return idris["Commands.nameAtSel"](__eta0)
                                      end
                                  end
                                  __frame1[2][1] = function()
                                    return function(__eta0)
                                        local __frame3 = {
                                          nil
                                        }
                                        __frame3[1] = {}
                                        __frame3[1]["tag"] = "0"
                                        return __frame3[1]
                                      end
                                  end
                                  __frame1[3] = __frame1[2][__frame1[1]]
                                  if __frame1[3] then
                                    __frame1[4] = __frame1[3]()
                                  else
                                    idris["error"]("Impossible else branch")
                                  end
                                  return __frame1[4]
                                end)()
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Commands.nameAtPrompt"] = function(__ext0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      __frame1[1]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[1]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[1]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[2] = {}
      __frame1[2]["tag"] = "0"
      __frame1[2]["arg1"] = __frame1[1]
      __frame1[2]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act24 = __arg644(__eta0)
                        return __arg645(__act24)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[2]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[3] = {}
      __frame1[3]["tag"] = "0"
      __frame1[3]["arg1"] = __frame1[2]
      __frame1[3]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act24 = idris["Foreign.isBufferModified"](nil)(__frame1[3])(__ext0)
      __frame1[4] = {}
      __frame1[4]["tag"] = "0"
      __frame1[4]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[4]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[4]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      local __act24 = idris["Prelude.Interfaces.when"](nil)(__frame1[4])(__act24)(function()
        return function(__eta0)
            return idris["Commands.loadCurrent"](__eta0)
          end
      end)(__ext0)
      local __act25 = idris["Foreign.getGlobalClient"](__ext0)
      __frame1[5] = {}
      __frame1[5]["tag"] = "0"
      __frame1[5]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[5]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[5]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[6] = {}
      __frame1[6]["tag"] = "0"
      __frame1[6]["arg1"] = __frame1[5]
      __frame1[6]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act26 = __arg644(__eta0)
                        return __arg645(__act26)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[6]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[7] = {}
      __frame1[7]["tag"] = "0"
      __frame1[7]["arg1"] = __frame1[6]
      __frame1[7]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act26 = idris["Prelude.Interfaces.<$>"](nil)(nil)(nil)(function(__eta0)
        return function(__eta1)
            return function(__eta2)
                return function(__eta3)
                    return function(__eta4)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(__eta2)(__eta3)(__eta4)
                      end
                  end
              end
          end
      end)(function(__eta0)
        return idris["Commands.extractName"](__eta0)
      end)(idris["Foreign.nvimEval"](nil)(nil)(__frame1[7])("input('> ')"))(__ext0)
      __frame1[8] = {}
      __frame1[8]["tag"] = "0"
      __frame1[9] = {}
      __frame1[9]["tag"] = "3"
      __frame1[9]["arg1"] = __act26
      __frame1[9]["arg2"] = __frame1[8]
      local __act27 = idris["Commands.buildCommand"](__frame1[9])(__ext0)
      __frame1[10] = {}
      __frame1[10]["tag"] = "0"
      __frame1[10]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[10]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[10]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[11] = {}
      __frame1[11]["tag"] = "0"
      __frame1[11]["arg1"] = __frame1[10]
      __frame1[11]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act28 = __arg644(__eta0)
                        return __arg645(__act28)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[11]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[12] = {}
      __frame1[12]["tag"] = "0"
      __frame1[12]["arg1"] = __frame1[11]
      __frame1[12]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      return idris["Foreign.write"](nil)(__frame1[12])(__act25)(__act27)(__ext0)
    end)()
end
idris["Commands.case[6438]case block in case block in case block in case block in case block in case block in loadCommands"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return (function()
                              local __frame1 = {
                                nil,
                                nil,
                                nil,
                                nil
                              }
                              __frame1[1] = __arg6
                              __frame1[2] = {
                                nil,
                                nil
                              }
                              __frame1[2][0] = function()
                                return function(__eta0)
                                    return idris["Commands.nameAtPrompt"](__eta0)
                                  end
                              end
                              __frame1[2][1] = function()
                                return function(__eta0)
                                    local __frame3 = {
                                      nil
                                    }
                                    __frame3[1] = {}
                                    __frame3[1]["tag"] = "0"
                                    return __frame3[1]
                                  end
                              end
                              __frame1[3] = __frame1[2][__frame1[1]]
                              if __frame1[3] then
                                __frame1[4] = __frame1[3]()
                              else
                                idris["error"]("Impossible else branch")
                              end
                              return __frame1[4]
                            end)()
                        end
                    end
                end
            end
        end
    end
end
idris["Commands.nameAt"] = function(__ext0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      __frame1[1]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[1]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[1]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[2] = {}
      __frame1[2]["tag"] = "0"
      __frame1[2]["arg1"] = __frame1[1]
      __frame1[2]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act24 = __arg644(__eta0)
                        return __arg645(__act24)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[2]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[3] = {}
      __frame1[3]["tag"] = "0"
      __frame1[3]["arg1"] = __frame1[2]
      __frame1[3]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act24 = idris["Foreign.isBufferModified"](nil)(__frame1[3])(__ext0)
      __frame1[4] = {}
      __frame1[4]["tag"] = "0"
      __frame1[4]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[4]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[4]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      local __act24 = idris["Prelude.Interfaces.when"](nil)(__frame1[4])(__act24)(function()
        return function(__eta0)
            return idris["Commands.loadCurrent"](__eta0)
          end
      end)(__ext0)
      local __act25 = idris["Foreign.getGlobalClient"](__ext0)
      __frame1[5] = {}
      __frame1[5]["tag"] = "0"
      __frame1[5]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[5]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[5]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[6] = {}
      __frame1[6]["tag"] = "0"
      __frame1[6]["arg1"] = __frame1[5]
      __frame1[6]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act26 = __arg644(__eta0)
                        return __arg645(__act26)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[6]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[7] = {}
      __frame1[7]["tag"] = "0"
      __frame1[7]["arg1"] = __frame1[6]
      __frame1[7]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act26 = idris["Prelude.Interfaces.<$>"](nil)(nil)(nil)(function(__eta0)
        return function(__eta1)
            return function(__eta2)
                return function(__eta3)
                    return function(__eta4)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(__eta2)(__eta3)(__eta4)
                      end
                  end
              end
          end
      end)(function(__eta0)
        return idris["Commands.extractName"](__eta0)
      end)(idris["Foreign.cursorWord"](nil)(__frame1[7]))(__ext0)
      __frame1[8] = {}
      __frame1[8]["tag"] = "0"
      __frame1[9] = {}
      __frame1[9]["tag"] = "3"
      __frame1[9]["arg1"] = __act26
      __frame1[9]["arg2"] = __frame1[8]
      local __act27 = idris["Commands.buildCommand"](__frame1[9])(__ext0)
      __frame1[10] = {}
      __frame1[10]["tag"] = "0"
      __frame1[10]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[10]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[10]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[11] = {}
      __frame1[11]["tag"] = "0"
      __frame1[11]["arg1"] = __frame1[10]
      __frame1[11]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act28 = __arg644(__eta0)
                        return __arg645(__act28)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[11]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[12] = {}
      __frame1[12]["tag"] = "0"
      __frame1[12]["arg1"] = __frame1[11]
      __frame1[12]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      return idris["Foreign.write"](nil)(__frame1[12])(__act25)(__act27)(__ext0)
    end)()
end
idris["Commands.case[6389]case block in case block in case block in case block in case block in loadCommands"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return (function()
                          local __frame1 = {
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          __frame1[1] = __arg5
                          __frame1[2] = {
                            nil,
                            nil
                          }
                          __frame1[2][0] = function()
                            return function(__eta0)
                                return idris["Commands.nameAt"](__eta0)
                              end
                          end
                          __frame1[2][1] = function()
                            return function(__eta0)
                                local __frame3 = {
                                  nil
                                }
                                __frame3[1] = {}
                                __frame3[1]["tag"] = "0"
                                return __frame3[1]
                              end
                          end
                          __frame1[3] = __frame1[2][__frame1[1]]
                          if __frame1[3] then
                            __frame1[4] = __frame1[3]()
                          else
                            idris["error"]("Impossible else branch")
                          end
                          return __frame1[4]
                        end)()
                    end
                end
            end
        end
    end
end
idris["Commands.metavariables"] = function(__ext0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      __frame1[1]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[1]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[1]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[2] = {}
      __frame1[2]["tag"] = "0"
      __frame1[2]["arg1"] = __frame1[1]
      __frame1[2]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act24 = __arg644(__eta0)
                        return __arg645(__act24)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[2]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[3] = {}
      __frame1[3]["tag"] = "0"
      __frame1[3]["arg1"] = __frame1[2]
      __frame1[3]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act24 = idris["Foreign.isBufferModified"](nil)(__frame1[3])(__ext0)
      __frame1[4] = {}
      __frame1[4]["tag"] = "0"
      __frame1[4]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[4]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[4]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      local __act24 = idris["Prelude.Interfaces.when"](nil)(__frame1[4])(__act24)(function()
        return function(__eta0)
            return idris["Commands.loadCurrent"](__eta0)
          end
      end)(__ext0)
      local __act25 = idris["Foreign.getGlobalClient"](__ext0)
      __frame1[5] = {}
      __frame1[5]["tag"] = "17"
      __frame1[5]["arg1"] = bigint:new("1")
      local __act26 = idris["Commands.buildCommand"](__frame1[5])(__ext0)
      __frame1[6] = {}
      __frame1[6]["tag"] = "0"
      __frame1[6]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[6]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[6]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[7] = {}
      __frame1[7]["tag"] = "0"
      __frame1[7]["arg1"] = __frame1[6]
      __frame1[7]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act27 = __arg644(__eta0)
                        return __arg645(__act27)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[7]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[8] = {}
      __frame1[8]["tag"] = "0"
      __frame1[8]["arg1"] = __frame1[7]
      __frame1[8]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      return idris["Foreign.write"](nil)(__frame1[8])(__act25)(__act26)(__ext0)
    end)()
end
idris["Commands.case[7621]case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in loadCommands"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return function(__arg9)
                                      return function(__arg10)
                                          return function(__arg11)
                                              return function(__arg12)
                                                  return function(__arg13)
                                                      return function(__arg14)
                                                          return function(__arg15)
                                                              return function(__arg16)
                                                                  return function(__arg17)
                                                                      return function(__arg18)
                                                                          return function(__arg19)
                                                                              return (function()
                                                                                  local __frame1 = {
                                                                                    nil,
                                                                                    nil,
                                                                                    nil,
                                                                                    nil
                                                                                  }
                                                                                  __frame1[1] = __arg19
                                                                                  __frame1[2] = {
                                                                                    nil,
                                                                                    nil
                                                                                  }
                                                                                  __frame1[2][0] = function()
                                                                                    return function(__eta0)
                                                                                        return idris["Commands.metavariables"](__eta0)
                                                                                      end
                                                                                  end
                                                                                  __frame1[2][1] = function()
                                                                                    return function(__eta0)
                                                                                        local __frame3 = {
                                                                                          nil
                                                                                        }
                                                                                        __frame3[1] = {}
                                                                                        __frame3[1]["tag"] = "0"
                                                                                        return __frame3[1]
                                                                                      end
                                                                                  end
                                                                                  __frame1[3] = __frame1[2][__frame1[1]]
                                                                                  if __frame1[3] then
                                                                                    __frame1[4] = __frame1[3]()
                                                                                  else
                                                                                    idris["error"]("Impossible else branch")
                                                                                  end
                                                                                  return __frame1[4]
                                                                                end)()
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Commands.makeWith"] = function(__ext0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      __frame1[1]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[1]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[1]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[2] = {}
      __frame1[2]["tag"] = "0"
      __frame1[2]["arg1"] = __frame1[1]
      __frame1[2]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act24 = __arg644(__eta0)
                        return __arg645(__act24)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[2]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[3] = {}
      __frame1[3]["tag"] = "0"
      __frame1[3]["arg1"] = __frame1[2]
      __frame1[3]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act24 = idris["Foreign.isBufferModified"](nil)(__frame1[3])(__ext0)
      __frame1[4] = {}
      __frame1[4]["tag"] = "0"
      __frame1[4]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[4]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[4]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      local __act24 = idris["Prelude.Interfaces.when"](nil)(__frame1[4])(__act24)(function()
        return function(__eta0)
            return idris["Commands.loadCurrent"](__eta0)
          end
      end)(__ext0)
      local __act25 = idris["Foreign.getGlobalClient"](__ext0)
      __frame1[5] = {}
      __frame1[5]["tag"] = "0"
      __frame1[5]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[5]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[5]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[6] = {}
      __frame1[6]["tag"] = "0"
      __frame1[6]["arg1"] = __frame1[5]
      __frame1[6]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act26 = __arg644(__eta0)
                        return __arg645(__act26)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[6]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[7] = {}
      __frame1[7]["tag"] = "0"
      __frame1[7]["arg1"] = __frame1[6]
      __frame1[7]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act26 = idris["Prelude.Interfaces.<$>"](nil)(nil)(nil)(function(__eta0)
        return function(__eta1)
            return function(__eta2)
                return function(__eta3)
                    return function(__eta4)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(__eta2)(__eta3)(__eta4)
                      end
                  end
              end
          end
      end)(function(__eta0)
        return idris["Prelude.Types.cast_Cast__Int_Integer"](__eta0)
      end)(idris["Foreign.cursorLine"](nil)(__frame1[7]))(__ext0)
      __frame1[8] = {}
      __frame1[8]["tag"] = "0"
      __frame1[8]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[8]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[8]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[9] = {}
      __frame1[9]["tag"] = "0"
      __frame1[9]["arg1"] = __frame1[8]
      __frame1[9]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act27 = __arg644(__eta0)
                        return __arg645(__act27)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[9]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[10] = {}
      __frame1[10]["tag"] = "0"
      __frame1[10]["arg1"] = __frame1[9]
      __frame1[10]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act27 = idris["Prelude.Interfaces.<$>"](nil)(nil)(nil)(function(__eta0)
        return function(__eta1)
            return function(__eta2)
                return function(__eta3)
                    return function(__eta4)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(__eta2)(__eta3)(__eta4)
                      end
                  end
              end
          end
      end)(function(__eta0)
        return idris["Commands.extractName"](__eta0)
      end)(idris["Foreign.cursorWord"](nil)(__frame1[10]))(__ext0)
      __frame1[11] = {}
      __frame1[11]["tag"] = "13"
      __frame1[11]["arg1"] = __act26
      __frame1[11]["arg2"] = __act27
      local __act28 = idris["Commands.buildCommand"](__frame1[11])(__ext0)
      __frame1[12] = {}
      __frame1[12]["tag"] = "0"
      __frame1[12]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[12]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[12]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[13] = {}
      __frame1[13]["tag"] = "0"
      __frame1[13]["arg1"] = __frame1[12]
      __frame1[13]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act29 = __arg644(__eta0)
                        return __arg645(__act29)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[13]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[14] = {}
      __frame1[14]["tag"] = "0"
      __frame1[14]["arg1"] = __frame1[13]
      __frame1[14]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      return idris["Foreign.write"](nil)(__frame1[14])(__act25)(__act28)(__ext0)
    end)()
end
idris["Commands.case[7494]case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in loadCommands"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return function(__arg9)
                                      return function(__arg10)
                                          return function(__arg11)
                                              return function(__arg12)
                                                  return function(__arg13)
                                                      return function(__arg14)
                                                          return function(__arg15)
                                                              return function(__arg16)
                                                                  return function(__arg17)
                                                                      return function(__arg18)
                                                                          return (function()
                                                                              local __frame1 = {
                                                                                nil,
                                                                                nil,
                                                                                nil,
                                                                                nil
                                                                              }
                                                                              __frame1[1] = __arg18
                                                                              __frame1[2] = {
                                                                                nil,
                                                                                nil
                                                                              }
                                                                              __frame1[2][0] = function()
                                                                                return function(__eta0)
                                                                                    return idris["Commands.makeWith"](__eta0)
                                                                                  end
                                                                              end
                                                                              __frame1[2][1] = function()
                                                                                return function(__eta0)
                                                                                    local __frame3 = {
                                                                                      nil
                                                                                    }
                                                                                    __frame3[1] = {}
                                                                                    __frame3[1]["tag"] = "0"
                                                                                    return __frame3[1]
                                                                                  end
                                                                              end
                                                                              __frame1[3] = __frame1[2][__frame1[1]]
                                                                              if __frame1[3] then
                                                                                __frame1[4] = __frame1[3]()
                                                                              else
                                                                                idris["error"]("Impossible else branch")
                                                                              end
                                                                              return __frame1[4]
                                                                            end)()
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Commands.makeLemma"] = function(__ext0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      __frame1[1]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[1]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[1]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[2] = {}
      __frame1[2]["tag"] = "0"
      __frame1[2]["arg1"] = __frame1[1]
      __frame1[2]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act24 = __arg644(__eta0)
                        return __arg645(__act24)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[2]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[3] = {}
      __frame1[3]["tag"] = "0"
      __frame1[3]["arg1"] = __frame1[2]
      __frame1[3]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act24 = idris["Foreign.isBufferModified"](nil)(__frame1[3])(__ext0)
      __frame1[4] = {}
      __frame1[4]["tag"] = "0"
      __frame1[4]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[4]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[4]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      local __act24 = idris["Prelude.Interfaces.when"](nil)(__frame1[4])(__act24)(function()
        return function(__eta0)
            return idris["Commands.loadCurrent"](__eta0)
          end
      end)(__ext0)
      local __act25 = idris["Foreign.getGlobalClient"](__ext0)
      __frame1[5] = {}
      __frame1[5]["tag"] = "0"
      __frame1[5]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[5]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[5]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[6] = {}
      __frame1[6]["tag"] = "0"
      __frame1[6]["arg1"] = __frame1[5]
      __frame1[6]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act26 = __arg644(__eta0)
                        return __arg645(__act26)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[6]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[7] = {}
      __frame1[7]["tag"] = "0"
      __frame1[7]["arg1"] = __frame1[6]
      __frame1[7]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act26 = idris["Prelude.Interfaces.<$>"](nil)(nil)(nil)(function(__eta0)
        return function(__eta1)
            return function(__eta2)
                return function(__eta3)
                    return function(__eta4)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(__eta2)(__eta3)(__eta4)
                      end
                  end
              end
          end
      end)(function(__eta0)
        return idris["Prelude.Types.cast_Cast__Int_Integer"](__eta0)
      end)(idris["Foreign.cursorLine"](nil)(__frame1[7]))(__ext0)
      __frame1[8] = {}
      __frame1[8]["tag"] = "0"
      __frame1[8]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[8]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[8]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[9] = {}
      __frame1[9]["tag"] = "0"
      __frame1[9]["arg1"] = __frame1[8]
      __frame1[9]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act27 = __arg644(__eta0)
                        return __arg645(__act27)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[9]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[10] = {}
      __frame1[10]["tag"] = "0"
      __frame1[10]["arg1"] = __frame1[9]
      __frame1[10]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act27 = idris["Prelude.Interfaces.<$>"](nil)(nil)(nil)(function(__eta0)
        return function(__eta1)
            return function(__eta2)
                return function(__eta3)
                    return function(__eta4)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(__eta2)(__eta3)(__eta4)
                      end
                  end
              end
          end
      end)(function(__eta0)
        return idris["Commands.extractName"](__eta0)
      end)(idris["Foreign.cursorWord"](nil)(__frame1[10]))(__ext0)
      __frame1[11] = {}
      __frame1[11]["tag"] = "11"
      __frame1[11]["arg1"] = __act26
      __frame1[11]["arg2"] = __act27
      local __act28 = idris["Commands.buildCommand"](__frame1[11])(__ext0)
      __frame1[12] = {}
      __frame1[12]["tag"] = "0"
      __frame1[12]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[12]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[12]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[13] = {}
      __frame1[13]["tag"] = "0"
      __frame1[13]["arg1"] = __frame1[12]
      __frame1[13]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act29 = __arg644(__eta0)
                        return __arg645(__act29)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[13]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[14] = {}
      __frame1[14]["tag"] = "0"
      __frame1[14]["arg1"] = __frame1[13]
      __frame1[14]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      return idris["Foreign.write"](nil)(__frame1[14])(__act25)(__act28)(__ext0)
    end)()
end
idris["Commands.case[7258]case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in loadCommands"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return function(__arg9)
                                      return function(__arg10)
                                          return function(__arg11)
                                              return function(__arg12)
                                                  return function(__arg13)
                                                      return function(__arg14)
                                                          return function(__arg15)
                                                              return function(__arg16)
                                                                  return (function()
                                                                      local __frame1 = {
                                                                        nil,
                                                                        nil,
                                                                        nil,
                                                                        nil
                                                                      }
                                                                      __frame1[1] = __arg16
                                                                      __frame1[2] = {
                                                                        nil,
                                                                        nil
                                                                      }
                                                                      __frame1[2][0] = function()
                                                                        return function(__eta0)
                                                                            return idris["Commands.makeLemma"](__eta0)
                                                                          end
                                                                      end
                                                                      __frame1[2][1] = function()
                                                                        return function(__eta0)
                                                                            local __frame3 = {
                                                                              nil
                                                                            }
                                                                            __frame3[1] = {}
                                                                            __frame3[1]["tag"] = "0"
                                                                            return __frame3[1]
                                                                          end
                                                                      end
                                                                      __frame1[3] = __frame1[2][__frame1[1]]
                                                                      if __frame1[3] then
                                                                        __frame1[4] = __frame1[3]()
                                                                      else
                                                                        idris["error"]("Impossible else branch")
                                                                      end
                                                                      return __frame1[4]
                                                                    end)()
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Commands.makeCase"] = function(__ext0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      __frame1[1]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[1]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[1]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[2] = {}
      __frame1[2]["tag"] = "0"
      __frame1[2]["arg1"] = __frame1[1]
      __frame1[2]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act24 = __arg644(__eta0)
                        return __arg645(__act24)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[2]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[3] = {}
      __frame1[3]["tag"] = "0"
      __frame1[3]["arg1"] = __frame1[2]
      __frame1[3]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act24 = idris["Foreign.isBufferModified"](nil)(__frame1[3])(__ext0)
      __frame1[4] = {}
      __frame1[4]["tag"] = "0"
      __frame1[4]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[4]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[4]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      local __act24 = idris["Prelude.Interfaces.when"](nil)(__frame1[4])(__act24)(function()
        return function(__eta0)
            return idris["Commands.loadCurrent"](__eta0)
          end
      end)(__ext0)
      local __act25 = idris["Foreign.getGlobalClient"](__ext0)
      __frame1[5] = {}
      __frame1[5]["tag"] = "0"
      __frame1[5]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[5]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[5]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[6] = {}
      __frame1[6]["tag"] = "0"
      __frame1[6]["arg1"] = __frame1[5]
      __frame1[6]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act26 = __arg644(__eta0)
                        return __arg645(__act26)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[6]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[7] = {}
      __frame1[7]["tag"] = "0"
      __frame1[7]["arg1"] = __frame1[6]
      __frame1[7]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act26 = idris["Prelude.Interfaces.<$>"](nil)(nil)(nil)(function(__eta0)
        return function(__eta1)
            return function(__eta2)
                return function(__eta3)
                    return function(__eta4)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(__eta2)(__eta3)(__eta4)
                      end
                  end
              end
          end
      end)(function(__eta0)
        return idris["Prelude.Types.cast_Cast__Int_Integer"](__eta0)
      end)(idris["Foreign.cursorLine"](nil)(__frame1[7]))(__ext0)
      __frame1[8] = {}
      __frame1[8]["tag"] = "0"
      __frame1[8]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[8]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[8]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[9] = {}
      __frame1[9]["tag"] = "0"
      __frame1[9]["arg1"] = __frame1[8]
      __frame1[9]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act27 = __arg644(__eta0)
                        return __arg645(__act27)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[9]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[10] = {}
      __frame1[10]["tag"] = "0"
      __frame1[10]["arg1"] = __frame1[9]
      __frame1[10]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act27 = idris["Prelude.Interfaces.<$>"](nil)(nil)(nil)(function(__eta0)
        return function(__eta1)
            return function(__eta2)
                return function(__eta3)
                    return function(__eta4)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(__eta2)(__eta3)(__eta4)
                      end
                  end
              end
          end
      end)(function(__eta0)
        return idris["Commands.extractName"](__eta0)
      end)(idris["Foreign.cursorWord"](nil)(__frame1[10]))(__ext0)
      __frame1[11] = {}
      __frame1[11]["tag"] = "12"
      __frame1[11]["arg1"] = __act26
      __frame1[11]["arg2"] = __act27
      local __act28 = idris["Commands.buildCommand"](__frame1[11])(__ext0)
      __frame1[12] = {}
      __frame1[12]["tag"] = "0"
      __frame1[12]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[12]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[12]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[13] = {}
      __frame1[13]["tag"] = "0"
      __frame1[13]["arg1"] = __frame1[12]
      __frame1[13]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act29 = __arg644(__eta0)
                        return __arg645(__act29)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[13]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[14] = {}
      __frame1[14]["tag"] = "0"
      __frame1[14]["arg1"] = __frame1[13]
      __frame1[14]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      return idris["Foreign.write"](nil)(__frame1[14])(__act25)(__act28)(__ext0)
    end)()
end
idris["Commands.case[7373]case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in loadCommands"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return function(__arg9)
                                      return function(__arg10)
                                          return function(__arg11)
                                              return function(__arg12)
                                                  return function(__arg13)
                                                      return function(__arg14)
                                                          return function(__arg15)
                                                              return function(__arg16)
                                                                  return function(__arg17)
                                                                      return (function()
                                                                          local __frame1 = {
                                                                            nil,
                                                                            nil,
                                                                            nil,
                                                                            nil
                                                                          }
                                                                          __frame1[1] = __arg17
                                                                          __frame1[2] = {
                                                                            nil,
                                                                            nil
                                                                          }
                                                                          __frame1[2][0] = function()
                                                                            return function(__eta0)
                                                                                return idris["Commands.makeCase"](__eta0)
                                                                              end
                                                                          end
                                                                          __frame1[2][1] = function()
                                                                            return function(__eta0)
                                                                                local __frame3 = {
                                                                                  nil
                                                                                }
                                                                                __frame3[1] = {}
                                                                                __frame3[1]["tag"] = "0"
                                                                                return __frame3[1]
                                                                              end
                                                                          end
                                                                          __frame1[3] = __frame1[2][__frame1[1]]
                                                                          if __frame1[3] then
                                                                            __frame1[4] = __frame1[3]()
                                                                          else
                                                                            idris["error"]("Impossible else branch")
                                                                          end
                                                                          return __frame1[4]
                                                                        end)()
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Commands.interpret"] = function(__ext0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      local __act24 = idris["Foreign.getGlobalClient"](__ext0)
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      __frame1[1]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[1]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[1]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[2] = {}
      __frame1[2]["tag"] = "0"
      __frame1[2]["arg1"] = __frame1[1]
      __frame1[2]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act25 = __arg644(__eta0)
                        return __arg645(__act25)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[2]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[3] = {}
      __frame1[3]["tag"] = "0"
      __frame1[3]["arg1"] = __frame1[2]
      __frame1[3]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act25 = idris["Prelude.Interfaces.<$>"](nil)(nil)(nil)(function(__eta0)
        return function(__eta1)
            return function(__eta2)
                return function(__eta3)
                    return function(__eta4)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(__eta2)(__eta3)(__eta4)
                      end
                  end
              end
          end
      end)(function(__eta0)
        return idris["Commands.extractName"](__eta0)
      end)(idris["Foreign.getSelection"](nil)(__frame1[3]))(__ext0)
      __frame1[4] = {}
      __frame1[4]["tag"] = "0"
      __frame1[4]["arg1"] = __act25
      local __act26 = idris["Commands.buildCommand"](__frame1[4])(__ext0)
      __frame1[5] = {}
      __frame1[5]["tag"] = "0"
      __frame1[5]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[5]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[5]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[6] = {}
      __frame1[6]["tag"] = "0"
      __frame1[6]["arg1"] = __frame1[5]
      __frame1[6]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act27 = __arg644(__eta0)
                        return __arg645(__act27)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[6]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[7] = {}
      __frame1[7]["tag"] = "0"
      __frame1[7]["arg1"] = __frame1[6]
      __frame1[7]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      return idris["Foreign.write"](nil)(__frame1[7])(__act24)(__act26)(__ext0)
    end)()
end
idris["Commands.case[6234]loadCommands"] = function(__arg0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = __arg0
      __frame1[2] = {
        nil,
        nil
      }
      __frame1[2][0] = function()
        return function(__eta0)
            return idris["Commands.interpret"](__eta0)
          end
      end
      __frame1[2][1] = function()
        return function(__eta0)
            local __frame3 = {
              nil
            }
            __frame3[1] = {}
            __frame3[1]["tag"] = "0"
            return __frame3[1]
          end
      end
      __frame1[3] = __frame1[2][__frame1[1]]
      if __frame1[3] then
        __frame1[4] = __frame1[3]()
      else
        idris["error"]("Impossible else branch")
      end
      return __frame1[4]
    end)()
end
idris["Commands.getOptions"] = function(__ext0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil
      }
      local __act24 = idris["Foreign.getGlobalClient"](__ext0)
      __frame1[1] = {}
      __frame1[1]["tag"] = "28"
      local __act25 = idris["Commands.buildCommand"](__frame1[1])(__ext0)
      __frame1[2] = {}
      __frame1[2]["tag"] = "0"
      __frame1[2]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[2]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[2]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[3] = {}
      __frame1[3]["tag"] = "0"
      __frame1[3]["arg1"] = __frame1[2]
      __frame1[3]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act26 = __arg644(__eta0)
                        return __arg645(__act26)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[3]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[4] = {}
      __frame1[4]["tag"] = "0"
      __frame1[4]["arg1"] = __frame1[3]
      __frame1[4]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      return idris["Foreign.write"](nil)(__frame1[4])(__act24)(__act25)(__ext0)
    end)()
end
idris["Commands.case[7893]case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in loadCommands"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return function(__arg9)
                                      return function(__arg10)
                                          return function(__arg11)
                                              return function(__arg12)
                                                  return function(__arg13)
                                                      return function(__arg14)
                                                          return function(__arg15)
                                                              return function(__arg16)
                                                                  return function(__arg17)
                                                                      return function(__arg18)
                                                                          return function(__arg19)
                                                                              return function(__arg20)
                                                                                  return function(__arg21)
                                                                                      return (function()
                                                                                          local __frame1 = {
                                                                                            nil,
                                                                                            nil,
                                                                                            nil,
                                                                                            nil
                                                                                          }
                                                                                          __frame1[1] = __arg21
                                                                                          __frame1[2] = {
                                                                                            nil,
                                                                                            nil
                                                                                          }
                                                                                          __frame1[2][0] = function()
                                                                                            return function(__eta0)
                                                                                                return idris["Commands.getOptions"](__eta0)
                                                                                              end
                                                                                          end
                                                                                          __frame1[2][1] = function()
                                                                                            return function(__eta0)
                                                                                                local __frame3 = {
                                                                                                  nil
                                                                                                }
                                                                                                __frame3[1] = {}
                                                                                                __frame3[1]["tag"] = "0"
                                                                                                return __frame3[1]
                                                                                              end
                                                                                          end
                                                                                          __frame1[3] = __frame1[2][__frame1[1]]
                                                                                          if __frame1[3] then
                                                                                            __frame1[4] = __frame1[3]()
                                                                                          else
                                                                                            idris["error"]("Impossible else branch")
                                                                                          end
                                                                                          return __frame1[4]
                                                                                        end)()
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Commands.generateDefNext"] = function(__ext0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      __frame1[1]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[1]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[1]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[2] = {}
      __frame1[2]["tag"] = "0"
      __frame1[2]["arg1"] = __frame1[1]
      __frame1[2]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act24 = __arg644(__eta0)
                        return __arg645(__act24)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[2]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[3] = {}
      __frame1[3]["tag"] = "0"
      __frame1[3]["arg1"] = __frame1[2]
      __frame1[3]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act24 = idris["Foreign.isBufferModified"](nil)(__frame1[3])(__ext0)
      __frame1[4] = {}
      __frame1[4]["tag"] = "0"
      __frame1[4]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[4]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[4]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      local __act24 = idris["Prelude.Interfaces.when"](nil)(__frame1[4])(__act24)(function()
        return function(__eta0)
            return idris["Commands.loadCurrent"](__eta0)
          end
      end)(__ext0)
      local __act25 = idris["Foreign.getGlobalClient"](__ext0)
      __frame1[5] = {}
      __frame1[5]["tag"] = "10"
      local __act26 = idris["Commands.buildCommand"](__frame1[5])(__ext0)
      __frame1[6] = {}
      __frame1[6]["tag"] = "0"
      __frame1[6]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[6]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[6]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[7] = {}
      __frame1[7]["tag"] = "0"
      __frame1[7]["arg1"] = __frame1[6]
      __frame1[7]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act27 = __arg644(__eta0)
                        return __arg645(__act27)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[7]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[8] = {}
      __frame1[8]["tag"] = "0"
      __frame1[8]["arg1"] = __frame1[7]
      __frame1[8]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      return idris["Foreign.write"](nil)(__frame1[8])(__act25)(__act26)(__ext0)
    end)()
end
idris["Commands.case[7149]case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in loadCommands"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return function(__arg9)
                                      return function(__arg10)
                                          return function(__arg11)
                                              return function(__arg12)
                                                  return function(__arg13)
                                                      return function(__arg14)
                                                          return function(__arg15)
                                                              return (function()
                                                                  local __frame1 = {
                                                                    nil,
                                                                    nil,
                                                                    nil,
                                                                    nil
                                                                  }
                                                                  __frame1[1] = __arg15
                                                                  __frame1[2] = {
                                                                    nil,
                                                                    nil
                                                                  }
                                                                  __frame1[2][0] = function()
                                                                    return function(__eta0)
                                                                        return idris["Commands.generateDefNext"](__eta0)
                                                                      end
                                                                  end
                                                                  __frame1[2][1] = function()
                                                                    return function(__eta0)
                                                                        local __frame3 = {
                                                                          nil
                                                                        }
                                                                        __frame3[1] = {}
                                                                        __frame3[1]["tag"] = "0"
                                                                        return __frame3[1]
                                                                      end
                                                                  end
                                                                  __frame1[3] = __frame1[2][__frame1[1]]
                                                                  if __frame1[3] then
                                                                    __frame1[4] = __frame1[3]()
                                                                  else
                                                                    idris["error"]("Impossible else branch")
                                                                  end
                                                                  return __frame1[4]
                                                                end)()
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Commands.generateDef"] = function(__ext0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      __frame1[1]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[1]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[1]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[2] = {}
      __frame1[2]["tag"] = "0"
      __frame1[2]["arg1"] = __frame1[1]
      __frame1[2]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act24 = __arg644(__eta0)
                        return __arg645(__act24)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[2]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[3] = {}
      __frame1[3]["tag"] = "0"
      __frame1[3]["arg1"] = __frame1[2]
      __frame1[3]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act24 = idris["Foreign.isBufferModified"](nil)(__frame1[3])(__ext0)
      __frame1[4] = {}
      __frame1[4]["tag"] = "0"
      __frame1[4]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[4]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[4]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      local __act24 = idris["Prelude.Interfaces.when"](nil)(__frame1[4])(__act24)(function()
        return function(__eta0)
            return idris["Commands.loadCurrent"](__eta0)
          end
      end)(__ext0)
      local __act25 = idris["Foreign.getGlobalClient"](__ext0)
      __frame1[5] = {}
      __frame1[5]["tag"] = "0"
      __frame1[5]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[5]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[5]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[6] = {}
      __frame1[6]["tag"] = "0"
      __frame1[6]["arg1"] = __frame1[5]
      __frame1[6]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act26 = __arg644(__eta0)
                        return __arg645(__act26)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[6]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[7] = {}
      __frame1[7]["tag"] = "0"
      __frame1[7]["arg1"] = __frame1[6]
      __frame1[7]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act26 = idris["Prelude.Interfaces.<$>"](nil)(nil)(nil)(function(__eta0)
        return function(__eta1)
            return function(__eta2)
                return function(__eta3)
                    return function(__eta4)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(__eta2)(__eta3)(__eta4)
                      end
                  end
              end
          end
      end)(function(__eta0)
        return idris["Prelude.Types.cast_Cast__Int_Integer"](__eta0)
      end)(idris["Foreign.cursorLine"](nil)(__frame1[7]))(__ext0)
      __frame1[8] = {}
      __frame1[8]["tag"] = "0"
      __frame1[8]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[8]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[8]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[9] = {}
      __frame1[9]["tag"] = "0"
      __frame1[9]["arg1"] = __frame1[8]
      __frame1[9]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act27 = __arg644(__eta0)
                        return __arg645(__act27)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[9]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[10] = {}
      __frame1[10]["tag"] = "0"
      __frame1[10]["arg1"] = __frame1[9]
      __frame1[10]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act27 = idris["Prelude.Interfaces.<$>"](nil)(nil)(nil)(function(__eta0)
        return function(__eta1)
            return function(__eta2)
                return function(__eta3)
                    return function(__eta4)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(__eta2)(__eta3)(__eta4)
                      end
                  end
              end
          end
      end)(function(__eta0)
        return idris["Commands.extractName"](__eta0)
      end)(idris["Foreign.cursorWord"](nil)(__frame1[10]))(__ext0)
      __frame1[11] = {}
      __frame1[11]["tag"] = "9"
      __frame1[11]["arg1"] = __act26
      __frame1[11]["arg2"] = __act27
      local __act28 = idris["Commands.buildCommand"](__frame1[11])(__ext0)
      __frame1[12] = {}
      __frame1[12]["tag"] = "0"
      __frame1[12]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[12]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[12]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[13] = {}
      __frame1[13]["tag"] = "0"
      __frame1[13]["arg1"] = __frame1[12]
      __frame1[13]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act29 = __arg644(__eta0)
                        return __arg645(__act29)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[13]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[14] = {}
      __frame1[14]["tag"] = "0"
      __frame1[14]["arg1"] = __frame1[13]
      __frame1[14]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      return idris["Foreign.write"](nil)(__frame1[14])(__act25)(__act28)(__ext0)
    end)()
end
idris["Commands.case[7046]case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in loadCommands"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return function(__arg9)
                                      return function(__arg10)
                                          return function(__arg11)
                                              return function(__arg12)
                                                  return function(__arg13)
                                                      return function(__arg14)
                                                          return (function()
                                                              local __frame1 = {
                                                                nil,
                                                                nil,
                                                                nil,
                                                                nil
                                                              }
                                                              __frame1[1] = __arg14
                                                              __frame1[2] = {
                                                                nil,
                                                                nil
                                                              }
                                                              __frame1[2][0] = function()
                                                                return function(__eta0)
                                                                    return idris["Commands.generateDef"](__eta0)
                                                                  end
                                                              end
                                                              __frame1[2][1] = function()
                                                                return function(__eta0)
                                                                    local __frame3 = {
                                                                      nil
                                                                    }
                                                                    __frame3[1] = {}
                                                                    __frame3[1]["tag"] = "0"
                                                                    return __frame3[1]
                                                                  end
                                                              end
                                                              __frame1[3] = __frame1[2][__frame1[1]]
                                                              if __frame1[3] then
                                                                __frame1[4] = __frame1[3]()
                                                              else
                                                                idris["error"]("Impossible else branch")
                                                              end
                                                              return __frame1[4]
                                                            end)()
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Commands.exprSearchNext"] = function(__ext0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      __frame1[1]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[1]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[1]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[2] = {}
      __frame1[2]["tag"] = "0"
      __frame1[2]["arg1"] = __frame1[1]
      __frame1[2]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act24 = __arg644(__eta0)
                        return __arg645(__act24)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[2]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[3] = {}
      __frame1[3]["tag"] = "0"
      __frame1[3]["arg1"] = __frame1[2]
      __frame1[3]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act24 = idris["Foreign.isBufferModified"](nil)(__frame1[3])(__ext0)
      __frame1[4] = {}
      __frame1[4]["tag"] = "0"
      __frame1[4]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[4]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[4]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      local __act24 = idris["Prelude.Interfaces.when"](nil)(__frame1[4])(__act24)(function()
        return function(__eta0)
            return idris["Commands.loadCurrent"](__eta0)
          end
      end)(__ext0)
      local __act25 = idris["Foreign.getGlobalClient"](__ext0)
      __frame1[5] = {}
      __frame1[5]["tag"] = "8"
      local __act26 = idris["Commands.buildCommand"](__frame1[5])(__ext0)
      __frame1[6] = {}
      __frame1[6]["tag"] = "0"
      __frame1[6]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[6]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[6]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[7] = {}
      __frame1[7]["tag"] = "0"
      __frame1[7]["arg1"] = __frame1[6]
      __frame1[7]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act27 = __arg644(__eta0)
                        return __arg645(__act27)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[7]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[8] = {}
      __frame1[8]["tag"] = "0"
      __frame1[8]["arg1"] = __frame1[7]
      __frame1[8]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      return idris["Foreign.write"](nil)(__frame1[8])(__act25)(__act26)(__ext0)
    end)()
end
idris["Commands.case[6949]case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in loadCommands"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return function(__arg9)
                                      return function(__arg10)
                                          return function(__arg11)
                                              return function(__arg12)
                                                  return function(__arg13)
                                                      return (function()
                                                          local __frame1 = {
                                                            nil,
                                                            nil,
                                                            nil,
                                                            nil
                                                          }
                                                          __frame1[1] = __arg13
                                                          __frame1[2] = {
                                                            nil,
                                                            nil
                                                          }
                                                          __frame1[2][0] = function()
                                                            return function(__eta0)
                                                                return idris["Commands.exprSearchNext"](__eta0)
                                                              end
                                                          end
                                                          __frame1[2][1] = function()
                                                            return function(__eta0)
                                                                local __frame3 = {
                                                                  nil
                                                                }
                                                                __frame3[1] = {}
                                                                __frame3[1]["tag"] = "0"
                                                                return __frame3[1]
                                                              end
                                                          end
                                                          __frame1[3] = __frame1[2][__frame1[1]]
                                                          if __frame1[3] then
                                                            __frame1[4] = __frame1[3]()
                                                          else
                                                            idris["error"]("Impossible else branch")
                                                          end
                                                          return __frame1[4]
                                                        end)()
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Commands.exprSearch"] = function(__ext0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      __frame1[1]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[1]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[1]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[2] = {}
      __frame1[2]["tag"] = "0"
      __frame1[2]["arg1"] = __frame1[1]
      __frame1[2]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act24 = __arg644(__eta0)
                        return __arg645(__act24)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[2]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[3] = {}
      __frame1[3]["tag"] = "0"
      __frame1[3]["arg1"] = __frame1[2]
      __frame1[3]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act24 = idris["Foreign.isBufferModified"](nil)(__frame1[3])(__ext0)
      __frame1[4] = {}
      __frame1[4]["tag"] = "0"
      __frame1[4]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[4]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[4]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      local __act24 = idris["Prelude.Interfaces.when"](nil)(__frame1[4])(__act24)(function()
        return function(__eta0)
            return idris["Commands.loadCurrent"](__eta0)
          end
      end)(__ext0)
      local __act25 = idris["Foreign.getGlobalClient"](__ext0)
      __frame1[5] = {}
      __frame1[5]["tag"] = "0"
      __frame1[5]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[5]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[5]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[6] = {}
      __frame1[6]["tag"] = "0"
      __frame1[6]["arg1"] = __frame1[5]
      __frame1[6]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act26 = __arg644(__eta0)
                        return __arg645(__act26)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[6]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[7] = {}
      __frame1[7]["tag"] = "0"
      __frame1[7]["arg1"] = __frame1[6]
      __frame1[7]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act26 = idris["Prelude.Interfaces.<$>"](nil)(nil)(nil)(function(__eta0)
        return function(__eta1)
            return function(__eta2)
                return function(__eta3)
                    return function(__eta4)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(__eta2)(__eta3)(__eta4)
                      end
                  end
              end
          end
      end)(function(__eta0)
        return idris["Prelude.Types.cast_Cast__Int_Integer"](__eta0)
      end)(idris["Foreign.cursorLine"](nil)(__frame1[7]))(__ext0)
      __frame1[8] = {}
      __frame1[8]["tag"] = "0"
      __frame1[8]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[8]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[8]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[9] = {}
      __frame1[9]["tag"] = "0"
      __frame1[9]["arg1"] = __frame1[8]
      __frame1[9]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act27 = __arg644(__eta0)
                        return __arg645(__act27)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[9]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[10] = {}
      __frame1[10]["tag"] = "0"
      __frame1[10]["arg1"] = __frame1[9]
      __frame1[10]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act27 = idris["Prelude.Interfaces.<$>"](nil)(nil)(nil)(function(__eta0)
        return function(__eta1)
            return function(__eta2)
                return function(__eta3)
                    return function(__eta4)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(__eta2)(__eta3)(__eta4)
                      end
                  end
              end
          end
      end)(function(__eta0)
        return idris["Commands.extractName"](__eta0)
      end)(idris["Foreign.cursorWord"](nil)(__frame1[10]))(__ext0)
      __frame1[11] = {}
      __frame1[11]["tag"] = "0"
      __frame1[12] = {}
      __frame1[12]["tag"] = "7"
      __frame1[12]["arg1"] = __act26
      __frame1[12]["arg2"] = __act27
      __frame1[12]["arg3"] = __frame1[11]
      __frame1[12]["arg4"] = 1
      local __act28 = idris["Commands.buildCommand"](__frame1[12])(__ext0)
      __frame1[13] = {}
      __frame1[13]["tag"] = "0"
      __frame1[13]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[13]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[13]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[14] = {}
      __frame1[14]["tag"] = "0"
      __frame1[14]["arg1"] = __frame1[13]
      __frame1[14]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act29 = __arg644(__eta0)
                        return __arg645(__act29)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[14]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[15] = {}
      __frame1[15]["tag"] = "0"
      __frame1[15]["arg1"] = __frame1[14]
      __frame1[15]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      return idris["Foreign.write"](nil)(__frame1[15])(__act25)(__act28)(__ext0)
    end)()
end
idris["Commands.case[6858]case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in loadCommands"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return function(__arg9)
                                      return function(__arg10)
                                          return function(__arg11)
                                              return function(__arg12)
                                                  return (function()
                                                      local __frame1 = {
                                                        nil,
                                                        nil,
                                                        nil,
                                                        nil
                                                      }
                                                      __frame1[1] = __arg12
                                                      __frame1[2] = {
                                                        nil,
                                                        nil
                                                      }
                                                      __frame1[2][0] = function()
                                                        return function(__eta0)
                                                            return idris["Commands.exprSearch"](__eta0)
                                                          end
                                                      end
                                                      __frame1[2][1] = function()
                                                        return function(__eta0)
                                                            local __frame3 = {
                                                              nil
                                                            }
                                                            __frame3[1] = {}
                                                            __frame3[1]["tag"] = "0"
                                                            return __frame3[1]
                                                          end
                                                      end
                                                      __frame1[3] = __frame1[2][__frame1[1]]
                                                      if __frame1[3] then
                                                        __frame1[4] = __frame1[3]()
                                                      else
                                                        idris["error"]("Impossible else branch")
                                                      end
                                                      return __frame1[4]
                                                    end)()
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Commands.docOverview"] = function(__ext0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      __frame1[1]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[1]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[1]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[2] = {}
      __frame1[2]["tag"] = "0"
      __frame1[2]["arg1"] = __frame1[1]
      __frame1[2]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act24 = __arg644(__eta0)
                        return __arg645(__act24)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[2]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[3] = {}
      __frame1[3]["tag"] = "0"
      __frame1[3]["arg1"] = __frame1[2]
      __frame1[3]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act24 = idris["Foreign.isBufferModified"](nil)(__frame1[3])(__ext0)
      __frame1[4] = {}
      __frame1[4]["tag"] = "0"
      __frame1[4]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[4]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[4]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      local __act24 = idris["Prelude.Interfaces.when"](nil)(__frame1[4])(__act24)(function()
        return function(__eta0)
            return idris["Commands.loadCurrent"](__eta0)
          end
      end)(__ext0)
      local __act25 = idris["Foreign.getGlobalClient"](__ext0)
      __frame1[5] = {}
      __frame1[5]["tag"] = "0"
      __frame1[5]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[5]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[5]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[6] = {}
      __frame1[6]["tag"] = "0"
      __frame1[6]["arg1"] = __frame1[5]
      __frame1[6]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act26 = __arg644(__eta0)
                        return __arg645(__act26)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[6]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[7] = {}
      __frame1[7]["tag"] = "0"
      __frame1[7]["arg1"] = __frame1[6]
      __frame1[7]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act26 = idris["Prelude.Interfaces.<$>"](nil)(nil)(nil)(function(__eta0)
        return function(__eta1)
            return function(__eta2)
                return function(__eta3)
                    return function(__eta4)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(__eta2)(__eta3)(__eta4)
                      end
                  end
              end
          end
      end)(function(__eta0)
        return idris["Commands.extractName"](__eta0)
      end)(idris["Foreign.cursorWord"](nil)(__frame1[7]))(__ext0)
      __frame1[8] = {}
      __frame1[8]["tag"] = "0"
      __frame1[9] = {}
      __frame1[9]["tag"] = "1"
      __frame1[9]["arg1"] = __frame1[8]
      __frame1[10] = {}
      __frame1[10]["tag"] = "14"
      __frame1[10]["arg1"] = __act26
      __frame1[10]["arg2"] = __frame1[9]
      local __act27 = idris["Commands.buildCommand"](__frame1[10])(__ext0)
      __frame1[11] = {}
      __frame1[11]["tag"] = "0"
      __frame1[11]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[11]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[11]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[12] = {}
      __frame1[12]["tag"] = "0"
      __frame1[12]["arg1"] = __frame1[11]
      __frame1[12]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act28 = __arg644(__eta0)
                        return __arg645(__act28)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[12]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[13] = {}
      __frame1[13]["tag"] = "0"
      __frame1[13]["arg1"] = __frame1[12]
      __frame1[13]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      return idris["Foreign.write"](nil)(__frame1[13])(__act25)(__act27)(__ext0)
    end)()
end
idris["Commands.case[6554]case block in case block in case block in case block in case block in case block in case block in case block in loadCommands"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return (function()
                                      local __frame1 = {
                                        nil,
                                        nil,
                                        nil,
                                        nil
                                      }
                                      __frame1[1] = __arg8
                                      __frame1[2] = {
                                        nil,
                                        nil
                                      }
                                      __frame1[2][0] = function()
                                        return function(__eta0)
                                            return idris["Commands.docOverview"](__eta0)
                                          end
                                      end
                                      __frame1[2][1] = function()
                                        return function(__eta0)
                                            local __frame3 = {
                                              nil
                                            }
                                            __frame3[1] = {}
                                            __frame3[1]["tag"] = "0"
                                            return __frame3[1]
                                          end
                                      end
                                      __frame1[3] = __frame1[2][__frame1[1]]
                                      if __frame1[3] then
                                        __frame1[4] = __frame1[3]()
                                      else
                                        idris["error"]("Impossible else branch")
                                      end
                                      return __frame1[4]
                                    end)()
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Commands.docFull"] = function(__ext0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      __frame1[1]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[1]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[1]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[2] = {}
      __frame1[2]["tag"] = "0"
      __frame1[2]["arg1"] = __frame1[1]
      __frame1[2]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act24 = __arg644(__eta0)
                        return __arg645(__act24)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[2]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[3] = {}
      __frame1[3]["tag"] = "0"
      __frame1[3]["arg1"] = __frame1[2]
      __frame1[3]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act24 = idris["Foreign.isBufferModified"](nil)(__frame1[3])(__ext0)
      __frame1[4] = {}
      __frame1[4]["tag"] = "0"
      __frame1[4]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[4]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[4]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      local __act24 = idris["Prelude.Interfaces.when"](nil)(__frame1[4])(__act24)(function()
        return function(__eta0)
            return idris["Commands.loadCurrent"](__eta0)
          end
      end)(__ext0)
      local __act25 = idris["Foreign.getGlobalClient"](__ext0)
      __frame1[5] = {}
      __frame1[5]["tag"] = "0"
      __frame1[5]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[5]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[5]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[6] = {}
      __frame1[6]["tag"] = "0"
      __frame1[6]["arg1"] = __frame1[5]
      __frame1[6]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act26 = __arg644(__eta0)
                        return __arg645(__act26)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[6]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[7] = {}
      __frame1[7]["tag"] = "0"
      __frame1[7]["arg1"] = __frame1[6]
      __frame1[7]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act26 = idris["Prelude.Interfaces.<$>"](nil)(nil)(nil)(function(__eta0)
        return function(__eta1)
            return function(__eta2)
                return function(__eta3)
                    return function(__eta4)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(__eta2)(__eta3)(__eta4)
                      end
                  end
              end
          end
      end)(function(__eta0)
        return idris["Commands.extractName"](__eta0)
      end)(idris["Foreign.cursorWord"](nil)(__frame1[7]))(__ext0)
      __frame1[8] = {}
      __frame1[8]["tag"] = "1"
      __frame1[9] = {}
      __frame1[9]["tag"] = "1"
      __frame1[9]["arg1"] = __frame1[8]
      __frame1[10] = {}
      __frame1[10]["tag"] = "14"
      __frame1[10]["arg1"] = __act26
      __frame1[10]["arg2"] = __frame1[9]
      local __act27 = idris["Commands.buildCommand"](__frame1[10])(__ext0)
      __frame1[11] = {}
      __frame1[11]["tag"] = "0"
      __frame1[11]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[11]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[11]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[12] = {}
      __frame1[12]["tag"] = "0"
      __frame1[12]["arg1"] = __frame1[11]
      __frame1[12]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act28 = __arg644(__eta0)
                        return __arg645(__act28)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[12]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[13] = {}
      __frame1[13]["tag"] = "0"
      __frame1[13]["arg1"] = __frame1[12]
      __frame1[13]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      return idris["Foreign.write"](nil)(__frame1[13])(__act25)(__act27)(__ext0)
    end)()
end
idris["Commands.case[6621]case block in case block in case block in case block in case block in case block in case block in case block in case block in loadCommands"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return function(__arg9)
                                      return (function()
                                          local __frame1 = {
                                            nil,
                                            nil,
                                            nil,
                                            nil
                                          }
                                          __frame1[1] = __arg9
                                          __frame1[2] = {
                                            nil,
                                            nil
                                          }
                                          __frame1[2][0] = function()
                                            return function(__eta0)
                                                return idris["Commands.docFull"](__eta0)
                                              end
                                          end
                                          __frame1[2][1] = function()
                                            return function(__eta0)
                                                local __frame3 = {
                                                  nil
                                                }
                                                __frame3[1] = {}
                                                __frame3[1]["tag"] = "0"
                                                return __frame3[1]
                                              end
                                          end
                                          __frame1[3] = __frame1[2][__frame1[1]]
                                          if __frame1[3] then
                                            __frame1[4] = __frame1[3]()
                                          else
                                            idris["error"]("Impossible else branch")
                                          end
                                          return __frame1[4]
                                        end)()
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Commands.caseSplit"] = function(__ext0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      __frame1[1]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[1]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[1]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[2] = {}
      __frame1[2]["tag"] = "0"
      __frame1[2]["arg1"] = __frame1[1]
      __frame1[2]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act24 = __arg644(__eta0)
                        return __arg645(__act24)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[2]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[3] = {}
      __frame1[3]["tag"] = "0"
      __frame1[3]["arg1"] = __frame1[2]
      __frame1[3]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act24 = idris["Foreign.isBufferModified"](nil)(__frame1[3])(__ext0)
      __frame1[4] = {}
      __frame1[4]["tag"] = "0"
      __frame1[4]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[4]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[4]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      local __act24 = idris["Prelude.Interfaces.when"](nil)(__frame1[4])(__act24)(function()
        return function(__eta0)
            return idris["Commands.loadCurrent"](__eta0)
          end
      end)(__ext0)
      local __act25 = idris["Foreign.getGlobalClient"](__ext0)
      __frame1[5] = {}
      __frame1[5]["tag"] = "0"
      __frame1[5]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[5]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[5]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[6] = {}
      __frame1[6]["tag"] = "0"
      __frame1[6]["arg1"] = __frame1[5]
      __frame1[6]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act26 = __arg644(__eta0)
                        return __arg645(__act26)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[6]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[7] = {}
      __frame1[7]["tag"] = "0"
      __frame1[7]["arg1"] = __frame1[6]
      __frame1[7]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act26 = idris["Prelude.Interfaces.<$>"](nil)(nil)(nil)(function(__eta0)
        return function(__eta1)
            return function(__eta2)
                return function(__eta3)
                    return function(__eta4)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(__eta2)(__eta3)(__eta4)
                      end
                  end
              end
          end
      end)(function(__eta0)
        return idris["Prelude.Types.cast_Cast__Int_Integer"](__eta0)
      end)(idris["Foreign.cursorLine"](nil)(__frame1[7]))(__ext0)
      __frame1[8] = {}
      __frame1[8]["tag"] = "0"
      __frame1[8]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[8]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[8]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[9] = {}
      __frame1[9]["tag"] = "0"
      __frame1[9]["arg1"] = __frame1[8]
      __frame1[9]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act27 = __arg644(__eta0)
                        return __arg645(__act27)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[9]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[10] = {}
      __frame1[10]["tag"] = "0"
      __frame1[10]["arg1"] = __frame1[9]
      __frame1[10]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act27 = idris["Prelude.Interfaces.<$>"](nil)(nil)(nil)(function(__eta0)
        return function(__eta1)
            return function(__eta2)
                return function(__eta3)
                    return function(__eta4)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(__eta2)(__eta3)(__eta4)
                      end
                  end
              end
          end
      end)(function(__eta0)
        return idris["Prelude.Types.cast_Cast__Int_Integer"](__eta0)
      end)(idris["Foreign.cursorColumn"](nil)(__frame1[10]))(__ext0)
      __frame1[11] = {}
      __frame1[11]["tag"] = "0"
      __frame1[11]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[11]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[11]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[12] = {}
      __frame1[12]["tag"] = "0"
      __frame1[12]["arg1"] = __frame1[11]
      __frame1[12]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act28 = __arg644(__eta0)
                        return __arg645(__act28)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[12]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[13] = {}
      __frame1[13]["tag"] = "0"
      __frame1[13]["arg1"] = __frame1[12]
      __frame1[13]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act28 = idris["Prelude.Interfaces.<$>"](nil)(nil)(nil)(function(__eta0)
        return function(__eta1)
            return function(__eta2)
                return function(__eta3)
                    return function(__eta4)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(__eta2)(__eta3)(__eta4)
                      end
                  end
              end
          end
      end)(function(__eta0)
        return idris["Commands.extractName"](__eta0)
      end)(idris["Foreign.cursorWord"](nil)(__frame1[13]))(__ext0)
      __frame1[14] = {}
      __frame1[14]["tag"] = "4"
      __frame1[14]["arg1"] = __act26
      __frame1[14]["arg2"] = __act27
      __frame1[14]["arg3"] = __act28
      local __act29 = idris["Commands.buildCommand"](__frame1[14])(__ext0)
      __frame1[15] = {}
      __frame1[15]["tag"] = "0"
      __frame1[15]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[15]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[15]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[16] = {}
      __frame1[16]["tag"] = "0"
      __frame1[16]["arg1"] = __frame1[15]
      __frame1[16]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act30 = __arg644(__eta0)
                        return __arg645(__act30)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[16]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[17] = {}
      __frame1[17]["tag"] = "0"
      __frame1[17]["arg1"] = __frame1[16]
      __frame1[17]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      return idris["Foreign.write"](nil)(__frame1[17])(__act25)(__act29)(__ext0)
    end)()
end
idris["Commands.case[6694]case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in loadCommands"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return function(__arg9)
                                      return function(__arg10)
                                          return (function()
                                              local __frame1 = {
                                                nil,
                                                nil,
                                                nil,
                                                nil
                                              }
                                              __frame1[1] = __arg10
                                              __frame1[2] = {
                                                nil,
                                                nil
                                              }
                                              __frame1[2][0] = function()
                                                return function(__eta0)
                                                    return idris["Commands.caseSplit"](__eta0)
                                                  end
                                              end
                                              __frame1[2][1] = function()
                                                return function(__eta0)
                                                    local __frame3 = {
                                                      nil
                                                    }
                                                    __frame3[1] = {}
                                                    __frame3[1]["tag"] = "0"
                                                    return __frame3[1]
                                                  end
                                              end
                                              __frame1[3] = __frame1[2][__frame1[1]]
                                              if __frame1[3] then
                                                __frame1[4] = __frame1[3]()
                                              else
                                                idris["error"]("Impossible else branch")
                                              end
                                              return __frame1[4]
                                            end)()
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Commands.browseNamespace"] = function(__ext0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      __frame1[1]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[1]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[1]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[2] = {}
      __frame1[2]["tag"] = "0"
      __frame1[2]["arg1"] = __frame1[1]
      __frame1[2]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act24 = __arg644(__eta0)
                        return __arg645(__act24)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[2]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[3] = {}
      __frame1[3]["tag"] = "0"
      __frame1[3]["arg1"] = __frame1[2]
      __frame1[3]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act24 = idris["Foreign.isBufferModified"](nil)(__frame1[3])(__ext0)
      __frame1[4] = {}
      __frame1[4]["tag"] = "0"
      __frame1[4]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[4]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[4]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      local __act24 = idris["Prelude.Interfaces.when"](nil)(__frame1[4])(__act24)(function()
        return function(__eta0)
            return idris["Commands.loadCurrent"](__eta0)
          end
      end)(__ext0)
      local __act25 = idris["Foreign.getGlobalClient"](__ext0)
      __frame1[5] = {}
      __frame1[5]["tag"] = "0"
      __frame1[5]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[5]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[5]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[6] = {}
      __frame1[6]["tag"] = "0"
      __frame1[6]["arg1"] = __frame1[5]
      __frame1[6]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act26 = __arg644(__eta0)
                        return __arg645(__act26)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[6]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[7] = {}
      __frame1[7]["tag"] = "0"
      __frame1[7]["arg1"] = __frame1[6]
      __frame1[7]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act26 = idris["Prelude.Interfaces.<$>"](nil)(nil)(nil)(function(__eta0)
        return function(__eta1)
            return function(__eta2)
                return function(__eta3)
                    return function(__eta4)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(__eta2)(__eta3)(__eta4)
                      end
                  end
              end
          end
      end)(function(__eta0)
        return idris["Commands.extractName"](__eta0)
      end)(idris["Foreign.cursorWord'"](nil)(__frame1[7]))(__ext0)
      __frame1[8] = {}
      __frame1[8]["tag"] = "20"
      __frame1[8]["arg1"] = __act26
      local __act27 = idris["Commands.buildCommand"](__frame1[8])(__ext0)
      __frame1[9] = {}
      __frame1[9]["tag"] = "0"
      __frame1[9]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[9]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[9]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[10] = {}
      __frame1[10]["tag"] = "0"
      __frame1[10]["arg1"] = __frame1[9]
      __frame1[10]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act28 = __arg644(__eta0)
                        return __arg645(__act28)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[10]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[11] = {}
      __frame1[11]["tag"] = "0"
      __frame1[11]["arg1"] = __frame1[10]
      __frame1[11]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      return idris["Foreign.write"](nil)(__frame1[11])(__act25)(__act27)(__ext0)
    end)()
end
idris["Commands.case[7754]case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in loadCommands"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return function(__arg9)
                                      return function(__arg10)
                                          return function(__arg11)
                                              return function(__arg12)
                                                  return function(__arg13)
                                                      return function(__arg14)
                                                          return function(__arg15)
                                                              return function(__arg16)
                                                                  return function(__arg17)
                                                                      return function(__arg18)
                                                                          return function(__arg19)
                                                                              return function(__arg20)
                                                                                  return (function()
                                                                                      local __frame1 = {
                                                                                        nil,
                                                                                        nil,
                                                                                        nil,
                                                                                        nil
                                                                                      }
                                                                                      __frame1[1] = __arg20
                                                                                      __frame1[2] = {
                                                                                        nil,
                                                                                        nil
                                                                                      }
                                                                                      __frame1[2][0] = function()
                                                                                        return function(__eta0)
                                                                                            return idris["Commands.browseNamespace"](__eta0)
                                                                                          end
                                                                                      end
                                                                                      __frame1[2][1] = function()
                                                                                        return function(__eta0)
                                                                                            local __frame3 = {
                                                                                              nil
                                                                                            }
                                                                                            __frame3[1] = {}
                                                                                            __frame3[1]["tag"] = "0"
                                                                                            return __frame3[1]
                                                                                          end
                                                                                      end
                                                                                      __frame1[3] = __frame1[2][__frame1[1]]
                                                                                      if __frame1[3] then
                                                                                        __frame1[4] = __frame1[3]()
                                                                                      else
                                                                                        idris["error"]("Impossible else branch")
                                                                                      end
                                                                                      return __frame1[4]
                                                                                    end)()
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Commands.addClause"] = function(__ext0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      __frame1[1]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[1]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[1]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[2] = {}
      __frame1[2]["tag"] = "0"
      __frame1[2]["arg1"] = __frame1[1]
      __frame1[2]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act24 = __arg644(__eta0)
                        return __arg645(__act24)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[2]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[3] = {}
      __frame1[3]["tag"] = "0"
      __frame1[3]["arg1"] = __frame1[2]
      __frame1[3]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act24 = idris["Foreign.isBufferModified"](nil)(__frame1[3])(__ext0)
      __frame1[4] = {}
      __frame1[4]["tag"] = "0"
      __frame1[4]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[4]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[4]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      local __act24 = idris["Prelude.Interfaces.when"](nil)(__frame1[4])(__act24)(function()
        return function(__eta0)
            return idris["Commands.loadCurrent"](__eta0)
          end
      end)(__ext0)
      local __act25 = idris["Foreign.getGlobalClient"](__ext0)
      __frame1[5] = {}
      __frame1[5]["tag"] = "0"
      __frame1[5]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[5]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[5]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[6] = {}
      __frame1[6]["tag"] = "0"
      __frame1[6]["arg1"] = __frame1[5]
      __frame1[6]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act26 = __arg644(__eta0)
                        return __arg645(__act26)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[6]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[7] = {}
      __frame1[7]["tag"] = "0"
      __frame1[7]["arg1"] = __frame1[6]
      __frame1[7]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act26 = idris["Prelude.Interfaces.<$>"](nil)(nil)(nil)(function(__eta0)
        return function(__eta1)
            return function(__eta2)
                return function(__eta3)
                    return function(__eta4)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(__eta2)(__eta3)(__eta4)
                      end
                  end
              end
          end
      end)(function(__eta0)
        return idris["Prelude.Types.cast_Cast__Int_Integer"](__eta0)
      end)(idris["Foreign.cursorLine"](nil)(__frame1[7]))(__ext0)
      __frame1[8] = {}
      __frame1[8]["tag"] = "0"
      __frame1[8]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[8]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[8]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[9] = {}
      __frame1[9]["tag"] = "0"
      __frame1[9]["arg1"] = __frame1[8]
      __frame1[9]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act27 = __arg644(__eta0)
                        return __arg645(__act27)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[9]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[10] = {}
      __frame1[10]["tag"] = "0"
      __frame1[10]["arg1"] = __frame1[9]
      __frame1[10]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act27 = idris["Prelude.Interfaces.<$>"](nil)(nil)(nil)(function(__eta0)
        return function(__eta1)
            return function(__eta2)
                return function(__eta3)
                    return function(__eta4)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(__eta2)(__eta3)(__eta4)
                      end
                  end
              end
          end
      end)(function(__eta0)
        return idris["Commands.extractName"](__eta0)
      end)(idris["Foreign.cursorWord"](nil)(__frame1[10]))(__ext0)
      __frame1[11] = {}
      __frame1[11]["tag"] = "5"
      __frame1[11]["arg1"] = __act26
      __frame1[11]["arg2"] = __act27
      local __act28 = idris["Commands.buildCommand"](__frame1[11])(__ext0)
      __frame1[12] = {}
      __frame1[12]["tag"] = "0"
      __frame1[12]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[12]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[12]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[13] = {}
      __frame1[13]["tag"] = "0"
      __frame1[13]["arg1"] = __frame1[12]
      __frame1[13]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act29 = __arg644(__eta0)
                        return __arg645(__act29)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[13]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[14] = {}
      __frame1[14]["tag"] = "0"
      __frame1[14]["arg1"] = __frame1[13]
      __frame1[14]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      return idris["Foreign.write"](nil)(__frame1[14])(__act25)(__act28)(__ext0)
    end)()
end
idris["Commands.case[6773]case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in loadCommands"] = function(__arg0)
  return function(__arg1)
      return function(__arg2)
          return function(__arg3)
              return function(__arg4)
                  return function(__arg5)
                      return function(__arg6)
                          return function(__arg7)
                              return function(__arg8)
                                  return function(__arg9)
                                      return function(__arg10)
                                          return function(__arg11)
                                              return (function()
                                                  local __frame1 = {
                                                    nil,
                                                    nil,
                                                    nil,
                                                    nil
                                                  }
                                                  __frame1[1] = __arg11
                                                  __frame1[2] = {
                                                    nil,
                                                    nil
                                                  }
                                                  __frame1[2][0] = function()
                                                    return function(__eta0)
                                                        return idris["Commands.addClause"](__eta0)
                                                      end
                                                  end
                                                  __frame1[2][1] = function()
                                                    return function(__eta0)
                                                        local __frame3 = {
                                                          nil
                                                        }
                                                        __frame3[1] = {}
                                                        __frame3[1]["tag"] = "0"
                                                        return __frame3[1]
                                                      end
                                                  end
                                                  __frame1[3] = __frame1[2][__frame1[1]]
                                                  if __frame1[3] then
                                                    __frame1[4] = __frame1[3]()
                                                  else
                                                    idris["error"]("Impossible else branch")
                                                  end
                                                  return __frame1[4]
                                                end)()
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
idris["Commands.loadCommands"] = function(__ext0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil
      }
      local __act24 = idris["Commands.case[6234]loadCommands"](1)(__ext0)
      __frame1[1] = __act24
      __frame1[2] = {
        nil
      }
      __frame1[2]["0"] = function()
        local __frame2 = {
          nil,
          nil,
          nil,
          nil,
          nil,
          nil
        }
        __frame2[1] = {}
        __frame2[1]["tag"] = "0"
        local ___0 = __frame2[1]
        local __act25 = idris["Commands.case[6253]case block in loadCommands"](___0)(1)(__ext0)
        __frame2[2] = {}
        __frame2[2]["tag"] = "0"
        local ___0 = __frame2[2]
        __frame2[3] = __act25
        __frame2[4] = {
          nil
        }
        __frame2[4]["0"] = function()
          local __frame3 = {
            nil,
            nil,
            nil,
            nil,
            nil,
            nil
          }
          __frame3[1] = {}
          __frame3[1]["tag"] = "0"
          local ___1 = __frame3[1]
          local __act26 = idris["Commands.case[6278]case block in case block in loadCommands"](___0)(___1)(1)(__ext0)
          __frame3[2] = {}
          __frame3[2]["tag"] = "0"
          local ___1 = __frame3[2]
          __frame3[3] = __act26
          __frame3[4] = {
            nil
          }
          __frame3[4]["0"] = function()
            local __frame4 = {
              nil,
              nil,
              nil,
              nil,
              nil,
              nil
            }
            __frame4[1] = {}
            __frame4[1]["tag"] = "0"
            local ___2 = __frame4[1]
            local __act27 = idris["Commands.case[6309]case block in case block in case block in loadCommands"](___0)(___1)(___2)(1)(__ext0)
            __frame4[2] = {}
            __frame4[2]["tag"] = "0"
            local ___2 = __frame4[2]
            __frame4[3] = __act27
            __frame4[4] = {
              nil
            }
            __frame4[4]["0"] = function()
              local __frame5 = {
                nil,
                nil,
                nil,
                nil,
                nil,
                nil
              }
              __frame5[1] = {}
              __frame5[1]["tag"] = "0"
              local ___3 = __frame5[1]
              local __act28 = idris["Commands.case[6346]case block in case block in case block in case block in loadCommands"](___0)(___1)(___2)(___3)(1)(__ext0)
              __frame5[2] = {}
              __frame5[2]["tag"] = "0"
              local ___3 = __frame5[2]
              __frame5[3] = __act28
              __frame5[4] = {
                nil
              }
              __frame5[4]["0"] = function()
                local __frame6 = {
                  nil,
                  nil,
                  nil,
                  nil,
                  nil,
                  nil
                }
                __frame6[1] = {}
                __frame6[1]["tag"] = "0"
                local ___4 = __frame6[1]
                local __act29 = idris["Commands.case[6389]case block in case block in case block in case block in case block in loadCommands"](___0)(___1)(___2)(___3)(___4)(1)(__ext0)
                __frame6[2] = {}
                __frame6[2]["tag"] = "0"
                local ___4 = __frame6[2]
                __frame6[3] = __act29
                __frame6[4] = {
                  nil
                }
                __frame6[4]["0"] = function()
                  local __frame7 = {
                    nil,
                    nil,
                    nil,
                    nil,
                    nil,
                    nil
                  }
                  __frame7[1] = {}
                  __frame7[1]["tag"] = "0"
                  local ___5 = __frame7[1]
                  local __act30 = idris["Commands.case[6438]case block in case block in case block in case block in case block in case block in loadCommands"](___0)(___1)(___2)(___3)(___4)(___5)(1)(__ext0)
                  __frame7[2] = {}
                  __frame7[2]["tag"] = "0"
                  local ___5 = __frame7[2]
                  __frame7[3] = __act30
                  __frame7[4] = {
                    nil
                  }
                  __frame7[4]["0"] = function()
                    local __frame8 = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    __frame8[1] = {}
                    __frame8[1]["tag"] = "0"
                    local ___6 = __frame8[1]
                    local __act31 = idris["Commands.case[6493]case block in case block in case block in case block in case block in case block in case block in loadCommands"](___0)(___1)(___2)(___3)(___4)(___5)(___6)(1)(__ext0)
                    __frame8[2] = {}
                    __frame8[2]["tag"] = "0"
                    local ___6 = __frame8[2]
                    __frame8[3] = __act31
                    __frame8[4] = {
                      nil
                    }
                    __frame8[4]["0"] = function()
                      local __frame9 = {
                        nil,
                        nil,
                        nil,
                        nil,
                        nil,
                        nil
                      }
                      __frame9[1] = {}
                      __frame9[1]["tag"] = "0"
                      local ___7 = __frame9[1]
                      local __act32 = idris["Commands.case[6554]case block in case block in case block in case block in case block in case block in case block in case block in loadCommands"](___0)(___1)(___2)(___3)(___4)(___5)(___6)(___7)(1)(__ext0)
                      __frame9[2] = {}
                      __frame9[2]["tag"] = "0"
                      local ___7 = __frame9[2]
                      __frame9[3] = __act32
                      __frame9[4] = {
                        nil
                      }
                      __frame9[4]["0"] = function()
                        local __frame10 = {
                          nil,
                          nil,
                          nil,
                          nil,
                          nil,
                          nil
                        }
                        __frame10[1] = {}
                        __frame10[1]["tag"] = "0"
                        local ___8 = __frame10[1]
                        local __act33 = idris["Commands.case[6621]case block in case block in case block in case block in case block in case block in case block in case block in case block in loadCommands"](___0)(___1)(___2)(___3)(___4)(___5)(___6)(___7)(___8)(1)(__ext0)
                        __frame10[2] = {}
                        __frame10[2]["tag"] = "0"
                        local ___8 = __frame10[2]
                        __frame10[3] = __act33
                        __frame10[4] = {
                          nil
                        }
                        __frame10[4]["0"] = function()
                          local __frame11 = {
                            nil,
                            nil,
                            nil,
                            nil,
                            nil,
                            nil
                          }
                          __frame11[1] = {}
                          __frame11[1]["tag"] = "0"
                          local ___9 = __frame11[1]
                          local __act34 = idris["Commands.case[6694]case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in loadCommands"](___0)(___1)(___2)(___3)(___4)(___5)(___6)(___7)(___8)(___9)(1)(__ext0)
                          __frame11[2] = {}
                          __frame11[2]["tag"] = "0"
                          local ___9 = __frame11[2]
                          __frame11[3] = __act34
                          __frame11[4] = {
                            nil
                          }
                          __frame11[4]["0"] = function()
                            local __frame12 = {
                              nil,
                              nil,
                              nil,
                              nil,
                              nil,
                              nil
                            }
                            __frame12[1] = {}
                            __frame12[1]["tag"] = "0"
                            local ___10 = __frame12[1]
                            local __act35 = idris["Commands.case[6773]case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in loadCommands"](___0)(___1)(___2)(___3)(___4)(___5)(___6)(___7)(___8)(___9)(___10)(1)(__ext0)
                            __frame12[2] = {}
                            __frame12[2]["tag"] = "0"
                            local ___10 = __frame12[2]
                            __frame12[3] = __act35
                            __frame12[4] = {
                              nil
                            }
                            __frame12[4]["0"] = function()
                              local __frame13 = {
                                nil,
                                nil,
                                nil,
                                nil,
                                nil,
                                nil
                              }
                              __frame13[1] = {}
                              __frame13[1]["tag"] = "0"
                              local ___11 = __frame13[1]
                              local __act36 = idris["Commands.case[6858]case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in loadCommands"](___0)(___1)(___2)(___3)(___4)(___5)(___6)(___7)(___8)(___9)(___10)(___11)(1)(__ext0)
                              __frame13[2] = {}
                              __frame13[2]["tag"] = "0"
                              local ___11 = __frame13[2]
                              __frame13[3] = __act36
                              __frame13[4] = {
                                nil
                              }
                              __frame13[4]["0"] = function()
                                local __frame14 = {
                                  nil,
                                  nil,
                                  nil,
                                  nil,
                                  nil,
                                  nil
                                }
                                __frame14[1] = {}
                                __frame14[1]["tag"] = "0"
                                local ___12 = __frame14[1]
                                local __act37 = idris["Commands.case[6949]case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in loadCommands"](___0)(___1)(___2)(___3)(___4)(___5)(___6)(___7)(___8)(___9)(___10)(___11)(___12)(1)(__ext0)
                                __frame14[2] = {}
                                __frame14[2]["tag"] = "0"
                                local ___12 = __frame14[2]
                                __frame14[3] = __act37
                                __frame14[4] = {
                                  nil
                                }
                                __frame14[4]["0"] = function()
                                  local __frame15 = {
                                    nil,
                                    nil,
                                    nil,
                                    nil,
                                    nil,
                                    nil
                                  }
                                  __frame15[1] = {}
                                  __frame15[1]["tag"] = "0"
                                  local ___13 = __frame15[1]
                                  local __act38 = idris["Commands.case[7046]case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in loadCommands"](___0)(___1)(___2)(___3)(___4)(___5)(___6)(___7)(___8)(___9)(___10)(___11)(___12)(___13)(1)(__ext0)
                                  __frame15[2] = {}
                                  __frame15[2]["tag"] = "0"
                                  local ___13 = __frame15[2]
                                  __frame15[3] = __act38
                                  __frame15[4] = {
                                    nil
                                  }
                                  __frame15[4]["0"] = function()
                                    local __frame16 = {
                                      nil,
                                      nil,
                                      nil,
                                      nil,
                                      nil,
                                      nil
                                    }
                                    __frame16[1] = {}
                                    __frame16[1]["tag"] = "0"
                                    local ___14 = __frame16[1]
                                    local __act39 = idris["Commands.case[7149]case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in loadCommands"](___0)(___1)(___2)(___3)(___4)(___5)(___6)(___7)(___8)(___9)(___10)(___11)(___12)(___13)(___14)(1)(__ext0)
                                    __frame16[2] = {}
                                    __frame16[2]["tag"] = "0"
                                    local ___14 = __frame16[2]
                                    __frame16[3] = __act39
                                    __frame16[4] = {
                                      nil
                                    }
                                    __frame16[4]["0"] = function()
                                      local __frame17 = {
                                        nil,
                                        nil,
                                        nil,
                                        nil,
                                        nil,
                                        nil
                                      }
                                      __frame17[1] = {}
                                      __frame17[1]["tag"] = "0"
                                      local ___15 = __frame17[1]
                                      local __act40 = idris["Commands.case[7258]case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in loadCommands"](___0)(___1)(___2)(___3)(___4)(___5)(___6)(___7)(___8)(___9)(___10)(___11)(___12)(___13)(___14)(___15)(1)(__ext0)
                                      __frame17[2] = {}
                                      __frame17[2]["tag"] = "0"
                                      local ___15 = __frame17[2]
                                      __frame17[3] = __act40
                                      __frame17[4] = {
                                        nil
                                      }
                                      __frame17[4]["0"] = function()
                                        local __frame18 = {
                                          nil,
                                          nil,
                                          nil,
                                          nil,
                                          nil,
                                          nil
                                        }
                                        __frame18[1] = {}
                                        __frame18[1]["tag"] = "0"
                                        local ___16 = __frame18[1]
                                        local __act41 = idris["Commands.case[7373]case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in loadCommands"](___0)(___1)(___2)(___3)(___4)(___5)(___6)(___7)(___8)(___9)(___10)(___11)(___12)(___13)(___14)(___15)(___16)(1)(__ext0)
                                        __frame18[2] = {}
                                        __frame18[2]["tag"] = "0"
                                        local ___16 = __frame18[2]
                                        __frame18[3] = __act41
                                        __frame18[4] = {
                                          nil
                                        }
                                        __frame18[4]["0"] = function()
                                          local __frame19 = {
                                            nil,
                                            nil,
                                            nil,
                                            nil,
                                            nil,
                                            nil
                                          }
                                          __frame19[1] = {}
                                          __frame19[1]["tag"] = "0"
                                          local ___17 = __frame19[1]
                                          local __act42 = idris["Commands.case[7494]case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in loadCommands"](___0)(___1)(___2)(___3)(___4)(___5)(___6)(___7)(___8)(___9)(___10)(___11)(___12)(___13)(___14)(___15)(___16)(___17)(1)(__ext0)
                                          __frame19[2] = {}
                                          __frame19[2]["tag"] = "0"
                                          local ___17 = __frame19[2]
                                          __frame19[3] = __act42
                                          __frame19[4] = {
                                            nil
                                          }
                                          __frame19[4]["0"] = function()
                                            local __frame20 = {
                                              nil,
                                              nil,
                                              nil,
                                              nil,
                                              nil,
                                              nil
                                            }
                                            __frame20[1] = {}
                                            __frame20[1]["tag"] = "0"
                                            local ___18 = __frame20[1]
                                            local __act43 = idris["Commands.case[7621]case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in loadCommands"](___0)(___1)(___2)(___3)(___4)(___5)(___6)(___7)(___8)(___9)(___10)(___11)(___12)(___13)(___14)(___15)(___16)(___17)(___18)(1)(__ext0)
                                            __frame20[2] = {}
                                            __frame20[2]["tag"] = "0"
                                            local ___18 = __frame20[2]
                                            __frame20[3] = __act43
                                            __frame20[4] = {
                                              nil
                                            }
                                            __frame20[4]["0"] = function()
                                              local __frame21 = {
                                                nil,
                                                nil,
                                                nil,
                                                nil,
                                                nil,
                                                nil
                                              }
                                              __frame21[1] = {}
                                              __frame21[1]["tag"] = "0"
                                              local ___19 = __frame21[1]
                                              local __act44 = idris["Commands.case[7754]case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in loadCommands"](___0)(___1)(___2)(___3)(___4)(___5)(___6)(___7)(___8)(___9)(___10)(___11)(___12)(___13)(___14)(___15)(___16)(___17)(___18)(___19)(1)(__ext0)
                                              __frame21[2] = {}
                                              __frame21[2]["tag"] = "0"
                                              local ___19 = __frame21[2]
                                              __frame21[3] = __act44
                                              __frame21[4] = {
                                                nil
                                              }
                                              __frame21[4]["0"] = function()
                                                local __frame22 = {
                                                  nil,
                                                  nil,
                                                  nil,
                                                  nil,
                                                  nil
                                                }
                                                __frame22[1] = {}
                                                __frame22[1]["tag"] = "0"
                                                local ___20 = __frame22[1]
                                                local __act45 = idris["Commands.case[7893]case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in case block in loadCommands"](___0)(___1)(___2)(___3)(___4)(___5)(___6)(___7)(___8)(___9)(___10)(___11)(___12)(___13)(___14)(___15)(___16)(___17)(___18)(___19)(___20)(1)(__ext0)
                                                __frame22[2] = __act45
                                                __frame22[3] = {
                                                  nil
                                                }
                                                __frame22[3]["0"] = function()
                                                  local __frame23 = {
                                                    nil
                                                  }
                                                  __frame23[1] = {}
                                                  __frame23[1]["tag"] = "0"
                                                  return __frame23[1]
                                                end
                                                __frame22[4] = __frame22[3][__frame22[2]["tag"]]
                                                if __frame22[4] then
                                                  __frame22[5] = __frame22[4]()
                                                else
                                                  idris["error"]("Impossible else branch")
                                                end
                                                return __frame22[5]
                                              end
                                              __frame21[5] = __frame21[4][__frame21[3]["tag"]]
                                              if __frame21[5] then
                                                __frame21[6] = __frame21[5]()
                                              else
                                                idris["error"]("Impossible else branch")
                                              end
                                              return __frame21[6]
                                            end
                                            __frame20[5] = __frame20[4][__frame20[3]["tag"]]
                                            if __frame20[5] then
                                              __frame20[6] = __frame20[5]()
                                            else
                                              idris["error"]("Impossible else branch")
                                            end
                                            return __frame20[6]
                                          end
                                          __frame19[5] = __frame19[4][__frame19[3]["tag"]]
                                          if __frame19[5] then
                                            __frame19[6] = __frame19[5]()
                                          else
                                            idris["error"]("Impossible else branch")
                                          end
                                          return __frame19[6]
                                        end
                                        __frame18[5] = __frame18[4][__frame18[3]["tag"]]
                                        if __frame18[5] then
                                          __frame18[6] = __frame18[5]()
                                        else
                                          idris["error"]("Impossible else branch")
                                        end
                                        return __frame18[6]
                                      end
                                      __frame17[5] = __frame17[4][__frame17[3]["tag"]]
                                      if __frame17[5] then
                                        __frame17[6] = __frame17[5]()
                                      else
                                        idris["error"]("Impossible else branch")
                                      end
                                      return __frame17[6]
                                    end
                                    __frame16[5] = __frame16[4][__frame16[3]["tag"]]
                                    if __frame16[5] then
                                      __frame16[6] = __frame16[5]()
                                    else
                                      idris["error"]("Impossible else branch")
                                    end
                                    return __frame16[6]
                                  end
                                  __frame15[5] = __frame15[4][__frame15[3]["tag"]]
                                  if __frame15[5] then
                                    __frame15[6] = __frame15[5]()
                                  else
                                    idris["error"]("Impossible else branch")
                                  end
                                  return __frame15[6]
                                end
                                __frame14[5] = __frame14[4][__frame14[3]["tag"]]
                                if __frame14[5] then
                                  __frame14[6] = __frame14[5]()
                                else
                                  idris["error"]("Impossible else branch")
                                end
                                return __frame14[6]
                              end
                              __frame13[5] = __frame13[4][__frame13[3]["tag"]]
                              if __frame13[5] then
                                __frame13[6] = __frame13[5]()
                              else
                                idris["error"]("Impossible else branch")
                              end
                              return __frame13[6]
                            end
                            __frame12[5] = __frame12[4][__frame12[3]["tag"]]
                            if __frame12[5] then
                              __frame12[6] = __frame12[5]()
                            else
                              idris["error"]("Impossible else branch")
                            end
                            return __frame12[6]
                          end
                          __frame11[5] = __frame11[4][__frame11[3]["tag"]]
                          if __frame11[5] then
                            __frame11[6] = __frame11[5]()
                          else
                            idris["error"]("Impossible else branch")
                          end
                          return __frame11[6]
                        end
                        __frame10[5] = __frame10[4][__frame10[3]["tag"]]
                        if __frame10[5] then
                          __frame10[6] = __frame10[5]()
                        else
                          idris["error"]("Impossible else branch")
                        end
                        return __frame10[6]
                      end
                      __frame9[5] = __frame9[4][__frame9[3]["tag"]]
                      if __frame9[5] then
                        __frame9[6] = __frame9[5]()
                      else
                        idris["error"]("Impossible else branch")
                      end
                      return __frame9[6]
                    end
                    __frame8[5] = __frame8[4][__frame8[3]["tag"]]
                    if __frame8[5] then
                      __frame8[6] = __frame8[5]()
                    else
                      idris["error"]("Impossible else branch")
                    end
                    return __frame8[6]
                  end
                  __frame7[5] = __frame7[4][__frame7[3]["tag"]]
                  if __frame7[5] then
                    __frame7[6] = __frame7[5]()
                  else
                    idris["error"]("Impossible else branch")
                  end
                  return __frame7[6]
                end
                __frame6[5] = __frame6[4][__frame6[3]["tag"]]
                if __frame6[5] then
                  __frame6[6] = __frame6[5]()
                else
                  idris["error"]("Impossible else branch")
                end
                return __frame6[6]
              end
              __frame5[5] = __frame5[4][__frame5[3]["tag"]]
              if __frame5[5] then
                __frame5[6] = __frame5[5]()
              else
                idris["error"]("Impossible else branch")
              end
              return __frame5[6]
            end
            __frame4[5] = __frame4[4][__frame4[3]["tag"]]
            if __frame4[5] then
              __frame4[6] = __frame4[5]()
            else
              idris["error"]("Impossible else branch")
            end
            return __frame4[6]
          end
          __frame3[5] = __frame3[4][__frame3[3]["tag"]]
          if __frame3[5] then
            __frame3[6] = __frame3[5]()
          else
            idris["error"]("Impossible else branch")
          end
          return __frame3[6]
        end
        __frame2[5] = __frame2[4][__frame2[3]["tag"]]
        if __frame2[5] then
          __frame2[6] = __frame2[5]()
        else
          idris["error"]("Impossible else branch")
        end
        return __frame2[6]
      end
      __frame1[3] = __frame1[2][__frame1[1]["tag"]]
      if __frame1[3] then
        __frame1[4] = __frame1[3]()
      else
        idris["error"]("Impossible else branch")
      end
      return __frame1[4]
    end)()
end
idris["Plugin.main"] = function(__ext0)
  return (function()
      local __frame1 = {
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil,
        nil
      }
      local __act24 = idris["Commands.loadCommands"](__ext0)
      __frame1[1] = {}
      __frame1[1]["tag"] = "0"
      __frame1[1]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[1]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[1]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[2] = {}
      __frame1[2]["tag"] = "0"
      __frame1[2]["arg1"] = __frame1[1]
      __frame1[2]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act25 = __arg644(__eta0)
                        return __arg645(__act25)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[2]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[3] = {}
      __frame1[3]["tag"] = "0"
      __frame1[3]["arg1"] = __frame1[2]
      __frame1[3]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      __frame1[4] = {}
      __frame1[4]["tag"] = "idris[\"Plugin.Server\"]"
      __frame1[5] = {}
      __frame1[5]["tag"] = "0"
      local __act25 = idris["Data.Ref.newRef"](nil)(nil)(nil)(__frame1[3])(__frame1[4])(__frame1[5])(__ext0)
      __frame1[6] = {}
      __frame1[6]["tag"] = "0"
      __frame1[6]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[6]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[6]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[7] = {}
      __frame1[7]["tag"] = "0"
      __frame1[7]["arg1"] = __frame1[6]
      __frame1[7]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act26 = __arg644(__eta0)
                        return __arg645(__act26)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[7]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[8] = {}
      __frame1[8]["tag"] = "0"
      __frame1[8]["arg1"] = __frame1[7]
      __frame1[8]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      __frame1[9] = {}
      __frame1[9]["tag"] = "idris[\"Plugin.Client\"]"
      __frame1[10] = {}
      __frame1[10]["tag"] = "0"
      local __act26 = idris["Data.Ref.newRef"](nil)(nil)(nil)(__frame1[8])(__frame1[9])(__frame1[10])(__ext0)
      local __act27 = idris["Plugin.getSourceDirectory"](__ext0)
      __frame1[11] = {}
      __frame1[11]["tag"] = "0"
      __frame1[11]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[11]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[11]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      __frame1[12] = {}
      __frame1[12]["tag"] = "0"
      __frame1[12]["arg1"] = __frame1[11]
      __frame1[12]["arg2"] = function(b)
        return function(a)
            return function(__arg644)
                return function(__arg645)
                    return function(__eta0)
                        local __act28 = __arg644(__eta0)
                        return __arg645(__act28)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[12]["arg3"] = function(a)
        return function(__arg647)
            return function(__eta0)
                local __act51 = __arg647(__eta0)
                return __act51(__eta0)
              end
          end
      end
      __frame1[13] = {}
      __frame1[13]["tag"] = "0"
      __frame1[13]["arg1"] = __frame1[12]
      __frame1[13]["arg2"] = function(a)
        return function(__arg6794)
            return __arg6794
          end
      end
      local __act28 = idris["Foreign.getGlobalBoolVar"](nil)(__frame1[13])("idris2_autostart")(function()
        return 0
      end)(__ext0)
      local params = __act27
      __frame1[14] = {}
      __frame1[14]["tag"] = "0"
      __frame1[14]["arg1"] = function(b)
        return function(a)
            return function(func)
                return function(__arg149)
                    return function(__eta0)
                        return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta0)
                      end
                  end
              end
          end
      end
      __frame1[14]["arg2"] = function(a)
        return function(__arg482)
            return function(__eta0)
                return __arg482
              end
          end
      end
      __frame1[14]["arg3"] = function(b)
        return function(a)
            return function(__arg483)
                return function(__arg485)
                    return function(__eta0)
                        local __act17 = __arg483(__eta0)
                        local __act16 = __arg485(__eta0)
                        return __act17(__act16)
                      end
                  end
              end
          end
      end
      return idris["Prelude.Interfaces.when"](nil)(__frame1[14])(__act28)(function()
          return function(__eta0)
              local __frame3 = {
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil,
                nil
              }
              __frame3[1] = {}
              __frame3[1]["tag"] = "0"
              __frame3[1]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[1]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[1]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[2] = {}
              __frame3[2]["tag"] = "0"
              __frame3[2]["arg1"] = __frame3[1]
              __frame3[2]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act29 = __arg644(__eta1)
                                return __arg645(__act29)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[2]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[3] = {}
              __frame3[3]["tag"] = "0"
              __frame3[3]["arg1"] = __frame3[2]
              __frame3[3]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act29 = idris["Foreign.nvimCommand"](nil)(__frame3[3])("set maxfuncdepth=10000")(__eta0)
              __frame3[4] = {}
              __frame3[4]["tag"] = "0"
              __frame3[4]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[4]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[4]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[5] = {}
              __frame3[5]["tag"] = "0"
              __frame3[5]["arg1"] = __frame3[4]
              __frame3[5]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act30 = __arg644(__eta1)
                                return __arg645(__act30)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[5]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[6] = {}
              __frame3[6]["tag"] = "0"
              __frame3[6]["arg1"] = __frame3[5]
              __frame3[6]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act30 = idris["Foreign.nvimCommand"](nil)(__frame3[6])("echom 'starting idris2 ide mode plugin'")(__eta0)
              __frame3[7] = {}
              __frame3[7]["tag"] = "0"
              __frame3[7]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[7]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[7]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[8] = {}
              __frame3[8]["tag"] = "0"
              __frame3[8]["arg1"] = __frame3[7]
              __frame3[8]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act31 = __arg644(__eta1)
                                return __arg645(__act31)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[8]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[9] = {}
              __frame3[9]["tag"] = "0"
              __frame3[9]["arg1"] = __frame3[8]
              __frame3[9]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act31 = idris["Foreign.getGlobalBoolVar"](nil)(__frame3[9])("idris2_external_server")(function()
                return 1
              end)(__eta0)
              __frame3[10] = __act31
              __frame3[11] = {
                nil,
                nil
              }
              __frame3[11][0] = function()
                local __frame4 = {
                  nil,
                  nil,
                  nil,
                  nil,
                  nil,
                  nil,
                  nil,
                  nil,
                  nil
                }
                __frame4[1] = {}
                __frame4[1]["tag"] = "0"
                __frame4[1]["arg1"] = function(b)
                  return function(a)
                      return function(func)
                          return function(__arg149)
                              return function(__eta1)
                                  return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                end
                            end
                        end
                    end
                end
                __frame4[1]["arg2"] = function(a)
                  return function(__arg482)
                      return function(__eta1)
                          return __arg482
                        end
                    end
                end
                __frame4[1]["arg3"] = function(b)
                  return function(a)
                      return function(__arg483)
                          return function(__arg485)
                              return function(__eta1)
                                  local __act17 = __arg483(__eta1)
                                  local __act16 = __arg485(__eta1)
                                  return __act17(__act16)
                                end
                            end
                        end
                    end
                end
                __frame4[2] = {}
                __frame4[2]["tag"] = "0"
                __frame4[2]["arg1"] = __frame4[1]
                __frame4[2]["arg2"] = function(b)
                  return function(a)
                      return function(__arg644)
                          return function(__arg645)
                              return function(__eta1)
                                  local __act32 = __arg644(__eta1)
                                  return __arg645(__act32)(__eta1)
                                end
                            end
                        end
                    end
                end
                __frame4[2]["arg3"] = function(a)
                  return function(__arg647)
                      return function(__eta1)
                          local __act51 = __arg647(__eta1)
                          return __act51(__eta1)
                        end
                    end
                end
                __frame4[3] = {}
                __frame4[3]["tag"] = "0"
                __frame4[3]["arg1"] = __frame4[2]
                __frame4[3]["arg2"] = function(a)
                  return function(__arg6794)
                      return __arg6794
                    end
                end
                local __act32 = idris["Foreign.nvimCommand"](nil)(__frame4[3])("echom 'starting with external server'")(__eta0)
                __frame4[4] = {}
                __frame4[4]["tag"] = "0"
                __frame4[4]["arg1"] = function(b)
                  return function(a)
                      return function(func)
                          return function(__arg149)
                              return function(__eta1)
                                  return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                end
                            end
                        end
                    end
                end
                __frame4[4]["arg2"] = function(a)
                  return function(__arg482)
                      return function(__eta1)
                          return __arg482
                        end
                    end
                end
                __frame4[4]["arg3"] = function(b)
                  return function(a)
                      return function(__arg483)
                          return function(__arg485)
                              return function(__eta1)
                                  local __act17 = __arg483(__eta1)
                                  local __act16 = __arg485(__eta1)
                                  return __act17(__act16)
                                end
                            end
                        end
                    end
                end
                __frame4[5] = {}
                __frame4[5]["tag"] = "0"
                __frame4[5]["arg1"] = __frame4[4]
                __frame4[5]["arg2"] = function(b)
                  return function(a)
                      return function(__arg644)
                          return function(__arg645)
                              return function(__eta1)
                                  local __act33 = __arg644(__eta1)
                                  return __arg645(__act33)(__eta1)
                                end
                            end
                        end
                    end
                end
                __frame4[5]["arg3"] = function(a)
                  return function(__arg647)
                      return function(__eta1)
                          local __act51 = __arg647(__eta1)
                          return __act51(__eta1)
                        end
                    end
                end
                __frame4[6] = {}
                __frame4[6]["tag"] = "0"
                __frame4[6]["arg1"] = __frame4[5]
                __frame4[6]["arg2"] = function(a)
                  return function(__arg6794)
                      return __arg6794
                    end
                end
                local __act33 = idris["Foreign.getGlobalStringVar"](nil)(__frame4[6])("idris2_external_host")(function()
                  return "127.0.0.1"
                end)(__eta0)
                __frame4[7] = {}
                __frame4[7]["tag"] = "0"
                __frame4[7]["arg1"] = function(b)
                  return function(a)
                      return function(func)
                          return function(__arg149)
                              return function(__eta1)
                                  return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                end
                            end
                        end
                    end
                end
                __frame4[7]["arg2"] = function(a)
                  return function(__arg482)
                      return function(__eta1)
                          return __arg482
                        end
                    end
                end
                __frame4[7]["arg3"] = function(b)
                  return function(a)
                      return function(__arg483)
                          return function(__arg485)
                              return function(__eta1)
                                  local __act17 = __arg483(__eta1)
                                  local __act16 = __arg485(__eta1)
                                  return __act17(__act16)
                                end
                            end
                        end
                    end
                end
                __frame4[8] = {}
                __frame4[8]["tag"] = "0"
                __frame4[8]["arg1"] = __frame4[7]
                __frame4[8]["arg2"] = function(b)
                  return function(a)
                      return function(__arg644)
                          return function(__arg645)
                              return function(__eta1)
                                  local __act34 = __arg644(__eta1)
                                  return __arg645(__act34)(__eta1)
                                end
                            end
                        end
                    end
                end
                __frame4[8]["arg3"] = function(a)
                  return function(__arg647)
                      return function(__eta1)
                          local __act51 = __arg647(__eta1)
                          return __act51(__eta1)
                        end
                    end
                end
                __frame4[9] = {}
                __frame4[9]["tag"] = "0"
                __frame4[9]["arg1"] = __frame4[8]
                __frame4[9]["arg2"] = function(a)
                  return function(__arg6794)
                      return __arg6794
                    end
                end
                local __act34 = idris["Foreign.getGlobalIntVar"](nil)(__frame4[9])("idris2_external_port")(function()
                  return bigint.tonumber(bigint:new("38398"))
                end)(__eta0)
                local __act35 = idris["Plugin.connectIdris2"](params)(__act33)(__act34)(__eta0)
                return idris["Foreign.setGlobalClient"](__act35)(__eta0)
              end
              __frame3[11][1] = function()
                local __frame4 = {
                  nil,
                  nil,
                  nil,
                  nil,
                  nil,
                  nil,
                  nil,
                  nil,
                  nil,
                  nil,
                  nil
                }
                __frame4[1] = {}
                __frame4[1]["tag"] = "0"
                __frame4[1]["arg1"] = function(b)
                  return function(a)
                      return function(func)
                          return function(__arg149)
                              return function(__eta1)
                                  return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                end
                            end
                        end
                    end
                end
                __frame4[1]["arg2"] = function(a)
                  return function(__arg482)
                      return function(__eta1)
                          return __arg482
                        end
                    end
                end
                __frame4[1]["arg3"] = function(b)
                  return function(a)
                      return function(__arg483)
                          return function(__arg485)
                              return function(__eta1)
                                  local __act17 = __arg483(__eta1)
                                  local __act16 = __arg485(__eta1)
                                  return __act17(__act16)
                                end
                            end
                        end
                    end
                end
                __frame4[2] = {}
                __frame4[2]["tag"] = "0"
                __frame4[2]["arg1"] = __frame4[1]
                __frame4[2]["arg2"] = function(b)
                  return function(a)
                      return function(__arg644)
                          return function(__arg645)
                              return function(__eta1)
                                  local __act32 = __arg644(__eta1)
                                  return __arg645(__act32)(__eta1)
                                end
                            end
                        end
                    end
                end
                __frame4[2]["arg3"] = function(a)
                  return function(__arg647)
                      return function(__eta1)
                          local __act51 = __arg647(__eta1)
                          return __act51(__eta1)
                        end
                    end
                end
                __frame4[3] = {}
                __frame4[3]["tag"] = "0"
                __frame4[3]["arg1"] = __frame4[2]
                __frame4[3]["arg2"] = function(a)
                  return function(__arg6794)
                      return __arg6794
                    end
                end
                local __act32 = idris["Foreign.nvimCommand"](nil)(__frame4[3])("echom 'starting server'")(__eta0)
                __frame4[4] = {}
                __frame4[4]["tag"] = "0"
                __frame4[4]["arg1"] = function(b)
                  return function(a)
                      return function(func)
                          return function(__arg149)
                              return function(__eta1)
                                  return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                end
                            end
                        end
                    end
                end
                __frame4[4]["arg2"] = function(a)
                  return function(__arg482)
                      return function(__eta1)
                          return __arg482
                        end
                    end
                end
                __frame4[4]["arg3"] = function(b)
                  return function(a)
                      return function(__arg483)
                          return function(__arg485)
                              return function(__eta1)
                                  local __act17 = __arg483(__eta1)
                                  local __act16 = __arg485(__eta1)
                                  return __act17(__act16)
                                end
                            end
                        end
                    end
                end
                __frame4[5] = {}
                __frame4[5]["tag"] = "0"
                __frame4[5]["arg1"] = __frame4[4]
                __frame4[5]["arg2"] = function(b)
                  return function(a)
                      return function(__arg644)
                          return function(__arg645)
                              return function(__eta1)
                                  local __act33 = __arg644(__eta1)
                                  return __arg645(__act33)(__eta1)
                                end
                            end
                        end
                    end
                end
                __frame4[5]["arg3"] = function(a)
                  return function(__arg647)
                      return function(__eta1)
                          local __act51 = __arg647(__eta1)
                          return __act51(__eta1)
                        end
                    end
                end
                __frame4[6] = {}
                __frame4[6]["tag"] = "0"
                __frame4[6]["arg1"] = __frame4[5]
                __frame4[6]["arg2"] = function(a)
                  return function(__arg6794)
                      return __arg6794
                    end
                end
                local __act33 = idris["Foreign.getGlobalIntVar"](nil)(__frame4[6])("idris2_server_port")(function()
                  return bigint.tonumber(bigint:new("38398"))
                end)(__eta0)
                __frame4[7] = {}
                __frame4[7]["tag"] = "0"
                __frame4[7]["arg1"] = function(b)
                  return function(a)
                      return function(func)
                          return function(__arg149)
                              return function(__eta1)
                                  return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                                end
                            end
                        end
                    end
                end
                __frame4[7]["arg2"] = function(a)
                  return function(__arg482)
                      return function(__eta1)
                          return __arg482
                        end
                    end
                end
                __frame4[7]["arg3"] = function(b)
                  return function(a)
                      return function(__arg483)
                          return function(__arg485)
                              return function(__eta1)
                                  local __act17 = __arg483(__eta1)
                                  local __act16 = __arg485(__eta1)
                                  return __act17(__act16)
                                end
                            end
                        end
                    end
                end
                __frame4[8] = {}
                __frame4[8]["tag"] = "0"
                __frame4[8]["arg1"] = __frame4[7]
                __frame4[8]["arg2"] = function(b)
                  return function(a)
                      return function(__arg644)
                          return function(__arg645)
                              return function(__eta1)
                                  local __act34 = __arg644(__eta1)
                                  return __arg645(__act34)(__eta1)
                                end
                            end
                        end
                    end
                end
                __frame4[8]["arg3"] = function(a)
                  return function(__arg647)
                      return function(__eta1)
                          local __act51 = __arg647(__eta1)
                          return __act51(__eta1)
                        end
                    end
                end
                __frame4[9] = {}
                __frame4[9]["tag"] = "0"
                __frame4[9]["arg1"] = __frame4[8]
                __frame4[9]["arg2"] = function(a)
                  return function(__arg6794)
                      return __arg6794
                    end
                end
                __frame4[10] = {}
                __frame4[10]["tag"] = "0"
                __frame4[10]["arg1"] = "localhost"
                __frame4[10]["arg2"] = __act33
                __frame4[11] = {}
                __frame4[11]["tag"] = "0"
                __frame4[11]["arg1"] = "127.0.0.1"
                __frame4[11]["arg2"] = __act33
                return idris["Plugin.spawnAndConnectIdris2"](nil)(__frame4[9])(params)(__act25)(__act26)(__frame4[10])(__frame4[11])(__eta0)
              end
              __frame3[12] = __frame3[11][__frame3[10]]
              if __frame3[12] then
                __frame3[13] = __frame3[12]()
              else
                idris["error"]("Impossible else branch")
              end
              local __act32 = __frame3[13]
              __frame3[14] = {}
              __frame3[14]["tag"] = "0"
              __frame3[14]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[14]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[14]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[15] = {}
              __frame3[15]["tag"] = "0"
              __frame3[15]["arg1"] = __frame3[14]
              __frame3[15]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act33 = __arg644(__eta1)
                                return __arg645(__act33)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[15]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[16] = {}
              __frame3[16]["tag"] = "0"
              __frame3[16]["arg1"] = __frame3[15]
              __frame3[16]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act33 = idris["Foreign.getGlobalStringVar"](nil)(__frame3[16])("idris2_loadCurrent_key")(function()
                return "<LocalLeader>r"
              end)(__eta0)
              __frame3[17] = {}
              __frame3[17]["tag"] = "0"
              __frame3[17]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[17]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[17]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[18] = {}
              __frame3[18]["tag"] = "0"
              __frame3[18]["arg1"] = __frame3[17]
              __frame3[18]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act34 = __arg644(__eta1)
                                return __arg645(__act34)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[18]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[19] = {}
              __frame3[19]["tag"] = "0"
              __frame3[19]["arg1"] = __frame3[18]
              __frame3[19]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              __frame3[20] = {}
              __frame3[20]["tag"] = "0"
              __frame3[21] = {}
              __frame3[21]["tag"] = "1"
              __frame3[21]["arg1"] = "Commands"
              __frame3[21]["arg2"] = __frame3[20]
              __frame3[22] = {}
              __frame3[22]["tag"] = "0"
              __frame3[22]["arg1"] = "loadCurrent"
              __frame3[23] = {}
              __frame3[23]["tag"] = "2"
              __frame3[23]["arg1"] = __frame3[21]
              __frame3[23]["arg2"] = __frame3[22]
              local __act33 = idris["Foreign.nnoremap"](nil)(__frame3[19])(__act33)(idris["Prelude.Types.Strings.++"](":lua idris['")(idris["Prelude.Types.Strings.++"](idris["Language.Reflection.TT.show_Show__Name"](__frame3[23]))("'](W)<CR>")))(__eta0)
              __frame3[24] = {}
              __frame3[24]["tag"] = "0"
              __frame3[24]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[24]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[24]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[25] = {}
              __frame3[25]["tag"] = "0"
              __frame3[25]["arg1"] = __frame3[24]
              __frame3[25]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act34 = __arg644(__eta1)
                                return __arg645(__act34)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[25]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[26] = {}
              __frame3[26]["tag"] = "0"
              __frame3[26]["arg1"] = __frame3[25]
              __frame3[26]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act34 = idris["Foreign.getGlobalStringVar"](nil)(__frame3[26])("idris2_typeOf_key")(function()
                return "<LocalLeader>t"
              end)(__eta0)
              __frame3[27] = {}
              __frame3[27]["tag"] = "0"
              __frame3[27]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[27]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[27]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[28] = {}
              __frame3[28]["tag"] = "0"
              __frame3[28]["arg1"] = __frame3[27]
              __frame3[28]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act35 = __arg644(__eta1)
                                return __arg645(__act35)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[28]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[29] = {}
              __frame3[29]["tag"] = "0"
              __frame3[29]["arg1"] = __frame3[28]
              __frame3[29]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              __frame3[30] = {}
              __frame3[30]["tag"] = "0"
              __frame3[31] = {}
              __frame3[31]["tag"] = "1"
              __frame3[31]["arg1"] = "Commands"
              __frame3[31]["arg2"] = __frame3[30]
              __frame3[32] = {}
              __frame3[32]["tag"] = "0"
              __frame3[32]["arg1"] = "typeOf"
              __frame3[33] = {}
              __frame3[33]["tag"] = "2"
              __frame3[33]["arg1"] = __frame3[31]
              __frame3[33]["arg2"] = __frame3[32]
              local __act34 = idris["Foreign.nnoremap"](nil)(__frame3[29])(__act34)(idris["Prelude.Types.Strings.++"](":lua idris['")(idris["Prelude.Types.Strings.++"](idris["Language.Reflection.TT.show_Show__Name"](__frame3[33]))("'](W)<CR>")))(__eta0)
              __frame3[34] = {}
              __frame3[34]["tag"] = "0"
              __frame3[34]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[34]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[34]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[35] = {}
              __frame3[35]["tag"] = "0"
              __frame3[35]["arg1"] = __frame3[34]
              __frame3[35]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act35 = __arg644(__eta1)
                                return __arg645(__act35)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[35]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[36] = {}
              __frame3[36]["tag"] = "0"
              __frame3[36]["arg1"] = __frame3[35]
              __frame3[36]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act35 = idris["Foreign.getGlobalStringVar"](nil)(__frame3[36])("idris2_typeOfPrompt_key")(function()
                return "<LocalLeader>T"
              end)(__eta0)
              __frame3[37] = {}
              __frame3[37]["tag"] = "0"
              __frame3[37]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[37]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[37]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[38] = {}
              __frame3[38]["tag"] = "0"
              __frame3[38]["arg1"] = __frame3[37]
              __frame3[38]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act36 = __arg644(__eta1)
                                return __arg645(__act36)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[38]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[39] = {}
              __frame3[39]["tag"] = "0"
              __frame3[39]["arg1"] = __frame3[38]
              __frame3[39]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              __frame3[40] = {}
              __frame3[40]["tag"] = "0"
              __frame3[41] = {}
              __frame3[41]["tag"] = "1"
              __frame3[41]["arg1"] = "Commands"
              __frame3[41]["arg2"] = __frame3[40]
              __frame3[42] = {}
              __frame3[42]["tag"] = "0"
              __frame3[42]["arg1"] = "typeOfPrompt"
              __frame3[43] = {}
              __frame3[43]["tag"] = "2"
              __frame3[43]["arg1"] = __frame3[41]
              __frame3[43]["arg2"] = __frame3[42]
              local __act35 = idris["Foreign.nnoremap"](nil)(__frame3[39])(__act35)(idris["Prelude.Types.Strings.++"](":lua idris['")(idris["Prelude.Types.Strings.++"](idris["Language.Reflection.TT.show_Show__Name"](__frame3[43]))("'](W)<CR>")))(__eta0)
              __frame3[44] = {}
              __frame3[44]["tag"] = "0"
              __frame3[44]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[44]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[44]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[45] = {}
              __frame3[45]["tag"] = "0"
              __frame3[45]["arg1"] = __frame3[44]
              __frame3[45]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act36 = __arg644(__eta1)
                                return __arg645(__act36)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[45]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[46] = {}
              __frame3[46]["tag"] = "0"
              __frame3[46]["arg1"] = __frame3[45]
              __frame3[46]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act36 = idris["Foreign.getGlobalStringVar"](nil)(__frame3[46])("idris2_typeOf_key")(function()
                return "<LocalLeader>t"
              end)(__eta0)
              __frame3[47] = {}
              __frame3[47]["tag"] = "0"
              __frame3[47]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[47]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[47]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[48] = {}
              __frame3[48]["tag"] = "0"
              __frame3[48]["arg1"] = __frame3[47]
              __frame3[48]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act37 = __arg644(__eta1)
                                return __arg645(__act37)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[48]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[49] = {}
              __frame3[49]["tag"] = "0"
              __frame3[49]["arg1"] = __frame3[48]
              __frame3[49]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              __frame3[50] = {}
              __frame3[50]["tag"] = "0"
              __frame3[51] = {}
              __frame3[51]["tag"] = "1"
              __frame3[51]["arg1"] = "Commands"
              __frame3[51]["arg2"] = __frame3[50]
              __frame3[52] = {}
              __frame3[52]["tag"] = "0"
              __frame3[52]["arg1"] = "typeOfSel"
              __frame3[53] = {}
              __frame3[53]["tag"] = "2"
              __frame3[53]["arg1"] = __frame3[51]
              __frame3[53]["arg2"] = __frame3[52]
              local __act36 = idris["Foreign.vnoremap"](nil)(__frame3[49])(__act36)(idris["Prelude.Types.Strings.++"](":lua idris['")(idris["Prelude.Types.Strings.++"](idris["Language.Reflection.TT.show_Show__Name"](__frame3[53]))("'](W)<CR>")))(__eta0)
              __frame3[54] = {}
              __frame3[54]["tag"] = "0"
              __frame3[54]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[54]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[54]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[55] = {}
              __frame3[55]["tag"] = "0"
              __frame3[55]["arg1"] = __frame3[54]
              __frame3[55]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act37 = __arg644(__eta1)
                                return __arg645(__act37)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[55]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[56] = {}
              __frame3[56]["tag"] = "0"
              __frame3[56]["arg1"] = __frame3[55]
              __frame3[56]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act37 = idris["Foreign.getGlobalStringVar"](nil)(__frame3[56])("idris2_docOverview_key")(function()
                return "<LocalLeader>d"
              end)(__eta0)
              __frame3[57] = {}
              __frame3[57]["tag"] = "0"
              __frame3[57]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[57]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[57]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[58] = {}
              __frame3[58]["tag"] = "0"
              __frame3[58]["arg1"] = __frame3[57]
              __frame3[58]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act38 = __arg644(__eta1)
                                return __arg645(__act38)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[58]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[59] = {}
              __frame3[59]["tag"] = "0"
              __frame3[59]["arg1"] = __frame3[58]
              __frame3[59]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              __frame3[60] = {}
              __frame3[60]["tag"] = "0"
              __frame3[61] = {}
              __frame3[61]["tag"] = "1"
              __frame3[61]["arg1"] = "Commands"
              __frame3[61]["arg2"] = __frame3[60]
              __frame3[62] = {}
              __frame3[62]["tag"] = "0"
              __frame3[62]["arg1"] = "docOverview"
              __frame3[63] = {}
              __frame3[63]["tag"] = "2"
              __frame3[63]["arg1"] = __frame3[61]
              __frame3[63]["arg2"] = __frame3[62]
              local __act37 = idris["Foreign.nnoremap"](nil)(__frame3[59])(__act37)(idris["Prelude.Types.Strings.++"](":lua idris['")(idris["Prelude.Types.Strings.++"](idris["Language.Reflection.TT.show_Show__Name"](__frame3[63]))("'](W)<CR>")))(__eta0)
              __frame3[64] = {}
              __frame3[64]["tag"] = "0"
              __frame3[64]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[64]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[64]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[65] = {}
              __frame3[65]["tag"] = "0"
              __frame3[65]["arg1"] = __frame3[64]
              __frame3[65]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act38 = __arg644(__eta1)
                                return __arg645(__act38)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[65]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[66] = {}
              __frame3[66]["tag"] = "0"
              __frame3[66]["arg1"] = __frame3[65]
              __frame3[66]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act38 = idris["Foreign.getGlobalStringVar"](nil)(__frame3[66])("idris2_caseSplit_key")(function()
                return "<LocalLeader>c"
              end)(__eta0)
              __frame3[67] = {}
              __frame3[67]["tag"] = "0"
              __frame3[67]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[67]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[67]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[68] = {}
              __frame3[68]["tag"] = "0"
              __frame3[68]["arg1"] = __frame3[67]
              __frame3[68]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act39 = __arg644(__eta1)
                                return __arg645(__act39)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[68]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[69] = {}
              __frame3[69]["tag"] = "0"
              __frame3[69]["arg1"] = __frame3[68]
              __frame3[69]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              __frame3[70] = {}
              __frame3[70]["tag"] = "0"
              __frame3[71] = {}
              __frame3[71]["tag"] = "1"
              __frame3[71]["arg1"] = "Commands"
              __frame3[71]["arg2"] = __frame3[70]
              __frame3[72] = {}
              __frame3[72]["tag"] = "0"
              __frame3[72]["arg1"] = "caseSplit"
              __frame3[73] = {}
              __frame3[73]["tag"] = "2"
              __frame3[73]["arg1"] = __frame3[71]
              __frame3[73]["arg2"] = __frame3[72]
              local __act38 = idris["Foreign.nnoremap"](nil)(__frame3[69])(__act38)(idris["Prelude.Types.Strings.++"](":lua idris['")(idris["Prelude.Types.Strings.++"](idris["Language.Reflection.TT.show_Show__Name"](__frame3[73]))("'](W)<CR>")))(__eta0)
              __frame3[74] = {}
              __frame3[74]["tag"] = "0"
              __frame3[74]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[74]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[74]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[75] = {}
              __frame3[75]["tag"] = "0"
              __frame3[75]["arg1"] = __frame3[74]
              __frame3[75]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act39 = __arg644(__eta1)
                                return __arg645(__act39)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[75]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[76] = {}
              __frame3[76]["tag"] = "0"
              __frame3[76]["arg1"] = __frame3[75]
              __frame3[76]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act39 = idris["Foreign.getGlobalStringVar"](nil)(__frame3[76])("idris2_exprSearch_key")(function()
                return "<LocalLeader>s"
              end)(__eta0)
              __frame3[77] = {}
              __frame3[77]["tag"] = "0"
              __frame3[77]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[77]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[77]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[78] = {}
              __frame3[78]["tag"] = "0"
              __frame3[78]["arg1"] = __frame3[77]
              __frame3[78]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act40 = __arg644(__eta1)
                                return __arg645(__act40)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[78]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[79] = {}
              __frame3[79]["tag"] = "0"
              __frame3[79]["arg1"] = __frame3[78]
              __frame3[79]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              __frame3[80] = {}
              __frame3[80]["tag"] = "0"
              __frame3[81] = {}
              __frame3[81]["tag"] = "1"
              __frame3[81]["arg1"] = "Commands"
              __frame3[81]["arg2"] = __frame3[80]
              __frame3[82] = {}
              __frame3[82]["tag"] = "0"
              __frame3[82]["arg1"] = "exprSearch"
              __frame3[83] = {}
              __frame3[83]["tag"] = "2"
              __frame3[83]["arg1"] = __frame3[81]
              __frame3[83]["arg2"] = __frame3[82]
              local __act39 = idris["Foreign.nnoremap"](nil)(__frame3[79])(__act39)(idris["Prelude.Types.Strings.++"](":lua idris['")(idris["Prelude.Types.Strings.++"](idris["Language.Reflection.TT.show_Show__Name"](__frame3[83]))("'](W)<CR>")))(__eta0)
              __frame3[84] = {}
              __frame3[84]["tag"] = "0"
              __frame3[84]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[84]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[84]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[85] = {}
              __frame3[85]["tag"] = "0"
              __frame3[85]["arg1"] = __frame3[84]
              __frame3[85]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act40 = __arg644(__eta1)
                                return __arg645(__act40)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[85]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[86] = {}
              __frame3[86]["tag"] = "0"
              __frame3[86]["arg1"] = __frame3[85]
              __frame3[86]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act40 = idris["Foreign.getGlobalStringVar"](nil)(__frame3[86])("idris2_exprSearchNext_key")(function()
                return "<LocalLeader>sn"
              end)(__eta0)
              __frame3[87] = {}
              __frame3[87]["tag"] = "0"
              __frame3[87]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[87]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[87]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[88] = {}
              __frame3[88]["tag"] = "0"
              __frame3[88]["arg1"] = __frame3[87]
              __frame3[88]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act41 = __arg644(__eta1)
                                return __arg645(__act41)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[88]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[89] = {}
              __frame3[89]["tag"] = "0"
              __frame3[89]["arg1"] = __frame3[88]
              __frame3[89]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              __frame3[90] = {}
              __frame3[90]["tag"] = "0"
              __frame3[91] = {}
              __frame3[91]["tag"] = "1"
              __frame3[91]["arg1"] = "Commands"
              __frame3[91]["arg2"] = __frame3[90]
              __frame3[92] = {}
              __frame3[92]["tag"] = "0"
              __frame3[92]["arg1"] = "exprSearchNext"
              __frame3[93] = {}
              __frame3[93]["tag"] = "2"
              __frame3[93]["arg1"] = __frame3[91]
              __frame3[93]["arg2"] = __frame3[92]
              local __act40 = idris["Foreign.nnoremap"](nil)(__frame3[89])(__act40)(idris["Prelude.Types.Strings.++"](":lua idris['")(idris["Prelude.Types.Strings.++"](idris["Language.Reflection.TT.show_Show__Name"](__frame3[93]))("'](W)<CR>")))(__eta0)
              __frame3[94] = {}
              __frame3[94]["tag"] = "0"
              __frame3[94]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[94]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[94]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[95] = {}
              __frame3[95]["tag"] = "0"
              __frame3[95]["arg1"] = __frame3[94]
              __frame3[95]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act41 = __arg644(__eta1)
                                return __arg645(__act41)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[95]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[96] = {}
              __frame3[96]["tag"] = "0"
              __frame3[96]["arg1"] = __frame3[95]
              __frame3[96]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act41 = idris["Foreign.getGlobalStringVar"](nil)(__frame3[96])("idris2_addClause_key")(function()
                return "<LocalLeader>a"
              end)(__eta0)
              __frame3[97] = {}
              __frame3[97]["tag"] = "0"
              __frame3[97]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[97]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[97]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[98] = {}
              __frame3[98]["tag"] = "0"
              __frame3[98]["arg1"] = __frame3[97]
              __frame3[98]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act42 = __arg644(__eta1)
                                return __arg645(__act42)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[98]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[99] = {}
              __frame3[99]["tag"] = "0"
              __frame3[99]["arg1"] = __frame3[98]
              __frame3[99]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              __frame3[100] = {}
              __frame3[100]["tag"] = "0"
              __frame3[101] = {}
              __frame3[101]["tag"] = "1"
              __frame3[101]["arg1"] = "Commands"
              __frame3[101]["arg2"] = __frame3[100]
              __frame3[102] = {}
              __frame3[102]["tag"] = "0"
              __frame3[102]["arg1"] = "addClause"
              __frame3[103] = {}
              __frame3[103]["tag"] = "2"
              __frame3[103]["arg1"] = __frame3[101]
              __frame3[103]["arg2"] = __frame3[102]
              local __act41 = idris["Foreign.nnoremap"](nil)(__frame3[99])(__act41)(idris["Prelude.Types.Strings.++"](":lua idris['")(idris["Prelude.Types.Strings.++"](idris["Language.Reflection.TT.show_Show__Name"](__frame3[103]))("'](W)<CR>")))(__eta0)
              __frame3[104] = {}
              __frame3[104]["tag"] = "0"
              __frame3[104]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[104]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[104]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[105] = {}
              __frame3[105]["tag"] = "0"
              __frame3[105]["arg1"] = __frame3[104]
              __frame3[105]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act42 = __arg644(__eta1)
                                return __arg645(__act42)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[105]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[106] = {}
              __frame3[106]["tag"] = "0"
              __frame3[106]["arg1"] = __frame3[105]
              __frame3[106]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act42 = idris["Foreign.getGlobalStringVar"](nil)(__frame3[106])("idris2_generateDef_key")(function()
                return "<LocalLeader>g"
              end)(__eta0)
              __frame3[107] = {}
              __frame3[107]["tag"] = "0"
              __frame3[107]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[107]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[107]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[108] = {}
              __frame3[108]["tag"] = "0"
              __frame3[108]["arg1"] = __frame3[107]
              __frame3[108]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act43 = __arg644(__eta1)
                                return __arg645(__act43)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[108]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[109] = {}
              __frame3[109]["tag"] = "0"
              __frame3[109]["arg1"] = __frame3[108]
              __frame3[109]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              __frame3[110] = {}
              __frame3[110]["tag"] = "0"
              __frame3[111] = {}
              __frame3[111]["tag"] = "1"
              __frame3[111]["arg1"] = "Commands"
              __frame3[111]["arg2"] = __frame3[110]
              __frame3[112] = {}
              __frame3[112]["tag"] = "0"
              __frame3[112]["arg1"] = "generateDef"
              __frame3[113] = {}
              __frame3[113]["tag"] = "2"
              __frame3[113]["arg1"] = __frame3[111]
              __frame3[113]["arg2"] = __frame3[112]
              local __act42 = idris["Foreign.nnoremap"](nil)(__frame3[109])(__act42)(idris["Prelude.Types.Strings.++"](":lua idris['")(idris["Prelude.Types.Strings.++"](idris["Language.Reflection.TT.show_Show__Name"](__frame3[113]))("'](W)<CR>")))(__eta0)
              __frame3[114] = {}
              __frame3[114]["tag"] = "0"
              __frame3[114]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[114]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[114]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[115] = {}
              __frame3[115]["tag"] = "0"
              __frame3[115]["arg1"] = __frame3[114]
              __frame3[115]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act43 = __arg644(__eta1)
                                return __arg645(__act43)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[115]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[116] = {}
              __frame3[116]["tag"] = "0"
              __frame3[116]["arg1"] = __frame3[115]
              __frame3[116]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act43 = idris["Foreign.getGlobalStringVar"](nil)(__frame3[116])("idris2_generateDefNext_key")(function()
                return "<LocalLeader>gn"
              end)(__eta0)
              __frame3[117] = {}
              __frame3[117]["tag"] = "0"
              __frame3[117]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[117]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[117]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[118] = {}
              __frame3[118]["tag"] = "0"
              __frame3[118]["arg1"] = __frame3[117]
              __frame3[118]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act44 = __arg644(__eta1)
                                return __arg645(__act44)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[118]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[119] = {}
              __frame3[119]["tag"] = "0"
              __frame3[119]["arg1"] = __frame3[118]
              __frame3[119]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              __frame3[120] = {}
              __frame3[120]["tag"] = "0"
              __frame3[121] = {}
              __frame3[121]["tag"] = "1"
              __frame3[121]["arg1"] = "Commands"
              __frame3[121]["arg2"] = __frame3[120]
              __frame3[122] = {}
              __frame3[122]["tag"] = "0"
              __frame3[122]["arg1"] = "generateDefNext"
              __frame3[123] = {}
              __frame3[123]["tag"] = "2"
              __frame3[123]["arg1"] = __frame3[121]
              __frame3[123]["arg2"] = __frame3[122]
              local __act43 = idris["Foreign.nnoremap"](nil)(__frame3[119])(__act43)(idris["Prelude.Types.Strings.++"](":lua idris['")(idris["Prelude.Types.Strings.++"](idris["Language.Reflection.TT.show_Show__Name"](__frame3[123]))("'](W)<CR>")))(__eta0)
              __frame3[124] = {}
              __frame3[124]["tag"] = "0"
              __frame3[124]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[124]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[124]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[125] = {}
              __frame3[125]["tag"] = "0"
              __frame3[125]["arg1"] = __frame3[124]
              __frame3[125]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act44 = __arg644(__eta1)
                                return __arg645(__act44)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[125]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[126] = {}
              __frame3[126]["tag"] = "0"
              __frame3[126]["arg1"] = __frame3[125]
              __frame3[126]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act44 = idris["Foreign.getGlobalStringVar"](nil)(__frame3[126])("idris2_makeLemma_key")(function()
                return "<LocalLeader>l"
              end)(__eta0)
              __frame3[127] = {}
              __frame3[127]["tag"] = "0"
              __frame3[127]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[127]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[127]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[128] = {}
              __frame3[128]["tag"] = "0"
              __frame3[128]["arg1"] = __frame3[127]
              __frame3[128]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act45 = __arg644(__eta1)
                                return __arg645(__act45)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[128]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[129] = {}
              __frame3[129]["tag"] = "0"
              __frame3[129]["arg1"] = __frame3[128]
              __frame3[129]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              __frame3[130] = {}
              __frame3[130]["tag"] = "0"
              __frame3[131] = {}
              __frame3[131]["tag"] = "1"
              __frame3[131]["arg1"] = "Commands"
              __frame3[131]["arg2"] = __frame3[130]
              __frame3[132] = {}
              __frame3[132]["tag"] = "0"
              __frame3[132]["arg1"] = "makeLemma"
              __frame3[133] = {}
              __frame3[133]["tag"] = "2"
              __frame3[133]["arg1"] = __frame3[131]
              __frame3[133]["arg2"] = __frame3[132]
              local __act44 = idris["Foreign.nnoremap"](nil)(__frame3[129])(__act44)(idris["Prelude.Types.Strings.++"](":lua idris['")(idris["Prelude.Types.Strings.++"](idris["Language.Reflection.TT.show_Show__Name"](__frame3[133]))("'](W)<CR>")))(__eta0)
              __frame3[134] = {}
              __frame3[134]["tag"] = "0"
              __frame3[134]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[134]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[134]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[135] = {}
              __frame3[135]["tag"] = "0"
              __frame3[135]["arg1"] = __frame3[134]
              __frame3[135]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act45 = __arg644(__eta1)
                                return __arg645(__act45)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[135]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[136] = {}
              __frame3[136]["tag"] = "0"
              __frame3[136]["arg1"] = __frame3[135]
              __frame3[136]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act45 = idris["Foreign.getGlobalStringVar"](nil)(__frame3[136])("idris2_makeCase_key")(function()
                return "<LocalLeader>mc"
              end)(__eta0)
              __frame3[137] = {}
              __frame3[137]["tag"] = "0"
              __frame3[137]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[137]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[137]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[138] = {}
              __frame3[138]["tag"] = "0"
              __frame3[138]["arg1"] = __frame3[137]
              __frame3[138]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act46 = __arg644(__eta1)
                                return __arg645(__act46)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[138]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[139] = {}
              __frame3[139]["tag"] = "0"
              __frame3[139]["arg1"] = __frame3[138]
              __frame3[139]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              __frame3[140] = {}
              __frame3[140]["tag"] = "0"
              __frame3[141] = {}
              __frame3[141]["tag"] = "1"
              __frame3[141]["arg1"] = "Commands"
              __frame3[141]["arg2"] = __frame3[140]
              __frame3[142] = {}
              __frame3[142]["tag"] = "0"
              __frame3[142]["arg1"] = "makeCase"
              __frame3[143] = {}
              __frame3[143]["tag"] = "2"
              __frame3[143]["arg1"] = __frame3[141]
              __frame3[143]["arg2"] = __frame3[142]
              local __act45 = idris["Foreign.nnoremap"](nil)(__frame3[139])(__act45)(idris["Prelude.Types.Strings.++"](":lua idris['")(idris["Prelude.Types.Strings.++"](idris["Language.Reflection.TT.show_Show__Name"](__frame3[143]))("'](W)<CR>")))(__eta0)
              __frame3[144] = {}
              __frame3[144]["tag"] = "0"
              __frame3[144]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[144]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[144]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[145] = {}
              __frame3[145]["tag"] = "0"
              __frame3[145]["arg1"] = __frame3[144]
              __frame3[145]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act46 = __arg644(__eta1)
                                return __arg645(__act46)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[145]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[146] = {}
              __frame3[146]["tag"] = "0"
              __frame3[146]["arg1"] = __frame3[145]
              __frame3[146]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act46 = idris["Foreign.getGlobalStringVar"](nil)(__frame3[146])("idris2_makeWith_key")(function()
                return "<LocalLeader>w"
              end)(__eta0)
              __frame3[147] = {}
              __frame3[147]["tag"] = "0"
              __frame3[147]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[147]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[147]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[148] = {}
              __frame3[148]["tag"] = "0"
              __frame3[148]["arg1"] = __frame3[147]
              __frame3[148]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act47 = __arg644(__eta1)
                                return __arg645(__act47)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[148]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[149] = {}
              __frame3[149]["tag"] = "0"
              __frame3[149]["arg1"] = __frame3[148]
              __frame3[149]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              __frame3[150] = {}
              __frame3[150]["tag"] = "0"
              __frame3[151] = {}
              __frame3[151]["tag"] = "1"
              __frame3[151]["arg1"] = "Commands"
              __frame3[151]["arg2"] = __frame3[150]
              __frame3[152] = {}
              __frame3[152]["tag"] = "0"
              __frame3[152]["arg1"] = "makeWith"
              __frame3[153] = {}
              __frame3[153]["tag"] = "2"
              __frame3[153]["arg1"] = __frame3[151]
              __frame3[153]["arg2"] = __frame3[152]
              local __act46 = idris["Foreign.nnoremap"](nil)(__frame3[149])(__act46)(idris["Prelude.Types.Strings.++"](":lua idris['")(idris["Prelude.Types.Strings.++"](idris["Language.Reflection.TT.show_Show__Name"](__frame3[153]))("'](W)<CR>")))(__eta0)
              __frame3[154] = {}
              __frame3[154]["tag"] = "0"
              __frame3[154]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[154]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[154]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[155] = {}
              __frame3[155]["tag"] = "0"
              __frame3[155]["arg1"] = __frame3[154]
              __frame3[155]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act47 = __arg644(__eta1)
                                return __arg645(__act47)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[155]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[156] = {}
              __frame3[156]["tag"] = "0"
              __frame3[156]["arg1"] = __frame3[155]
              __frame3[156]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act47 = idris["Foreign.getGlobalStringVar"](nil)(__frame3[156])("idris2_jumpTo_key")(function()
                return "<LocalLeader>j"
              end)(__eta0)
              __frame3[157] = {}
              __frame3[157]["tag"] = "0"
              __frame3[157]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[157]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[157]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[158] = {}
              __frame3[158]["tag"] = "0"
              __frame3[158]["arg1"] = __frame3[157]
              __frame3[158]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act48 = __arg644(__eta1)
                                return __arg645(__act48)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[158]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[159] = {}
              __frame3[159]["tag"] = "0"
              __frame3[159]["arg1"] = __frame3[158]
              __frame3[159]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              __frame3[160] = {}
              __frame3[160]["tag"] = "0"
              __frame3[161] = {}
              __frame3[161]["tag"] = "1"
              __frame3[161]["arg1"] = "Commands"
              __frame3[161]["arg2"] = __frame3[160]
              __frame3[162] = {}
              __frame3[162]["tag"] = "0"
              __frame3[162]["arg1"] = "nameAt"
              __frame3[163] = {}
              __frame3[163]["tag"] = "2"
              __frame3[163]["arg1"] = __frame3[161]
              __frame3[163]["arg2"] = __frame3[162]
              local __act47 = idris["Foreign.nnoremap"](nil)(__frame3[159])(__act47)(idris["Prelude.Types.Strings.++"](":lua idris['")(idris["Prelude.Types.Strings.++"](idris["Language.Reflection.TT.show_Show__Name"](__frame3[163]))("'](W)<CR>")))(__eta0)
              __frame3[164] = {}
              __frame3[164]["tag"] = "0"
              __frame3[164]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[164]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[164]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[165] = {}
              __frame3[165]["tag"] = "0"
              __frame3[165]["arg1"] = __frame3[164]
              __frame3[165]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act48 = __arg644(__eta1)
                                return __arg645(__act48)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[165]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[166] = {}
              __frame3[166]["tag"] = "0"
              __frame3[166]["arg1"] = __frame3[165]
              __frame3[166]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act48 = idris["Foreign.getGlobalStringVar"](nil)(__frame3[166])("idris2_jumpToPrompt_key")(function()
                return "<LocalLeader>J"
              end)(__eta0)
              __frame3[167] = {}
              __frame3[167]["tag"] = "0"
              __frame3[167]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[167]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[167]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[168] = {}
              __frame3[168]["tag"] = "0"
              __frame3[168]["arg1"] = __frame3[167]
              __frame3[168]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act49 = __arg644(__eta1)
                                return __arg645(__act49)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[168]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[169] = {}
              __frame3[169]["tag"] = "0"
              __frame3[169]["arg1"] = __frame3[168]
              __frame3[169]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              __frame3[170] = {}
              __frame3[170]["tag"] = "0"
              __frame3[171] = {}
              __frame3[171]["tag"] = "1"
              __frame3[171]["arg1"] = "Commands"
              __frame3[171]["arg2"] = __frame3[170]
              __frame3[172] = {}
              __frame3[172]["tag"] = "0"
              __frame3[172]["arg1"] = "nameAtPrompt"
              __frame3[173] = {}
              __frame3[173]["tag"] = "2"
              __frame3[173]["arg1"] = __frame3[171]
              __frame3[173]["arg2"] = __frame3[172]
              local __act48 = idris["Foreign.nnoremap"](nil)(__frame3[169])(__act48)(idris["Prelude.Types.Strings.++"](":lua idris['")(idris["Prelude.Types.Strings.++"](idris["Language.Reflection.TT.show_Show__Name"](__frame3[173]))("'](W)<CR>")))(__eta0)
              __frame3[174] = {}
              __frame3[174]["tag"] = "0"
              __frame3[174]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[174]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[174]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[175] = {}
              __frame3[175]["tag"] = "0"
              __frame3[175]["arg1"] = __frame3[174]
              __frame3[175]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act49 = __arg644(__eta1)
                                return __arg645(__act49)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[175]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[176] = {}
              __frame3[176]["tag"] = "0"
              __frame3[176]["arg1"] = __frame3[175]
              __frame3[176]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act49 = idris["Foreign.getGlobalStringVar"](nil)(__frame3[176])("idris2_jumpTo_key")(function()
                return "<LocalLeader>j"
              end)(__eta0)
              __frame3[177] = {}
              __frame3[177]["tag"] = "0"
              __frame3[177]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[177]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[177]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[178] = {}
              __frame3[178]["tag"] = "0"
              __frame3[178]["arg1"] = __frame3[177]
              __frame3[178]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act50 = __arg644(__eta1)
                                return __arg645(__act50)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[178]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[179] = {}
              __frame3[179]["tag"] = "0"
              __frame3[179]["arg1"] = __frame3[178]
              __frame3[179]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              __frame3[180] = {}
              __frame3[180]["tag"] = "0"
              __frame3[181] = {}
              __frame3[181]["tag"] = "1"
              __frame3[181]["arg1"] = "Commands"
              __frame3[181]["arg2"] = __frame3[180]
              __frame3[182] = {}
              __frame3[182]["tag"] = "0"
              __frame3[182]["arg1"] = "nameAtSel"
              __frame3[183] = {}
              __frame3[183]["tag"] = "2"
              __frame3[183]["arg1"] = __frame3[181]
              __frame3[183]["arg2"] = __frame3[182]
              local __act49 = idris["Foreign.vnoremap"](nil)(__frame3[179])(__act49)(idris["Prelude.Types.Strings.++"](":lua idris['")(idris["Prelude.Types.Strings.++"](idris["Language.Reflection.TT.show_Show__Name"](__frame3[183]))("'](W)<CR>")))(__eta0)
              __frame3[184] = {}
              __frame3[184]["tag"] = "0"
              __frame3[184]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[184]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[184]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[185] = {}
              __frame3[185]["tag"] = "0"
              __frame3[185]["arg1"] = __frame3[184]
              __frame3[185]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act50 = __arg644(__eta1)
                                return __arg645(__act50)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[185]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[186] = {}
              __frame3[186]["tag"] = "0"
              __frame3[186]["arg1"] = __frame3[185]
              __frame3[186]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act50 = idris["Foreign.getGlobalStringVar"](nil)(__frame3[186])("idris2_interpret_key")(function()
                return "<LocalLeader>e"
              end)(__eta0)
              __frame3[187] = {}
              __frame3[187]["tag"] = "0"
              __frame3[187]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[187]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[187]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[188] = {}
              __frame3[188]["tag"] = "0"
              __frame3[188]["arg1"] = __frame3[187]
              __frame3[188]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act51 = __arg644(__eta1)
                                return __arg645(__act51)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[188]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[189] = {}
              __frame3[189]["tag"] = "0"
              __frame3[189]["arg1"] = __frame3[188]
              __frame3[189]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              __frame3[190] = {}
              __frame3[190]["tag"] = "0"
              __frame3[191] = {}
              __frame3[191]["tag"] = "1"
              __frame3[191]["arg1"] = "Commands"
              __frame3[191]["arg2"] = __frame3[190]
              __frame3[192] = {}
              __frame3[192]["tag"] = "0"
              __frame3[192]["arg1"] = "interpret"
              __frame3[193] = {}
              __frame3[193]["tag"] = "2"
              __frame3[193]["arg1"] = __frame3[191]
              __frame3[193]["arg2"] = __frame3[192]
              local __act50 = idris["Foreign.vnoremap"](nil)(__frame3[189])(__act50)(idris["Prelude.Types.Strings.++"](":lua idris['")(idris["Prelude.Types.Strings.++"](idris["Language.Reflection.TT.show_Show__Name"](__frame3[193]))("'](W)<CR>")))(__eta0)
              __frame3[194] = {}
              __frame3[194]["tag"] = "0"
              __frame3[194]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[194]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[194]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[195] = {}
              __frame3[195]["tag"] = "0"
              __frame3[195]["arg1"] = __frame3[194]
              __frame3[195]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act51 = __arg644(__eta1)
                                return __arg645(__act51)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[195]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act51 = __arg647(__eta1)
                        return __act51(__eta1)
                      end
                  end
              end
              __frame3[196] = {}
              __frame3[196]["tag"] = "0"
              __frame3[196]["arg1"] = __frame3[195]
              __frame3[196]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act51 = idris["Foreign.getGlobalBoolVar"](nil)(__frame3[196])("idris2_load_on_start")(function()
                return 0
              end)(__eta0)
              __frame3[197] = {}
              __frame3[197]["tag"] = "0"
              __frame3[197]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[197]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[197]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              local __act52 = idris["Prelude.Interfaces.when"](nil)(__frame3[197])(__act51)(function()
                return function(__eta1)
                    local __frame5 = {
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil,
                      nil
                    }
                    __frame5[1] = {}
                    __frame5[1]["tag"] = "0"
                    __frame5[1]["arg1"] = function(b)
                      return function(a)
                          return function(func)
                              return function(__arg149)
                                  return function(__eta2)
                                      return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta2)
                                    end
                                end
                            end
                        end
                    end
                    __frame5[1]["arg2"] = function(a)
                      return function(__arg482)
                          return function(__eta2)
                              return __arg482
                            end
                        end
                    end
                    __frame5[1]["arg3"] = function(b)
                      return function(a)
                          return function(__arg483)
                              return function(__arg485)
                                  return function(__eta2)
                                      local __act17 = __arg483(__eta2)
                                      local __act16 = __arg485(__eta2)
                                      return __act17(__act16)
                                    end
                                end
                            end
                        end
                    end
                    __frame5[2] = {}
                    __frame5[2]["tag"] = "0"
                    __frame5[2]["arg1"] = __frame5[1]
                    __frame5[2]["arg2"] = function(b)
                      return function(a)
                          return function(__arg644)
                              return function(__arg645)
                                  return function(__eta2)
                                      local __act52 = __arg644(__eta2)
                                      return __arg645(__act52)(__eta2)
                                    end
                                end
                            end
                        end
                    end
                    __frame5[2]["arg3"] = function(a)
                      return function(__arg647)
                          return function(__eta2)
                              local __act52 = __arg647(__eta2)
                              return __act52(__eta2)
                            end
                        end
                    end
                    __frame5[3] = {}
                    __frame5[3]["tag"] = "0"
                    __frame5[3]["arg1"] = __frame5[2]
                    __frame5[3]["arg2"] = function(a)
                      return function(__arg6794)
                          return __arg6794
                        end
                    end
                    local __act52 = idris["Foreign.nvimCommand"](nil)(__frame5[3])("augroup IdrisLoadOnRead")(__eta1)
                    __frame5[4] = {}
                    __frame5[4]["tag"] = "0"
                    __frame5[4]["arg1"] = function(b)
                      return function(a)
                          return function(func)
                              return function(__arg149)
                                  return function(__eta2)
                                      return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta2)
                                    end
                                end
                            end
                        end
                    end
                    __frame5[4]["arg2"] = function(a)
                      return function(__arg482)
                          return function(__eta2)
                              return __arg482
                            end
                        end
                    end
                    __frame5[4]["arg3"] = function(b)
                      return function(a)
                          return function(__arg483)
                              return function(__arg485)
                                  return function(__eta2)
                                      local __act17 = __arg483(__eta2)
                                      local __act16 = __arg485(__eta2)
                                      return __act17(__act16)
                                    end
                                end
                            end
                        end
                    end
                    __frame5[5] = {}
                    __frame5[5]["tag"] = "0"
                    __frame5[5]["arg1"] = __frame5[4]
                    __frame5[5]["arg2"] = function(b)
                      return function(a)
                          return function(__arg644)
                              return function(__arg645)
                                  return function(__eta2)
                                      local __act53 = __arg644(__eta2)
                                      return __arg645(__act53)(__eta2)
                                    end
                                end
                            end
                        end
                    end
                    __frame5[5]["arg3"] = function(a)
                      return function(__arg647)
                          return function(__eta2)
                              local __act53 = __arg647(__eta2)
                              return __act53(__eta2)
                            end
                        end
                    end
                    __frame5[6] = {}
                    __frame5[6]["tag"] = "0"
                    __frame5[6]["arg1"] = __frame5[5]
                    __frame5[6]["arg2"] = function(a)
                      return function(__arg6794)
                          return __arg6794
                        end
                    end
                    local __act53 = idris["Foreign.nvimCommand"](nil)(__frame5[6])(" autocmd!")(__eta1)
                    __frame5[7] = {}
                    __frame5[7]["tag"] = "0"
                    __frame5[7]["arg1"] = function(b)
                      return function(a)
                          return function(func)
                              return function(__arg149)
                                  return function(__eta2)
                                      return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta2)
                                    end
                                end
                            end
                        end
                    end
                    __frame5[7]["arg2"] = function(a)
                      return function(__arg482)
                          return function(__eta2)
                              return __arg482
                            end
                        end
                    end
                    __frame5[7]["arg3"] = function(b)
                      return function(a)
                          return function(__arg483)
                              return function(__arg485)
                                  return function(__eta2)
                                      local __act17 = __arg483(__eta2)
                                      local __act16 = __arg485(__eta2)
                                      return __act17(__act16)
                                    end
                                end
                            end
                        end
                    end
                    __frame5[8] = {}
                    __frame5[8]["tag"] = "0"
                    __frame5[8]["arg1"] = __frame5[7]
                    __frame5[8]["arg2"] = function(b)
                      return function(a)
                          return function(__arg644)
                              return function(__arg645)
                                  return function(__eta2)
                                      local __act54 = __arg644(__eta2)
                                      return __arg645(__act54)(__eta2)
                                    end
                                end
                            end
                        end
                    end
                    __frame5[8]["arg3"] = function(a)
                      return function(__arg647)
                          return function(__eta2)
                              local __act54 = __arg647(__eta2)
                              return __act54(__eta2)
                            end
                        end
                    end
                    __frame5[9] = {}
                    __frame5[9]["tag"] = "0"
                    __frame5[9]["arg1"] = __frame5[8]
                    __frame5[9]["arg2"] = function(a)
                      return function(__arg6794)
                          return __arg6794
                        end
                    end
                    __frame5[10] = {}
                    __frame5[10]["tag"] = "0"
                    __frame5[11] = {}
                    __frame5[11]["tag"] = "1"
                    __frame5[11]["arg1"] = "Commands"
                    __frame5[11]["arg2"] = __frame5[10]
                    __frame5[12] = {}
                    __frame5[12]["tag"] = "0"
                    __frame5[12]["arg1"] = "loadCurrent"
                    __frame5[13] = {}
                    __frame5[13]["tag"] = "2"
                    __frame5[13]["arg1"] = __frame5[11]
                    __frame5[13]["arg2"] = __frame5[12]
                    local __act54 = idris["Foreign.nvimCommand"](nil)(__frame5[9])(idris["Prelude.Types.Strings.++"]("autocmd BufNewFile,BufRead *.idr ")(idris["Prelude.Types.Strings.++"]("lua idris['")(idris["Prelude.Types.Strings.++"](idris["Language.Reflection.TT.show_Show__Name"](__frame5[13]))("'](W)"))))(__eta1)
                    __frame5[14] = {}
                    __frame5[14]["tag"] = "0"
                    __frame5[14]["arg1"] = function(b)
                      return function(a)
                          return function(func)
                              return function(__arg149)
                                  return function(__eta2)
                                      return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta2)
                                    end
                                end
                            end
                        end
                    end
                    __frame5[14]["arg2"] = function(a)
                      return function(__arg482)
                          return function(__eta2)
                              return __arg482
                            end
                        end
                    end
                    __frame5[14]["arg3"] = function(b)
                      return function(a)
                          return function(__arg483)
                              return function(__arg485)
                                  return function(__eta2)
                                      local __act17 = __arg483(__eta2)
                                      local __act16 = __arg485(__eta2)
                                      return __act17(__act16)
                                    end
                                end
                            end
                        end
                    end
                    __frame5[15] = {}
                    __frame5[15]["tag"] = "0"
                    __frame5[15]["arg1"] = __frame5[14]
                    __frame5[15]["arg2"] = function(b)
                      return function(a)
                          return function(__arg644)
                              return function(__arg645)
                                  return function(__eta2)
                                      local __act55 = __arg644(__eta2)
                                      return __arg645(__act55)(__eta2)
                                    end
                                end
                            end
                        end
                    end
                    __frame5[15]["arg3"] = function(a)
                      return function(__arg647)
                          return function(__eta2)
                              local __act55 = __arg647(__eta2)
                              return __act55(__eta2)
                            end
                        end
                    end
                    __frame5[16] = {}
                    __frame5[16]["tag"] = "0"
                    __frame5[16]["arg1"] = __frame5[15]
                    __frame5[16]["arg2"] = function(a)
                      return function(__arg6794)
                          return __arg6794
                        end
                    end
                    return idris["Foreign.nvimCommand"](nil)(__frame5[16])("augroup end")(__eta1)
                  end
              end)(__eta0)
              __frame3[198] = {}
              __frame3[198]["tag"] = "0"
              __frame3[198]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[198]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[198]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[199] = {}
              __frame3[199]["tag"] = "0"
              __frame3[199]["arg1"] = __frame3[198]
              __frame3[199]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act53 = __arg644(__eta1)
                                return __arg645(__act53)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[199]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act53 = __arg647(__eta1)
                        return __act53(__eta1)
                      end
                  end
              end
              __frame3[200] = {}
              __frame3[200]["tag"] = "0"
              __frame3[200]["arg1"] = __frame3[199]
              __frame3[200]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act53 = idris["Foreign.nvimCommand"](nil)(__frame3[200])("augroup IdrisSetBufType")(__eta0)
              __frame3[201] = {}
              __frame3[201]["tag"] = "0"
              __frame3[201]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[201]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[201]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[202] = {}
              __frame3[202]["tag"] = "0"
              __frame3[202]["arg1"] = __frame3[201]
              __frame3[202]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act54 = __arg644(__eta1)
                                return __arg645(__act54)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[202]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act54 = __arg647(__eta1)
                        return __act54(__eta1)
                      end
                  end
              end
              __frame3[203] = {}
              __frame3[203]["tag"] = "0"
              __frame3[203]["arg1"] = __frame3[202]
              __frame3[203]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act54 = idris["Foreign.nvimCommand"](nil)(__frame3[203])(" autocmd!")(__eta0)
              __frame3[204] = {}
              __frame3[204]["tag"] = "0"
              __frame3[204]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[204]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[204]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[205] = {}
              __frame3[205]["tag"] = "0"
              __frame3[205]["arg1"] = __frame3[204]
              __frame3[205]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act55 = __arg644(__eta1)
                                return __arg645(__act55)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[205]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act55 = __arg647(__eta1)
                        return __act55(__eta1)
                      end
                  end
              end
              __frame3[206] = {}
              __frame3[206]["tag"] = "0"
              __frame3[206]["arg1"] = __frame3[205]
              __frame3[206]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act55 = idris["Foreign.nvimCommand"](nil)(__frame3[206])(idris["Prelude.Types.Strings.++"](" autocmd BufEnter ")(idris["Prelude.Types.Strings.++"](idris["Plugin.responseBufferName"])(" set buftype=nofile|set syntax=idris2")))(__eta0)
              __frame3[207] = {}
              __frame3[207]["tag"] = "0"
              __frame3[207]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[207]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[207]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[208] = {}
              __frame3[208]["tag"] = "0"
              __frame3[208]["arg1"] = __frame3[207]
              __frame3[208]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act56 = __arg644(__eta1)
                                return __arg645(__act56)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[208]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act56 = __arg647(__eta1)
                        return __act56(__eta1)
                      end
                  end
              end
              __frame3[209] = {}
              __frame3[209]["tag"] = "0"
              __frame3[209]["arg1"] = __frame3[208]
              __frame3[209]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act56 = idris["Foreign.nvimCommand"](nil)(__frame3[209])("augroup end")(__eta0)
              __frame3[210] = {}
              __frame3[210]["tag"] = "0"
              __frame3[210]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[210]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[210]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[211] = {}
              __frame3[211]["tag"] = "0"
              __frame3[211]["arg1"] = __frame3[210]
              __frame3[211]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act57 = __arg644(__eta1)
                                return __arg645(__act57)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[211]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act57 = __arg647(__eta1)
                        return __act57(__eta1)
                      end
                  end
              end
              __frame3[212] = {}
              __frame3[212]["tag"] = "0"
              __frame3[212]["arg1"] = __frame3[211]
              __frame3[212]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act57 = idris["Foreign.nvimCommand"](nil)(__frame3[212])("vertical rightbelow split")(__eta0)
              __frame3[213] = {}
              __frame3[213]["tag"] = "0"
              __frame3[213]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[213]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[213]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[214] = {}
              __frame3[214]["tag"] = "0"
              __frame3[214]["arg1"] = __frame3[213]
              __frame3[214]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act58 = __arg644(__eta1)
                                return __arg645(__act58)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[214]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act58 = __arg647(__eta1)
                        return __act58(__eta1)
                      end
                  end
              end
              __frame3[215] = {}
              __frame3[215]["tag"] = "0"
              __frame3[215]["arg1"] = __frame3[214]
              __frame3[215]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act58 = idris["Foreign.nvimCommand"](nil)(__frame3[215])("badd idris-response")(__eta0)
              __frame3[216] = {}
              __frame3[216]["tag"] = "0"
              __frame3[216]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[216]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[216]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[217] = {}
              __frame3[217]["tag"] = "0"
              __frame3[217]["arg1"] = __frame3[216]
              __frame3[217]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act59 = __arg644(__eta1)
                                return __arg645(__act59)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[217]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act59 = __arg647(__eta1)
                        return __act59(__eta1)
                      end
                  end
              end
              __frame3[218] = {}
              __frame3[218]["tag"] = "0"
              __frame3[218]["arg1"] = __frame3[217]
              __frame3[218]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act59 = idris["Foreign.nvimCommand"](nil)(__frame3[218])("b idris-response")(__eta0)
              __frame3[219] = {}
              __frame3[219]["tag"] = "0"
              __frame3[219]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[219]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[219]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[220] = {}
              __frame3[220]["tag"] = "0"
              __frame3[220]["arg1"] = __frame3[219]
              __frame3[220]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act60 = __arg644(__eta1)
                                return __arg645(__act60)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[220]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act60 = __arg647(__eta1)
                        return __act60(__eta1)
                      end
                  end
              end
              __frame3[221] = {}
              __frame3[221]["tag"] = "0"
              __frame3[221]["arg1"] = __frame3[220]
              __frame3[221]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              local __act60 = idris["Foreign.nvimCommand"](nil)(__frame3[221])("set buftype=nofile")(__eta0)
              __frame3[222] = {}
              __frame3[222]["tag"] = "0"
              __frame3[222]["arg1"] = function(b)
                return function(a)
                    return function(func)
                        return function(__arg149)
                            return function(__eta1)
                                return idris["Prelude.IO.map_Functor__IO"](nil)(nil)(func)(__arg149)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[222]["arg2"] = function(a)
                return function(__arg482)
                    return function(__eta1)
                        return __arg482
                      end
                  end
              end
              __frame3[222]["arg3"] = function(b)
                return function(a)
                    return function(__arg483)
                        return function(__arg485)
                            return function(__eta1)
                                local __act17 = __arg483(__eta1)
                                local __act16 = __arg485(__eta1)
                                return __act17(__act16)
                              end
                          end
                      end
                  end
              end
              __frame3[223] = {}
              __frame3[223]["tag"] = "0"
              __frame3[223]["arg1"] = __frame3[222]
              __frame3[223]["arg2"] = function(b)
                return function(a)
                    return function(__arg644)
                        return function(__arg645)
                            return function(__eta1)
                                local __act61 = __arg644(__eta1)
                                return __arg645(__act61)(__eta1)
                              end
                          end
                      end
                  end
              end
              __frame3[223]["arg3"] = function(a)
                return function(__arg647)
                    return function(__eta1)
                        local __act61 = __arg647(__eta1)
                        return __act61(__eta1)
                      end
                  end
              end
              __frame3[224] = {}
              __frame3[224]["tag"] = "0"
              __frame3[224]["arg1"] = __frame3[223]
              __frame3[224]["arg2"] = function(a)
                return function(__arg6794)
                    return __arg6794
                  end
              end
              return idris["Foreign.nvimCommand"](nil)(__frame3[224])("wincmd h")(__eta0)
            end
        end)(__ext0)
    end)()
end
--------- RETURN ---------


idris["PrimIO.unsafePerformIO"](nil)(function(__eta0)
  return idris["Plugin.main"](__eta0)
end)
return idris